--- ax25/ax25d.c
+++ ax25/ax25d.c
@@ -260,7 +260,8 @@ static void SignalTERM(int code)
 		syslog(LOG_INFO, "terminating on SIGTERM\n");
 		closelog();
 	}
-
+	// FIXME - hardcoded path
+	unlink("/var/run/ax25d.pid");
 	exit(0);
 }
 
@@ -1083,6 +1084,17 @@ int main(int argc, char *argv[])
 		syslog(LOG_INFO, "starting");
 	}
 
+    /* gjcp - write PID file */
+    // FIXME - should be configurable
+    FILE *f = fopen("/var/run/ax25d.pid", "w");
+
+	if (f == NULL) {
+		syslog(LOG_WARNING, "Couldn't create PID file /var/run/ax25d.pid: %s", strerror(errno));
+	} else {
+		fprintf(f, "%ld\n", (long) getpid());
+		fclose(f);
+	}
+
 	act.sa_handler = SignalHUP;
 	sigemptyset(&act.sa_mask);
 	act.sa_flags = 0;
--- ax25/mheardd.c
+++ ax25/mheardd.c
@@ -98,7 +98,7 @@ static void terminate(int sig)
 		syslog(LOG_INFO, "terminating on SIGTERM\n");
 		closelog();
 	}
-
+	unlink("/var/run/mheardd.pid");
 	exit(0);
 }
 
@@ -210,6 +210,17 @@ int main(int argc, char **argv)
 		syslog(LOG_INFO, "starting");
 	}
 
+    /* gjcp - write PID file */
+    // FIXME - should be configurable
+    FILE *f = fopen("/var/run/mheardd.pid", "w");
+
+	if (f == NULL) {
+		syslog(LOG_WARNING, "Couldn't create PID file /var/run/mheardd.pid: %s", strerror(errno));
+	} else {
+		fprintf(f, "%ld\n", (long) getpid());
+		fclose(f);
+	}
+
 	for (;;) {
 		asize = sizeof(sa);
 
