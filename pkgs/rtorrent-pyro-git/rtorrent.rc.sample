throttle.max_peers.normal.set        = 50
throttle.max_peers.seed.set          = 50
throttle.max_uploads.global.set      = 250
throttle.max_downloads.global.set    = 250

throttle.global_down.max_rate.set_kb = 5000
throttle.global_up.max_rate.set_kb   = 5000

network.port_range.set               = 36767-36767
network.port_random.set              = no
network.http.ssl_verify_peer.set     = no
network.http.dns_cache_timeout.set   = 25
network.xmlrpc.size_limit.set        = 2M

file.prioritize_toc           = 1
pieces.hash.on_completion.set = no
system.umask.set              = 0027
#system.file.allocate.set      = yes
dht.mode.set                  = auto
protocol.pex.set              = no
protocol.encryption.set       = allow_incoming,try_outgoing,enable_retry
#protocol.encryption.set       = allow_incoming,try_outgoing,require,require_RC4

directory.default.set   = ~/.rtorrent/downloads
session.path.set        = ~/.rtorrent/session
network.scgi.open_local = ~/.rtorrent/rtorrent.sock
#ipv4_filter.load        = ~/.rtorrent/ipfilter, unwanted

# LOGS - https://github.com/rakshasa/rtorrent/wiki/LOG_Logging
#log.open_file = "rtorrent.log", (cat,/tmp/rtorrent.log.,(system.pid))
#critical error warn notice info debug
#log.add_output = "info", "rtorrent.log"
#connection_* dht_*" peer_* rpc_* storage_* thread_* tracker_* torrent_*
#log.add_output = "torrent_debug", "tracker.log"
#log.add_output = "tracker_debug", "tracker.log"
log.open_file = "rtorrent", ~/.rtorrent/logs/rtorrent.log
log.add_output = "warn", "rtorrent"

schedule = low_diskspace,5,60,close_low_diskspace=200M
schedule = watch_directory,5,5,"load.start=~/.rtorrent/watch/*.torrent,d.delete_tied="

#
## PyroScope SETTINGS
#

method.insert = pyro.extended, value|const, 1
method.insert = pyro.bin_dir, string|const, ~/bin/
import = ~/.pyroscope/rtorrent-pyro.rc

# TORQUE: Daemon watchdog schedule
# Must be activated by touching the "~/.pyroscope/run/pyrotorque" file!
# Set the second argument to "-v" or "-q" to change log verbosity.
schedule = pyro_watchdog,30,300,"pyro.watchdog=~/.pyroscope,"

# UI/VIEW: Show active and incomplete torrents (in view #0) and update every 20 seconds
# Items are grouped into complete, incomplete, and queued, in that order.
# Within each group, they're sorted by download and then upload speed.
branch=pyro.extended=,false=,"view.sort_current = active,greater=d.up.rate="
branch=pyro.extended=,"view.sort_current = active,\"compare=----,d.is_open=,d.complete=,d.down.rate=,d.up.rate=\""
schedule = filter_active,12,20,"view.filter = active,\"or={d.up.rate=,d.down.rate=,not=$d.complete=}\" ;view.sort=active"

branch=pyro.extended=,"schedule = bind_home,0,0,\"ui.bind_key=download_list,0406,ui.focus.home=\""
branch=pyro.extended=,"schedule = bind_end, 0,0,\"ui.bind_key=download_list,0550,ui.focus.end=\""
branch=pyro.extended=,"schedule = bind_pgup,0,0,\"ui.bind_key=download_list,0523,ui.focus.pgup=\""
branch=pyro.extended=,"schedule = bind_pgdn,0,0,\"ui.bind_key=download_list,0522,ui.focus.pgdn=\""

# Show traffic of the last hour
network.history.depth.set = 112
schedule = network_history_sampling,1,32, network.history.sample=
method.insert = network.history.auto_scale.toggle, simple|private, "branch=network.history.auto_scale=,\"network.history.auto_scale.set=0\",\"network.history.auto_scale.set=1\""
method.insert = network.history.auto_scale.ui_toggle, simple|private, "network.history.auto_scale.toggle= ;network.history.refresh="
branch=pyro.extended=,"schedule = bind_auto_scale,0,0,\"ui.bind_key=download_list,=,network.history.auto_scale.ui_toggle=\""
