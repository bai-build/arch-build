diff -urN ../../src/linux-4.10/drivers/hid/Kconfig ./drivers/hid/Kconfig
--- ../../src/linux-4.10/drivers/hid/Kconfig	2017-02-19 15:34:00.000000000 -0700
+++ ./drivers/hid/Kconfig	2017-03-25 12:04:02.291432651 -0700
@@ -144,6 +144,17 @@
 	- EeeBook X205TA
 	- VivoBook E200HA
 
+config HID_ASUS_GAMING_NB_KBD
+	tristate "ASUS gaming notebook keyboard"
+	depends on HID
+	---help---
+	Support for ASUS keyboard devices that are not fully compliant with 
+	HID standard.
+
+        Say Y if you want support for the non-compliant features of the Asus
+        gaming notebook keyboards, e.g:
+	- Asus Notebook GL553VD/GL553VE/GL753VD/GL753VE
+
 config HID_AUREAL
 	tristate "Aureal"
 	depends on HID
diff -urN ../../src/linux-4.10/drivers/hid/Makefile ./drivers/hid/Makefile
--- ../../src/linux-4.10/drivers/hid/Makefile	2017-02-19 15:34:00.000000000 -0700
+++ ./drivers/hid/Makefile	2017-03-25 12:08:04.664776815 -0700
@@ -26,6 +26,7 @@
 obj-$(CONFIG_HID_APPLE)		+= hid-apple.o
 obj-$(CONFIG_HID_APPLEIR)	+= hid-appleir.o
 obj-$(CONFIG_HID_ASUS)		+= hid-asus.o
+obj-$(CONFIG_HID_ASUS_GAMING_NB_KBD)	+= hid-asus-rog.o
 obj-$(CONFIG_HID_AUREAL)	+= hid-aureal.o
 obj-$(CONFIG_HID_BELKIN)	+= hid-belkin.o
 obj-$(CONFIG_HID_BETOP_FF)	+= hid-betopff.o
diff -urN ../../src/linux-4.10/drivers/hid/hid-asus-rog.c ./drivers/hid/hid-asus-rog.c
--- ../../src/linux-4.10/drivers/hid/hid-asus-rog.c	1969-12-31 17:00:00.000000000 -0700
+++ ./drivers/hid/hid-asus-rog.c	2017-03-25 12:08:24.384777696 -0700
@@ -0,0 +1,81 @@
+/*
+ *  HID driver for some Asus Gaming model equipped with "special" macrokey
+ *  devices for hotkey handling
+ *
+ *  Currently supported devices are:
+ *    ASUS laptops for "Republic of Gamers"
+ *    GL553VD/GL553VE
+ *    GL753VD/GL753VE
+ *
+ *  Copyright (c) 2016 Chris Chiu <chiu@endlessm.com>
+ *
+ *  This module based on hid-gyration
+ *
+ */
+
+/*
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License as published by the Free
+ * Software Foundation; either version 2 of the License, or (at your option)
+ * any later version.
+ */
+
+#include <linux/device.h>
+#include <linux/input.h>
+#include <linux/hid.h>
+#include <linux/module.h>
+
+#include "hid-ids.h"
+
+#define asus_rog_map_key_clear(c)	hid_map_usage_clear(hi, usage, bit, \
+						max, EV_KEY, (c))
+static int asus_rog_input_mapping(struct hid_device *hdev, struct hid_input *hi,
+		struct hid_field *field, struct hid_usage *usage,
+		unsigned long **bit, int *max)
+{
+	if ((usage->hid & HID_USAGE_PAGE) != HID_UP_ASUS_ROG_HOTKEY)
+		return 0;
+
+	set_bit(EV_REP, hi->input->evbit);
+	switch (usage->hid & HID_USAGE) {
+	/* Reported on ASUS Gaming model (Republic of Gamers) keyboards */
+	case 0x6c: asus_rog_map_key_clear(KEY_SLEEP);		break;
+	case 0x88: asus_rog_map_key_clear(KEY_WLAN);		break;
+	case 0xc5: asus_rog_map_key_clear(KEY_KBDILLUMDOWN);	break;
+	case 0xc4: asus_rog_map_key_clear(KEY_KBDILLUMUP);	break;
+	case 0x10: asus_rog_map_key_clear(KEY_BRIGHTNESSDOWN);	break;
+	case 0x20: asus_rog_map_key_clear(KEY_BRIGHTNESSUP);	break;
+	case 0x35: asus_rog_map_key_clear(KEY_DISPLAY_OFF);	break;
+	// KEY_F21 is for ASUS touchpad toggle
+	case 0x6b: asus_rog_map_key_clear(KEY_F21);             break;
+	case 0x82: asus_rog_map_key_clear(KEY_CAMERA);          break;
+	case 0xb5: asus_rog_map_key_clear(KEY_CALC);            break;
+	// KEY_PROG1 for ROG key
+	case 0x38: asus_rog_map_key_clear(KEY_PROG1);           break;
+	// KEY_PROG2 for Fn+C ASUS Splendid
+	case 0xba: asus_rog_map_key_clear(KEY_PROG2);           break;
+	// KEY_PROG3 for Fn+Space Power4Gear Hybrid, may not be present
+	case 0x5c: asus_rog_map_key_clear(KEY_PROG3);           break;
+
+	default:
+		return 0;
+	}
+	return 1;
+}
+
+static const struct hid_device_id asus_rog_devices[] = {
+	{ HID_USB_DEVICE(USB_VENDOR_ID_ASUSTEK, USB_DEVICE_ID_ASUSTEK_ROG_MACROKEY1) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_ASUSTEK, USB_DEVICE_ID_ASUSTEK_ROG_MACROKEY2) },
+	{ }
+};
+MODULE_DEVICE_TABLE(hid, asus_rog_devices);
+
+static struct hid_driver asus_rog_driver = {
+	.name = "asus-rog",
+	.id_table = asus_rog_devices,
+	.input_mapping = asus_rog_input_mapping,
+};
+module_hid_driver(asus_rog_driver);
+
+MODULE_LICENSE("GPL");
+
diff -urN ../../src/linux-4.10/drivers/hid/hid-core.c ./drivers/hid/hid-core.c
--- ../../src/linux-4.10/drivers/hid/hid-core.c	2017-02-19 15:34:00.000000000 -0700
+++ ./drivers/hid/hid-core.c	2017-03-25 12:09:46.268114689 -0700
@@ -1859,6 +1859,8 @@
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER1_TP_ONLY) },
 	{ HID_I2C_DEVICE(USB_VENDOR_ID_ASUSTEK, USB_DEVICE_ID_ASUSTEK_NOTEBOOK_KEYBOARD) },
 	{ HID_I2C_DEVICE(USB_VENDOR_ID_ASUSTEK, USB_DEVICE_ID_ASUSTEK_TOUCHPAD) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_ASUSTEK, USB_DEVICE_ID_ASUSTEK_ROG_MACROKEY1) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_ASUSTEK, USB_DEVICE_ID_ASUSTEK_ROG_MACROKEY2) },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_AUREAL, USB_DEVICE_ID_AUREAL_W01RN) },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_BELKIN, USB_DEVICE_ID_FLIP_KVM) },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_BETOP_2185BFM, 0x2208) },
diff -urN ../../src/linux-4.10/drivers/hid/hid-ids.h ./drivers/hid/hid-ids.h
--- ../../src/linux-4.10/drivers/hid/hid-ids.h	2017-02-19 15:34:00.000000000 -0700
+++ ./drivers/hid/hid-ids.h	2017-03-25 12:14:20.918126962 -0700
@@ -174,6 +174,8 @@
 #define USB_DEVICE_ID_ASUSTEK_LCM	0x1726
 #define USB_DEVICE_ID_ASUSTEK_LCM2	0x175b
 #define USB_DEVICE_ID_ASUSTEK_NOTEBOOK_KEYBOARD	0x8585
+#define USB_DEVICE_ID_ASUSTEK_ROG_MACROKEY1	0x1854
+#define USB_DEVICE_ID_ASUSTEK_ROG_MACROKEY2	0x1837
 #define USB_DEVICE_ID_ASUSTEK_TOUCHPAD	0x0101
 
 #define USB_VENDOR_ID_ATEN		0x0557
diff -urN ../../src/linux-4.10/gl502vs-hotkeys.patch ./gl502vs-hotkeys.patch
--- ../../src/linux-4.10/gl502vs-hotkeys.patch	1969-12-31 17:00:00.000000000 -0700
+++ ./gl502vs-hotkeys.patch	2017-03-25 12:38:31.874858467 -0700
@@ -0,0 +1,141 @@
+diff -urN ../../src/linux-4.10/drivers/hid/Kconfig ./drivers/hid/Kconfig
+--- ../../src/linux-4.10/drivers/hid/Kconfig	2017-02-19 15:34:00.000000000 -0700
++++ ./drivers/hid/Kconfig	2017-03-25 12:04:02.291432651 -0700
+@@ -144,6 +144,17 @@
+ 	- EeeBook X205TA
+ 	- VivoBook E200HA
+ 
++config HID_ASUS_GAMING_NB_KBD
++	tristate "ASUS gaming notebook keyboard"
++	depends on HID
++	---help---
++	Support for ASUS keyboard devices that are not fully compliant with 
++	HID standard.
++
++        Say Y if you want support for the non-compliant features of the Asus
++        gaming notebook keyboards, e.g:
++	- Asus Notebook GL553VD/GL553VE/GL753VD/GL753VE
++
+ config HID_AUREAL
+ 	tristate "Aureal"
+ 	depends on HID
+diff -urN ../../src/linux-4.10/drivers/hid/Makefile ./drivers/hid/Makefile
+--- ../../src/linux-4.10/drivers/hid/Makefile	2017-02-19 15:34:00.000000000 -0700
++++ ./drivers/hid/Makefile	2017-03-25 12:08:04.664776815 -0700
+@@ -26,6 +26,7 @@
+ obj-$(CONFIG_HID_APPLE)		+= hid-apple.o
+ obj-$(CONFIG_HID_APPLEIR)	+= hid-appleir.o
+ obj-$(CONFIG_HID_ASUS)		+= hid-asus.o
++obj-$(CONFIG_HID_ASUS_GAMING_NB_KBD)	+= hid-asus-rog.o
+ obj-$(CONFIG_HID_AUREAL)	+= hid-aureal.o
+ obj-$(CONFIG_HID_BELKIN)	+= hid-belkin.o
+ obj-$(CONFIG_HID_BETOP_FF)	+= hid-betopff.o
+diff -urN ../../src/linux-4.10/drivers/hid/hid-asus-rog.c ./drivers/hid/hid-asus-rog.c
+--- ../../src/linux-4.10/drivers/hid/hid-asus-rog.c	1969-12-31 17:00:00.000000000 -0700
++++ ./drivers/hid/hid-asus-rog.c	2017-03-25 12:08:24.384777696 -0700
+@@ -0,0 +1,81 @@
++/*
++ *  HID driver for some Asus Gaming model equipped with "special" macrokey
++ *  devices for hotkey handling
++ *
++ *  Currently supported devices are:
++ *    ASUS laptops for "Republic of Gamers"
++ *    GL553VD/GL553VE
++ *    GL753VD/GL753VE
++ *
++ *  Copyright (c) 2016 Chris Chiu <chiu@endlessm.com>
++ *
++ *  This module based on hid-gyration
++ *
++ */
++
++/*
++ * This program is free software; you can redistribute it and/or modify it
++ * under the terms of the GNU General Public License as published by the Free
++ * Software Foundation; either version 2 of the License, or (at your option)
++ * any later version.
++ */
++
++#include <linux/device.h>
++#include <linux/input.h>
++#include <linux/hid.h>
++#include <linux/module.h>
++
++#include "hid-ids.h"
++
++#define asus_rog_map_key_clear(c)	hid_map_usage_clear(hi, usage, bit, \
++						max, EV_KEY, (c))
++static int asus_rog_input_mapping(struct hid_device *hdev, struct hid_input *hi,
++		struct hid_field *field, struct hid_usage *usage,
++		unsigned long **bit, int *max)
++{
++	if ((usage->hid & HID_USAGE_PAGE) != HID_UP_ASUS_ROG_HOTKEY)
++		return 0;
++
++	set_bit(EV_REP, hi->input->evbit);
++	switch (usage->hid & HID_USAGE) {
++	/* Reported on ASUS Gaming model (Republic of Gamers) keyboards */
++	case 0x6c: asus_rog_map_key_clear(KEY_SLEEP);		break;
++	case 0x88: asus_rog_map_key_clear(KEY_WLAN);		break;
++	case 0xc5: asus_rog_map_key_clear(KEY_KBDILLUMDOWN);	break;
++	case 0xc4: asus_rog_map_key_clear(KEY_KBDILLUMUP);	break;
++	case 0x10: asus_rog_map_key_clear(KEY_BRIGHTNESSDOWN);	break;
++	case 0x20: asus_rog_map_key_clear(KEY_BRIGHTNESSUP);	break;
++	case 0x35: asus_rog_map_key_clear(KEY_DISPLAY_OFF);	break;
++	// KEY_F21 is for ASUS touchpad toggle
++	case 0x6b: asus_rog_map_key_clear(KEY_F21);             break;
++	case 0x82: asus_rog_map_key_clear(KEY_CAMERA);          break;
++	case 0xb5: asus_rog_map_key_clear(KEY_CALC);            break;
++	// KEY_PROG1 for ROG key
++	case 0x38: asus_rog_map_key_clear(KEY_PROG1);           break;
++	// KEY_PROG2 for Fn+C ASUS Splendid
++	case 0xba: asus_rog_map_key_clear(KEY_PROG2);           break;
++	// KEY_PROG3 for Fn+Space Power4Gear Hybrid, may not be present
++	case 0x5c: asus_rog_map_key_clear(KEY_PROG3);           break;
++
++	default:
++		return 0;
++	}
++	return 1;
++}
++
++static const struct hid_device_id asus_rog_devices[] = {
++	{ HID_USB_DEVICE(USB_VENDOR_ID_ASUSTEK, USB_DEVICE_ID_ASUSTEK_ROG_MACROKEY1) },
++	{ HID_USB_DEVICE(USB_VENDOR_ID_ASUSTEK, USB_DEVICE_ID_ASUSTEK_ROG_MACROKEY2) },
++	{ }
++};
++MODULE_DEVICE_TABLE(hid, asus_rog_devices);
++
++static struct hid_driver asus_rog_driver = {
++	.name = "asus-rog",
++	.id_table = asus_rog_devices,
++	.input_mapping = asus_rog_input_mapping,
++};
++module_hid_driver(asus_rog_driver);
++
++MODULE_LICENSE("GPL");
++
+diff -urN ../../src/linux-4.10/drivers/hid/hid-core.c ./drivers/hid/hid-core.c
+--- ../../src/linux-4.10/drivers/hid/hid-core.c	2017-02-19 15:34:00.000000000 -0700
++++ ./drivers/hid/hid-core.c	2017-03-25 12:09:46.268114689 -0700
+@@ -1859,6 +1859,8 @@
+ 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER1_TP_ONLY) },
+ 	{ HID_I2C_DEVICE(USB_VENDOR_ID_ASUSTEK, USB_DEVICE_ID_ASUSTEK_NOTEBOOK_KEYBOARD) },
+ 	{ HID_I2C_DEVICE(USB_VENDOR_ID_ASUSTEK, USB_DEVICE_ID_ASUSTEK_TOUCHPAD) },
++	{ HID_USB_DEVICE(USB_VENDOR_ID_ASUSTEK, USB_DEVICE_ID_ASUSTEK_ROG_MACROKEY1) },
++	{ HID_USB_DEVICE(USB_VENDOR_ID_ASUSTEK, USB_DEVICE_ID_ASUSTEK_ROG_MACROKEY2) },
+ 	{ HID_USB_DEVICE(USB_VENDOR_ID_AUREAL, USB_DEVICE_ID_AUREAL_W01RN) },
+ 	{ HID_USB_DEVICE(USB_VENDOR_ID_BELKIN, USB_DEVICE_ID_FLIP_KVM) },
+ 	{ HID_USB_DEVICE(USB_VENDOR_ID_BETOP_2185BFM, 0x2208) },
+diff -urN ../../src/linux-4.10/drivers/hid/hid-ids.h ./drivers/hid/hid-ids.h
+--- ../../src/linux-4.10/drivers/hid/hid-ids.h	2017-02-19 15:34:00.000000000 -0700
++++ ./drivers/hid/hid-ids.h	2017-03-25 12:14:20.918126962 -0700
+@@ -174,6 +174,8 @@
+ #define USB_DEVICE_ID_ASUSTEK_LCM	0x1726
+ #define USB_DEVICE_ID_ASUSTEK_LCM2	0x175b
+ #define USB_DEVICE_ID_ASUSTEK_NOTEBOOK_KEYBOARD	0x8585
++#define USB_DEVICE_ID_ASUSTEK_ROG_MACROKEY1	0x1854
++#define USB_DEVICE_ID_ASUSTEK_ROG_MACROKEY2	0x1837
+ #define USB_DEVICE_ID_ASUSTEK_TOUCHPAD	0x0101
+ 
+ #define USB_VENDOR_ID_ATEN		0x0557
diff -urN ../../src/linux-4.10/include/linux/hid.h ./include/linux/hid.h
--- ../../src/linux-4.10/include/linux/hid.h	2017-02-19 15:34:00.000000000 -0700
+++ ./include/linux/hid.h	2017-03-25 12:15:19.458129578 -0700
@@ -170,6 +170,7 @@
 #define HID_UP_LOGIVENDOR	0xffbc0000
 #define HID_UP_LOGIVENDOR2   0xff090000
 #define HID_UP_LOGIVENDOR3   0xff430000
+#define HID_UP_ASUS_ROG_HOTKEY	0xff310000
 #define HID_UP_LNVENDOR		0xffa00000
 #define HID_UP_SENSOR		0x00200000
 
