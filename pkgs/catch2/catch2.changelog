Changelog
=========


v2.2.1 (2018-03-11)
-------------------
- V2.2.1. [Martin Hořeňovský]
- Bring in Clara v1.1.4. [Martin Hořeňovský]

  This fixes #1214
- Fix incorrectly clamped return value. [Martin Hořeňovský]

  Fixes #1215


v2.2.0 (2018-03-07)
-------------------
- V2.2.0. [Martin Hořeňovský]
- Don't build `dev-appveyor*` branches on TravisCI. [Martin Hořeňovský]
- Merge pull request #1206 from zemasoft/master. [Martin Hořeňovský]

  Introduce support for DJGPP cross compiler
- Merge branch 'master' into master. [Martin Hořeňovský]
- Fixup various spelling errors (#1208) [Josh Soref]
- Ensure Catch2ConfigVersion.cmake is installed properly. [Bastian
  Dörig]

  The old version would lead to error when Catch was installed
  as a subproject. The file would be written to the subproject's
  build directory and then would not be installed properly.
- Speed up AppVeyor build times. [Martin Hořeňovský]

  * Examples are no longer built for all images
  * Coverage is no longer collected from every build
  * The number of configurations is reduced
- Simplify internal configuration of POSIX signals. [Martin Hořeňovský]
- Stop installing lcov in builds without COVERAGE=1. [Martin Hořeňovský]
- Speed up TravisCI build. [Martin Hořeňovský]

  * Examples are no longer built on all travis images
  * Coverage is no longer collected from all travis images
  * Valgrind is no longer used with all travis images

  This should greatly reduce the amount of compiling, downloading
  binaries and general work the common images do.
- Fix C++14 toggle for OSX build. [Martin Hořeňovský]
- Use char const * const * for Session::run. [Martin Hořeňovský]

  Needed to embed newer version of Clara

  Closes #1178
  Closes #1031
- Cleanup for performance reasons. [Martin Hořeňovský]

  * Eliminated some copies
  * Made makeTestCase fit into 4 arguments -- avoids spills on Win64
  * Made string literals into StringRef literals
- Introduce support for DJGPP cross compiler. [Tomas Zeman]

  DJGPP cross compiler is targeting DOS which does not support POSIX
  signals. Probably for the same reason (targeting DOS) this compiler
  does not support wide characters.
- Introduce conditional wchar_t (and std::wstring) support. [Tomas
  Zeman]

  The support is turned on by default but the user might need to be able
  to turn it off which is now possible by defining CATCH_CONFIG_NO_WCHAR.
- Fix 'defined but not used' warning. [Tomas Zeman]

  The warning occurred when !CATCH_CONFIG_WINDOWS_SEH
  && !CATCH_CONFIG_POSIX_SIGNALS.
- Provide a public method to get StringRef's underlying pointer. [Martin
  Hořeňovský]

  This allows reducing the amount of friends needed for its interface
  and some extra tricks later.

  The bad part is that the pointer can become invalidated via
  calls to other StringRef's public methods, but c'est la vie.
- StringRef appends itself to std::string efficiently. [Martin
  Hořeňovský]
- Document CATCH_CONFIG_CPP17_UNCAUGHT_EXCEPTIONS macro. [Martin
  Hořeňovský]

  Also fix how it can be disabled.
- Simplify logic selecting between signal handling/SEH/nothing. [Martin
  Hořeňovský]

  It was a bit of a mess previously
- Fix how windows.h is included in our files. [Martin Hořeňovský]

  To prevent bugs with stitching system headers inside Catch,
  the proxy header is responsible for guarding against inclusion
  on Linux, rather than the includers.

  Might be related to #1197
- StringRef will not take ownership when writing itself to stream.
  [Martin Hořeňovský]

  This also fixes some tests that were previously failing unnoticed - WTF?
- Fix doubled line in baselines. [Martin Hořeňovský]
- Covered more translation possibilities. [Martin Hořeňovský]
- Cleanup some tests. [Martin Hořeňovský]
- Move fallback conversion after enum-check. [Martin Hořeňovský]
- Add test for overriding the fallback stringifier. [Martin Hořeňovský]
- Removed unnecessary use of ostringstream from catch_enforce.h. [Phil
  Nash]
- Add SpECTRE project to list of users. [Nils Deppe]
- Document CATCH_CONFIG_DEFAULT_REPORTER macro. [Martin Hořeňovský]
- Add a way to change fallback stringifier. [Martin Hořeňovský]

  This allows reuse of projects existing stringification machinery

  Closes #1024
- Fix typos in documentation. [Martin Hořeňovský]
- Disable POSIX signals for Emscripten. [Martin Hořeňovský]

  Related to #1114
- Add another known bug to limitations.md. [Martin Hořeňovský]

  Related to #1183
- Set patch coverage check to target 80% [Martin Hořeňovský]
- Https://github.com/catchorg/Catch2/issues/1175 - don't list hidden
  tests by default. [dvirtz]
- Add option to warn when no tests ran. [dvirtz]

  Closes #1158


v1.12.1 (2018-03-02)
--------------------
- V1.12.1. [Martin Hořeňovský]
- Fix deprecation warning in ~ScopedMessage. [Martin Hořeňovský]
- Wrap all uses in min and max in extra parentheses. [Martin Hořeňovský]

  This prevents `min` and `max` macros from windows headers (!@#$)
  from breaking compilation.

  Related to #1191
- Update path for catch-classic vcpkg's portfile. [Martin Hořeňovský]


v2.1.2 (2018-02-09)
-------------------
- V2.1.2. [Martin Hořeňovský]
- Passthrough error code from coverage helper. [Martin Hořeňovský]
- Update version of Clara. [Martin Hořeňovský]

  Fixes #1165
- Keep .py files with LF endings so they can be executed from bash.
  [Martin Hořeňovský]
- Make embedClara.py executable. [Martin Hořeňovský]
- Force MSVC to use utf-8. [Martin Hořeňovský]
- Update approval tests. [Martin Hořeňovský]
- Add tests for StringRef::numberOfCharacters. [Martin Hořeňovský]
- Remove superfluous comment. [Martin Hořeňovský]
- Export Catch as a CMake package and 'linkable' target. [Daniel J.
  Rollins]

  Create a namespaced Catch2::Catch target that is 'linkable' through
  `target_link_libraries()` and export it so it is findable through
  `find_package()`.

  `find_package()` will find versions with the same major number and with
  minor number >= requested.

  This makes catch a lot easier to use in CMake-based projects. Whether it
  is found using `find_package` or included in the client project as a
  subdirectory, the client can include the catch headers per-target with
  `target_include_directories(target PRIVATE Catch2::Catch).

  Example usage:

      cmake_minimum_required(VERSION 3.1)

      # include Catch2 as subdirectory or installed package
      # add_subdirectory(Catch2)
      find_package(Catch2 VERSION 2.1.0 REQUIRED)

      add_executable(tests tests/catch_main.cpp)
      target_link_libraries(tests PRIVATE Catch2::Catch)
- Enable -Wpedantic, fix unconditional use of C++14 extension. [Martin
  Hořeňovský]
- Remove unnecessary semicolons. [Zachary Michaels]
- Redirect std::uncaught_exception to Catch::uncaught_exception. [Josh
  Lospinoso]

  This means that only one place needs to work with warnings from
  the deprecation of `std::uncaught_exception()` in C++17.

  Closes #1162.
- Add Catch::is_range to documentation. [Martin Hořeňovský]
- Fixes for cygwin. [philsquared]
- Add a BrightYellow colour, also use it for reconstructed exprs.
  [Martin Hořeňovský]

  Closes #979
- Prefer operator<< to range-based stringification. [Martin Hořeňovský]

  Fixes #1172
- Update opensource-users.md. [George Fotopoulos]
- Add CATCH_VERSION_* defines for external use. [Martin Hořeňovský]

  I wonder how much use they will actually see, but their cost is
  fairly minor.

  Closes #1131
- Fixed NoAssertions warning. [Phil Nash]
- Keep LICENCE.txt with LF as line endings for easy hashing. [Martin
  Hořeňovský]


v2.1.1 (2018-01-26)
-------------------
- V2.1.1. [Martin Hořeňovský]
- Add % to codecov coverage decrease threshold. [Martin Hořeňovský]

  Maybe now it will work?
- Guard against CLR exceptions when translating exceptions. [Martin
  Hořeňovský]

  Partially fixes #1138, need to decide what to do about structured
  exceptions.
- Added Catch::clara namespace to doc for adding Opt. [Phil Nash]

  - Thanks to sakamoto-poteko in #1159 for point out its ommission
- Embed Clara v1.1.1. [Phil Nash]
- Namespace Catch CMake options. [David Seifert]
- Specify VERSION in modern CMake. [David Seifert]
- Make generateSingleHeader compatible with Python 2.7. [Martin
  Hořeňovský]
- Return fixed codecov settings. [Martin Hořeňovský]
- Change CMake project name to 'Catch2' [David Seifert]
- Install documentation. [David Seifert]
- Use CTest to control test suite via BUILD_TESTING. [David Seifert]
- Use `GNUInstallDirs` module. [David Seifert]

  * `GNUInstallDirs` is a standardised way to
    change paths, which makes systems integration
    easier and allows for a more consistent user
    experience.
- Ensure that the single header is kept with LFs. [Martin Hořeňovský]
- Modify codecov.yml again. [Martin Hořeňovský]
- Allow disabling -Werror in CMake. [Martin Hořeňovský]

  Related to #1152
- Provide useful and unambigous stringification for static arrays.
  [Martin Hořeňovský]
- Add yet another expansion of INF macro. [Martin Hořeňovský]

  Closes #1151
- Fix compilation for types where relops don't return bool. [Martin
  Hořeňovský]

  Closes #1147
- Update CTest autodiscovery documentation. [Martin Hořeňovský]
- Update reporter docs with their new location. [Martin Hořeňovský]
- Comment why the return code is clamped. [Martin Hořeňovský]
- Update path to vcpkg's portfile. [Martin Hořeňovský]
- Catch ``catch_discover_tests`` [garethsb-sony]

  Copied from [Dynamic Catch test discovery in CMake](https://gist.github.com/garethsb/a01ed0dbd4977d439c16200640549935), which was inspired by [Dynamic Google Test Discovery in CMake 3.10](https://blog.kitware.com/dynamic-google-test-discovery-in-cmake-3-10/).

  Original source code:

  - Adapted by [Gareth Sylvester-Bradley](https://github.com/garethsb) from [GoogleTest ``gtest_discover_tests``](https://gitlab.kitware.com/cmake/cmake/merge_requests/1056).
  - BSD 3-clause "New" or "Revised" License.
  - Copyright 2000-2017 Kitware, Inc. and Contributors. All rights reserved.
- Modify codecov behaviour. [Martin Hořeňovský]
- Update release process with the need to release reporters. [Martin
  Hořeňovský]
- Fix script responsible for updating release link in the readme.
  [Martin Hořeňovský]


v1.12.0 (2018-01-12)
--------------------
- V1.12.0. [Martin Hořeňovský]
- Revert backport of new evaluate layer to fix C++98 compilation.
  [Martin Hořeňovský]

  The backport fixed some bugs (ie #981), but caused strict C++98
  (and MSVC 9) compilers to fail. This means that we will
  reintroduce some issues but get back compatibility with obsolete
  compilers. People using newer ones can keep using Catch2.

  This reverts commit b6e7c9bd7a160c07c5de894292022687895c17a3.
  This reverts commit b7bd52cc98f8a9b646a13241ce8355ba97b8bab3.

  Should fix #1103
- Include Info messages in xml reporter even without -s. [Phil Nash]


v2.1.0 (2018-01-10)
-------------------
- V2.1.0. [Martin Hořeňovský]
- Copy reporters to single_include during releases. [Martin Hořeňovský]
- Exclude string-literal arrays from automatic range serialisation.
  [Phil Nash]

  These have specialised serialisers already anyway, and were causing ambiguities in VS 2015 & 2017
- Merge commit '2c43620d9baed1fdcaa9146af1d3eb90520cbe92' [Phil Nash]
- Exclude benchmark dir. [Phil Nash]
- Added test for stringifying std::arrays. [Phil Nash]
- Fix stringifying of unknown enums. [Phil Nash]
- Added special handling for vector<bool> when stringifying. [Phil Nash]
- Added tests for stringifying map and set. [Phil Nash]
- Added generic container detection in StringMaker. [Phil Nash]

  Removed vector specialisation as this is now covered generically - as are any containers that can be called via (freestanding) begin/ end
- Add fuxedo.io to open source users. [Aivars Kalvans]
- Cleanly override warning level for SelfTest in MSVC. [philsquared]

  Eliminates warning about warning level override (by removing the default /W3)
- Test different way of excluding system headers. [Martin Hořeňovský]
- Added DtCraft to Open Source users. [Phil Nash]
- Add coverage badge. [Martin Hořeňovský]
- Trivial typo fix. (#1119) [Dan Nissenbaum]
- Update MessageTests.cpp. [Pfiffikus]

  typo corrected
- Fix a7a9ee5. [Martin Hořeňovský]
- Manual cherry-pick from #1111. [Martin Hořeňovský]

  This hsould merge still-valid piece of #1111 into master.
- Force Travis badge to use status of master branch. [Martin Hořeňovský]
- Point AppVeyor status badge at status for this repo. [Martin
  Hořeňovský]

  Previously it pointed to AppVeyor's test repo status
- Removed debug code accidentally left in previous commit. [Phil Nash]
- Increased int size for timers to avoid truncations. [Phil Nash]
- Fix std::uncaught_exception deprecation warning in ~ScopedMessage.
  [Martin Hořeňovský]

  Closes #1124
- Add UnorderedEqualsMatcher for vectors. [Martin Hořeňovský]

  Closes #1093
- Some bits of tidy up. [Phil Nash]
- Add compact reporter baseline. [Martin Hořeňovský]
- Make approval tests also check compact reporter. [Martin Hořeňovský]
- Add constructor arg checking to WithinAbsMatcher. [Martin Hořeňovský]

  Also tests :-)
- Xml reporter reports WARN message when not used with -s. [Phil Nash]
- Moved runner helpers into Catch namespace. [Phil Nash]

  not sure they weren't there to start with
- Refactored StreamRedirect classes. [Phil Nash]
- Added clog test. [Phil Nash]
- Revirtualised IResultCapture methods. [Phil Nash]

  Didn't really impact runtime anyway, but will need to use interface for threading support.
- Simplify code coverage CMake toggle. [Martin Hořeňovský]
- Add release notes from the EOL of Catch Classic. [Martin Hořeňovský]
- Remove debug prints from batch scripts. [Martin Hořeňovský]
- No longer rename AppVeyor builds. [Martin Hořeňovský]
- Add codecov.io coverage collection from AppVeyor. [Martin Hořeňovský]

  Also had to add new project to redirect CTest output, add
  separate batch scripts for AppVeyor because it doesn't handle
  multi-line batch scripts in yaml properly, and other helper
  scripts.
- Just track whether last assertion passed directly, rather than deduce
  it from counts. [Phil Nash]
- Removed assertionRun() and rolled its logic into assertionPassed() and
  assertionEnded() [Phil Nash]
- Remove system headers when preprocessing coverage report. [Martin
  Hořeňovský]
- Small clean-ups. [Phil Nash]
- Fix teamcity reporter compilation with single header. [Martin
  Hořeňovský]
- Moved -Wparentheses suppression before the push for GCC. [Phil Nash]

  Because of bugs in GCC 4 & 5 that prevent _Pragma from working :-(
- Globally suppress Wunused-variable again, for now. [Phil Nash]
- Stop leaking some warning suppressions to user code. [Phil Nash]
- Add more weird chrono::duration stringification tests. [Martin
  Hořeňovský]
- Also test Approx template constructor. [Martin Hořeňovský]
- Stop using brew if not needed -- fix build on XCode9 image. [Martin
  Hořeňovský]
- De-virtualised isBinaryExpression() and getResult() on
  ITransientExpression. [Phil Nash]
- Fixed accidental const & formating. [Phil Nash]
- Moved all AssertionHandler logic into RunContext and de-virtualised
  interface. [Phil Nash]

  This makes the assertion handling much less "chatty". AssertionHandler is now just a thin shim over RunContext
- Renamed last usge specific handle method (and made the low level ones
  private) [Phil Nash]
- Add codecov.io coverage tracking. [Martin Hořeňovský]

  * Every Linux build tracks coverage when running Debug mode
  * OS X not supported yet (Future WIP)
  * Our own unit tests, non-default reporters and Clara are ignored
- Refactored most handle() calls to more specific/ descriptive calls.
  [Phil Nash]
- Qualified handleExceptionMatchExpr in Catch:: [Phil Nash]

  (was picking it up by ADL before - no need to rely on that!)
- Add extra tests to ctest. [Martin Hořeňovský]
- Re-enable 2 string tests. [Martin Hořeňovský]
- Move crtdbg.h include outside namespace. [Phil Nash]
- Clean-up re-usable string streams. [Phil Nash]
- Cache IResultCapture in AssertionHandler to avoid repeated lookups.
  [Phil Nash]
- Always debug-break non-inline. [Phil Nash]
- Inline shouldDebugBreak() [Phil Nash]
- Bake exception guard into assertion handler flow. [Phil Nash]
- Reduce amount of CI output on success. [Martin Hořeňovský]
- Remove isTrue, alwaysTrue, alwaysFalse. [Martin Hořeňovský]

  isTrue and alwaysFalse were replaced by (void)0, 0 inspired by doctest
  alwaysTrue was replaced by warning suppression
- Remove superfluous TravisCI build entry. [Martin Hořeňovský]
- Enable Werror for dev builds. [Martin Hořeňovský]
- (re)Inlined isTrue() [Phil Nash]
- Added space in StringRef literal operator. [Phil Nash]
- Removed templated StringRef ctor and added StringRef literal. [Phil
  Nash]
- Ignore all cmake-build-* folders. [Phil Nash]
- Introduce a way to intentionally expose interface for use in tests.
  [Martin Hořeňovský]

  Fixes #1076
- Added missing <cstring> include to stringref.cpp. [Phil Nash]
- Refactored to resetAssertionInfo() [Phil Nash]
- Added StringRef constructor that captures string literal size at
  compile time. [Phil Nash]
- Check single-header using test examples. [Martin Hořeňovský]

  This means that examples build for all matrix entries
- Move imports close to point of usage in Python scripts. [Martin
  Hořeňovský]

  This means that you no longer need urllib2 to regenerate
  single header file, etc
- Split out ratio_string::symbol bodies. [Martin Hořeňovský]
- Fix compilation when using g++ with libc++ [Martin Hořeňovský]

  Fixes #1110
- Merge pull request #1107 from coombez/contrib. [Phil Nash]

  performance improvements
- Performance improvement - getCurrentContext. [Neal Coombes]

  inlined getCurrentContext and getMutableContext
  Further work on #1086.
  Brings test from 0m37.913 to 0m25.584s
  Catch2 is now faster than Catch 1.x!!
- Performance improvement - StringRef::operator= [Neal Coombes]

  inlined and reduced data copy in half.
  Further work on #1086.
  Brings test from 0m44.942s to 0m37.913.
- Inlined StringRef ctors/ dtor and size() and empty() [Phil Nash]
- Merge pull request #1104 from coombez/contrib. [Phil Nash]

  Performance improvement
- Performance improvement. [Neal Coombes]

  Begin to address #1086
  Brings test from 2m51.072s to 1m15.661s
- Added files for multiply inclusions of test cases. [Phil Nash]
- Rebased due to whitespace changes. [Phil Nash]
- Reorganised (some) usage tests so they can be included multiple times.
  [Phil Nash]
- Add inja to open source users (#1106) [lbersch]

  * Add Inja to open-source users
  * Capitalize first letter in user description
  * Fix url
- Fix AssertionPrinter name conflict in console and compact reporters.
  [Neal Coombes]
- Provide WandBox link for online testing. [Martin Hořeňovský]

  It used to be provided for Catch Classic, it was lost during
  transition of Catch2 to master.

  Closes #1101
- Use svg build status icon for AppVeyor. [Martin Hořeňovský]

  Closes #1100
- Refer to example code from the Tutorial. [Martin Moene]
- Add link to event listener example to documentation. [Martin Moene]
- Add list of examples to documentation. [Martin Moene]
- Add matrix element for examples to AppVeyor. [Martin Moene]
- Add matrix element for examples to Travis configuration. [Martin
  Moene]
- Add examples subdirectory to CMake build; included if BUILD_EXAMPLES
  is true. [Martin Moene]
- Add examples folder with initial examples. [Martin Moene]
- Update 3rd party bugs documentation. [Martin Hořeňovský]

  Removes bugs from no longer supported compilers
  Adds a confirmed 3rd party bug in VS 2015

  Closes #881
- Fix typo in build system docs. [Martin Hořeňovský]
- Initial prototype of PCH support. [Martin Hořeňovský]

  Related to #1061
- Provide ConsoleReporter declaration with EXTERNAL_INTERFACES. [Martin
  Hořeňovský]

  Related to #991
- Provide XmlReporter declaration with EXTERNAL_INTERFACES. [Martin
  Hořeňovský]

  Related to #991
- Provide JunitReporter declaration with EXTERNAL_INTERFACES. [Martin
  Hořeňovský]

  Related to #991
- Provide CompactReporter declaration with EXTERNAL_INTERFACES. [Martin
  Hořeňovský]

  Related to #991
- Conditionally compile problematic tests under old libstdc++ [Martin
  Hořeňovský]
- Workaround libstdc++-4.8 regex issue in approval tests. [Martin
  Hořeňovský]
- All tests files have .tests.cpp suffix. Also moved tests out of
  TestMain.cpp and moved up a level. [Phil Nash]
- Split SelfTest test files into Usage and Introspective varieties.
  [Phil Nash]
- Add tests for case insensitive string matching. [Martin Hořeňovský]
- Provide a regex matcher against std::string. [Martin Hořeňovský]

  Related to #1040
- Remove pointless StringRef -> std::string conversions. [Martin
  Hořeňovský]
- Change how non-nullness is enforce in StringRef constructor. [Martin
  Hořeňovský]
- Fix pointless type mismatch between StringRef and std::string. [Martin
  Hořeňovský]
- Move StringRef's impl details to anonymous namespace. [Martin
  Hořeňovský]
- Stop recounting constant string's length on each passed assertion.
  [Martin Hořeňovský]
- Don't invoke UB when nullptr is passed to StringRef constructor.
  [Martin Hořeňovský]
- Don't call strlen in StringRef when the length was already passed.
  [Martin Hořeňovský]
- Removed vestigal ComparatorT template arg to MatcherBase. [Phil Nash]
- Add compilation test for #1027. [Martin Hořeňovský]
- Final set of fixes for floating matchers approvals. [Martin
  Hořeňovský]
- Fix OS X compilation error. [Martin Hořeňovský]
- Add another MSVC NAN macro. [Martin Hořeňovský]
- Add NAN test for Approx. [Martin Hořeňovský]
- Remove leftover commented out lines. [Martin Hořeňovský]
- Add ULP and margin matcher. [Martin Hořeňovský]

  Closes #1074
- Fixed release notes mention of *_THROWS_MATCHES. [Phil Nash]

  As reported in #1088
- Revert "Move <ctime> include out of line" [Martin Hořeňovský]

  This reverts commit 36f02d76d679f0f44a0c64393e934771730d5e6e.
- Move <ctime> include out of line. [Martin Hořeňovský]
- Updated badges (again) for Catch2. [Phil Nash]
- Added missing <memory> include. [Phil Nash]
- Introduced ReusableStringStream and removed all uses of
  std::ostringstream from the main path. [Phil Nash]

  ReusableStringStream holds a std::ostringstream internally, but only exposes the ostream interface.
  It caches a pool of ostringstreams in a vector which is currently global, but will be made thread-local.

  Altogether this should enable both runtime and compile-time benefits. although more work is needed to realise the compile time opportunities.
- Moved a lot of stream related stuff out of the public headers and
  replaced more ostream dependencies with iosfwd. [Phil Nash]
- Tweaked logo. [Phil Nash]
- Added link to Catch2 blog post. [Phil Nash]
- Refreshed artwork for Catch2. [Phil Nash]
- Improve travis.yml. [Martin Hořeňovský]

  - Added new compilers and OS X images
  - Option to run SelfTest under Valgrind
  - Merge "Debug" and "Release" configurations into one run
  -- This saves apt setup and cmake download step per compiler, 60-90s
  - Fix C++14 compilation under Clang 3.8 and up
- Fix platform detection for iOS. [Daniel Doubleday]
- Cleanup travis.yml: remove duplicate compilers, remove unused flag.
  [Martin Hořeňovský]
- Cleanup CMakelists.txt. [Martin Hořeňovský]
- Replace include_directories() with target_include_directories()
  [Martin Moene]

  to prevent inheritance of include directories that possibly lead to a clash.

  A clash occurs when a folder is included, e.g. examples, that wants to use the single-include directory instead of the normal include directory as used by the SelfTest in the next higher level.
- Remove self-include in header. [Martin Hořeňovský]


v2.0.1 (2017-11-05)
-------------------
- Remove spurious test following merge. [Phil Nash]
- Removed zombie files. [Phil Nash]

  These files were removed from the Catch2 branch, and crept back in when Catch2 merged with master
- Locked release notes reference to v2.0.1 release. [Phil Nash]
- Added note about Catch2 to readme. [Phil Nash]
- Updated links in readme. [Phil Nash]
- Updated some Catch references to Catch2. [Phil Nash]
- Merge branch 'catch2' [Phil Nash]
- V2.0.1 release. [Phil Nash]
- Added docs for extending command line with Clara. [Phil Nash]
- Removed handling of start-up exceptions from custom main docs. [Phil
  Nash]
- Print any start-up exceptions in Session's constructor, so custom
  main's don't need to worry about them. [Phil Nash]
- Updated release notes with Approx changes. [Martin Hořeňovský]
- Update Approx documentation. [Martin Hořeňovský]
- Add OSX specific INFINITE macro parsing in approval tests. [Martin
  Hořeňovský]
- Approx cleanup: More tests, INFINITY handling, etc. [Martin
  Hořeňovský]
- Approx rework: default scale == 0, epsilon applies to Approx::value.
  [Pfiffikus]

  Also adds check to Approx::epsilon that the new epsilon has a valid
  (ie one between 0 and 1)

  Based on
  http://realtimecollisiondetection.net/blog/?p=89
  https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/
  https://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html
  https://en.wikipedia.org/wiki/Approximation_error#Formal_Definition

  The given epsilon should refer to the target value, otherwise
  the result would be unexpected, e.g. 101.02 == Approx(100).epsilon(0.01)
  is true.
  The default scale should be invisible, thus,
  e.g. 101.01 == Approx(100).epsilon(0.01) gets false.
  Finally even 101.000001 == Approx(100).epsilon(0.01) is false
- Dev build 6. [Martin Hořeňovský]
- Make Approx::margin inclusive. [Martin Hořeňovský]

  Fixes #952, related to #980
- Update test-cases-and-sections.md. [Pfiffikus]

  some clarification and typo correction
- Fix very minor typo. [Clare Macrae]

  it's -> its
- Update build-systems.md. [Pfiffikus]

  typo correction
- Adds flushes to the output stream of teamcity reporter, making the
  test output more responsive. [Sebastian Grottel]
- `RandomNumberGenerator::result_type` should be unsigned (#1050)
  [Sebastian Grottel]

  `result_type` must be unsigned:
  http://en.cppreference.com/w/cpp/concept/UniformRandomBitGenerator

  Using a signed type causes an infinite loop working with MS Visual Studio 2017, targetting: v140, WindowsTargetPlatformVersion 10.0.15063.0, Debug, x64
- Added PARSE_CATCH_TESTS_ADD_TO_CONFIGURE_DEPENDS option. [dvirtz]
- Fix documentation crosslink in configuration.md. [Martin Hořeňovský]
- Update handling of __JETBRAINS_IDE__ macro. [Dmitry Kozhevnikov]

  1. Use it to conditionally define CATCH_INTERNAL_CONFIG_COUNTER, not
     CATCH_CONFIG_COUNTER, as __JETBRAINS_IDE__ is similar to
     compiler-provided macros, not to user-provided ones.

  2. Since __COUNTER__ will work starting with CLion 2017.3, use it
     when possible (and hopefully remove this check altogether
     at some point).
- Minor - added header-only flag in conan. [solvingj]

  See header-only guidelines:
  http://conanio.readthedocs.io/en/latest/howtos/header_only.html?highlight=header%20only
  Its borderline cosmetic, but it does have a purpose.
- Remove superfluous define from cmake project. [Martin Hořeňovský]
- Remove benchmark binary from main cmake list. [Martin Hořeňovský]

  We can give it a separate CMakeLists.txt later, but there is no
  point in building it every time.
- Fix C4601 and enable C4602 warning for internal builds. [Martin
  Hořeňovský]

  Related to #1072
- Fix missing pragma warning(pop) and other warnings under MSVC. [Martin
  Hořeňovský]

  Fixes #1072
- Embedded v1.0-develop.2 of Clara, which addresses / prefixed options,
  which should impact non-windows platforms. [Phil Nash]

  See #1054
- Fix-up pkg-config provided include path. [Martin Hořeňovský]

  Related to #1032
- Fixed expansion of _FALSE binary expression - see #1051. [Phil Nash]
- Changed rhs expression capture from universal ref to const ref. -
  addresses #1027. [Phil Nash]
- Version of Clara with (std::max) [Phil Nash]
- Enclosed more min/ max in parentheses to default MFC macros. [Phil
  Nash]
- Change ToC script to use <br> instead of trailing spaces. [Martin
  Hořeňovský]

  Also updated docs that contain ToC. Fixes #1048
- Add pkg-config support. [Martin Hořeňovský]

  Closes #1032
- Dev build 5. [Phil Nash]
- Moved windows proxy inclusion outside of CATCH_CONFIG_COLOUR_WINDOWS
  guard, so workaround early inclusion can be removed. [Phil Nash]
- Unconditional windows proxy. [philsquared]
- Mark part of std::chrono stringification tests nonportable. [Martin
  Hořeňovský]
- Fix MSVC compilation when stringifying std::chrono::time_point.
  [Martin Hořeňovský]
- Fix baseline for file where std::pair stringification is not enabled.
  [Martin Hořeňovský]
- Add stringification for std::chrono::{duration,time_point} [Martin
  Hořeňovský]

  Also hides std::chrono, std::pair and std::chrono::* behind
  new configuration macros, CATCH_CONFIG_ENABLE_*_STRINGMAKER
  to avoid dragging in <utility>, <tuple> and <chrono> in common
  path, unless requested.
- Workaround for stitching issue in #1020. [Martin Hořeňovský]

  Closes #1020
- Rename to updateDocumentToC.py and adapt for use with Catch. [Martin
  Moene]

  adding missing GPL 3.0 license (thanks for noting @horenmar).
- Add original markdown_toclify.py by Sebastian Raschk (@rasbt) [Martin
  Moene]

  - https://github.com/rasbt/markdown-toclify
- Updated release notes. [Martin Hořeňovský]
- Replace throw; with std::rethrow_exception(std::current_exception());
  [Martin Hořeňovský]

  This works around a bug in libcxxrt handling of active exception count
  that caused std::uncaught_exception() to return true even if there was
  none.

  Closes #1028
- Direct link to the single header file updated to latest release
  (dev.4). [offa]
- Scoped parseInfos population so `i` can be reused. [Phil Nash]
- Backed out dynamic stack array (use fixed size for now) [Phil Nash]
- New version of Clara. [Phil Nash]
- Changed embed script to just do direct regex substitution. [Phil Nash]
- Reorganize release notes. [Martin Hořeňovský]
- Added benchmark support to MultiReporters - otherwise benchmarks are
  not reported if multiple reporters (usually reporter + listener(s))
  are used. [Phil Nash]
- Dev build 4. [Phil Nash]
- Updated release notes. [Phil Nash]
- Don't use console colour if running in XCode. [Phil Nash]
- OCTest project now #includes all cpp files, so they all get __OBJC__
  defined. [Phil Nash]
- Fixed issues for ObjC use (see #1011) [Phil Nash]
- Updated OCTest project. [Phil Nash]
- Qualified a load of size_ts with std:: namespace (all those not from
  Clara) [Phil Nash]
- Use StringRef on fatal error path. [Martin Hořeňovský]

  So far the fatal error path only uses string literals, so this removes
  an allocation from that context
- Add fatalErrorEncountered method to Reporter/Listener interface.
  [Martin Hořeňovský]

  An empty default implementation is provided to keep backward compatibility.
  Called when signal or Structured Exception is encountered.

  Related to #1005
- Do not use SEH and console api under UWP. [Martin Hořeňovský]

  Fixes #1020
- Sweep out some extra warnings. [Martin Hořeňovský]

  Swept:
  `-Wpadded` in some places (where it caused extra size, instead of just
  saying "hey, we padded struct at the end to align, just as standard says")
  `-Wweak-vtables` everywhere (Clang)
  `-Wexit-time-destructors` everywhere (Clang)
  `-Wmissing-noreturn` everywhere (Clang)

  The last three are enabled for Clang compilation going forward.

  Also enabled `-Wunreachable-code` for Clang and GCC
- Removed function pointer comparison test from approvals as it has
  different serilaisation behaviour in MSVC. [Phil Nash]
- Reflected file extension changes in CMakeLists.txt file. [Phil Nash]
- Suppressed meaningless function type qualifier warning in MSVC again.
  [Phil Nash]

  (this time in catch_tostring.h)
- Changed all .hpp extensions to .h where there is now a corresponding
  .cpp. [Phil Nash]
- Suppress MSVC warning about meaningless function type qualifier in
  generic code. [Phil Nash]
- Added back OCTest project. [Phil Nash]
- Fixed Objective-C mode. [Phil Nash]
- Use StringRef to pass comparison operator name to BinaryExpr. [Martin
  Hořeňovský]

  Some nominally C++11 platforms do not have SSO (I am looking at
  you libstdc++), where this avoids meaningless allocations.
- Stop accepting non-const comparison operators. [Martin Hořeňovský]

  A) non-const comparison operators should not exist and should not be
  encouraged

  B) The logic breaks comparing function pointers certain way

  C) It was inconsistent anyway, as it only applied to `==` and `!=`

  Closes #925
- Update baselines. [Martin Hořeňovský]
- Fix/disable failing approval tests. [Martin Hořeňovský]
- Actually fix AppVeyor ctest. [Martin Hořeňovský]

  Note, this doesn't mean it will start passing, just that it will
  run the approval tests properly

  Some changes are needed before it passes, as the Windows output
  somewhat differs.
- Fix ctest failure on windows. [Martin Hořeňovský]
- Fixed alignment of getSupportedVerbosities in MultipleReporters. [Phil
  Nash]
- Explicit ctor used to fix compilation failures caused by copy
  initialization. [offa]
- Incorporated Clara with TextFlow fix for assertion with consecutive
  newlines. [Phil Nash]

  fixes #1012
- Make approval tests part of ctest. [Martin Hořeňovský]
- Update approvals after removing deprecated matcher helpers. [Martin
  Hořeňovský]
- General cleanup for C++11. [Martin Hořeňovský]

  Also less allocations and less stack usage on the fatal condition path
- Move session to internal, split apart implementation. [Martin
  Hořeňovský]
- Remove last usage of NotImplementedException. [Martin Hořeňovský]

  TeamCity reporter now uses CATCH_ERROR instead
- Remove obsoleted utility functions on matchers. [Martin Hořeňovský]

  Natural operators, &&, || and ! are preferred and do not have
  limited arity.
- Fix-up compilation benchmark script. [Martin Hořeňovský]
- Fix compilation of main file with CATCH_CONFIG_FAST_COMPILE. [Martin
  Hořeňovský]
- Always compile matchers implementation. [Martin Hořeňovský]
- Minor cleanup. [Martin Hořeňovský]
- Stitch .cpp files into single header in deterministic order. [Martin
  Hořeňovský]
- Split RNG related things into its own file. [Martin Hořeňovský]

  This further removes 2 function declarations from the common path
- Remove unused internal macro from the common path. [Martin Hořeňovský]
- Remove tag alias registry interface from the common path. [Martin
  Hořeňovský]
- Update release notes in regards to CATCH_CONFIG_DISABLE. [Martin
  Hořeňovský]
- Dev build 3. [Martin Hořeňovský]
- Change developBuild to work same as *Release. [Martin Hořeňovský]
- Add evaluation specialization for T* and long. [Martin Hořeňovský]

  Fixes #1005
- Add table of contents. [Martin Moene]
- Fix heading levels. [Martin Moene]

  - page title (chapter): 1
  - sections: 2
- Make Current, Older releases sections, add subsections for each minor
  release. [Martin Moene]
- Streamline includes in external interfaces. [Martin Hořeňovský]
- Remove check for compiler version before using __COUNTER__ [Martin
  Hořeňovský]

  All still supported compiler versions support __COUNTER__.
  User can also still turn off use of __COUNTER__ by defining
  CATCH_CONFIG_NO_COUNTER.
- Remove empty compiler detection. [Martin Hořeňovský]

  If they are needed in the future, they can be reinstated, but there
  is no point in keeping them around currently.
- Remove catch_context.h from the common include path. [Martin
  Hořeňovský]
- Clean up various minor things. [Martin Hořeňovský]
- Split writeToDebugConsole out of main path. [Martin Hořeňovský]
- Update approval test baselines after removing [hide] tag. [Martin
  Hořeňovský]
- Make REGISTER_TEST_CASE auto registering. [Martin Hořeňovský]

  This also means it can be used in global scope
- Prevent exception translator registration with CATCH_CONFIG_DISABLE.
  [Martin Hořeňovský]
- Disable reporter/listener registration with CATCH_CONFIG_DISABLE.
  [Martin Hořeňovský]
- Add partial implementation of CATCH_CONFIG_DISABLE. [Martin
  Hořeňovský]

  * Assertions are defined into (void)(0) no-op
  * SECTIONs are defined away (leaving {} as scope)
  * TEST_CASEs and TEST_CASE_METHODs are not registered.
  * REGISTER_TEST_CASE is defined into (void)(0) no-op
  * METHOD_AS_TEST_CASE is defined away
- Update CATCH_CONFIG_FAST_COMPILE documentation. [Martin Hořeňovský]

  Now it mentions that CHECK family of macros is affected as well
- Add the experimental benchmark feature in documentation. [Martin
  Hořeňovský]
- Remove legacy [hide] tag. [Martin Hořeňovský]

  Also removed even legacier "./" prefix for test case name...
- Workaround raw string literal bug in VS2017. [Martin Hořeňovský]
- Fix updateVcpkgPackage. [Martin Hořeňovský]
- Tweaked how failedButOk assertions are recorded - fixes issue where
  sections in !shouldfail or !mayfail test cases that have failing
  assertions where marked as failed instead of failedButOk. [Phil Nash]
- Add page titles. [Martin Moene]
- Refactor release scripts, automatically update Wandbox on release.
  [Martin Hořeňovský]
- Let toplevel links to .md files link to .md#top. [Martin Moene]
- Add html anchor 'top' [Martin Moene]
- Ignore return value of getchar when waiting for keypress. [Martin
  Hořeňovský]

  Previously this was causing warnings under MSVC for ignored return
  value.
- Force include catch_platform.h before any if-defs. [Martin Hořeňovský]

  Closes #994
- Add partial release notes for 2.0.0. [Martin Hořeňovský]
- Change include guards in catch_external_interfaces.h. [Martin
  Hořeňovský]

  Previously they weren't recognized by the generateSingleHeader.py
  script and weren't removed during stitching
- Remove obsolete note from reporter documentation. [Martin Hořeňovský]
- Document implementation of listeners in non-main files. [Martin
  Hořeňovský]

  Closes #991
- Add problems with `SECTION`s in loops to documentations. [Martin
  Hořeňovský]
- Dev build 2. [Phil Nash]
- Went back to Catch 1.x behaviour for -d. [Phil Nash]

  -d takes "yes" or "no", rather than being a standalone flag option. The default is "defaultForReporter" so the previous change actually dropped some control.
- Added dummy listener registration. [Phil Nash]
- Add define that pulls in reporter and listeners interfaces. [Martin
  Hořeňovský]

  This allows users to define reporters and listeners in files different
  from the main file.

  Related to #991, #986
- Hold translated exception in local string while matching. [Phil Nash]
- Rebased with missing [failing] tag. [Phil Nash]
- Remove <algorithm> header from the common path. [Martin Hořeňovský]

  It was only used for std::max<double> within Approx, so we now have
  ::Catch::Detail::max(double, double) that is used instead.
- Removed *_REGISTER_REPORTER from main path. [Martin Hořeňovský]

  Also simplified them to single macro: CATCH_REGISTER_REPORTER
- Remove deprecated listener registration macro. [Martin Hořeňovský]
- Replace stdint.h include with cstdint include. [Martin Hořeňovský]

  Just small unification of includes
- Do not include c++ stitch marking in final single header. [Martin
  Hořeňovský]
- Added non-copyable test to [failing] set. [Phil Nash]
- Added test comparing non-copyable values. [Phil Nash]
- Fixed issue with comparing non-copyable values. [Phil Nash]
- Added Clara and TextFlowCpp to open source users. [Phil Nash]
- Updated conan files to use version number. [Phil Nash]
- Generated single include for develop build. [Phil Nash]
- Small doc updates. [Phil Nash]
- Create CODE_OF_CONDUCT.md. [Phil Nash]
- Don't include string/ vector matchers if CATCH_CONFIG_MATCHERS
  defined. [Phil Nash]
- Changed use of strncpy to memcpy. [Phil Nash]
- Documented benchmark-resolution-multiple command line option - and
  increased default to 100. [Phil Nash]
- Added --libidentify and --wait-for-keypress to docs. [Phil Nash]
- No longer show full usage in event of error (it obscures the error
  message) - instead just suggests running with -? to see usage. [Phil
  Nash]
- Add open-source user. [Monocasual]
- Added libidentify support, including option for waiting for keypress
  on exit (and/ or start) [Phil Nash]
- Cherry picked 4f21bb72ff16f82b7fcf7362d683547f412641f4 (Add tests for
  #961) from master - had to redo the baselines. [Martin Hořeňovský]
- Update documentation with changes from 7e4038d. [Martin Hořeňovský]
- Suppress strncpy copy warnings on MSVC. [Phil Nash]
- Removed StringData. [Phil Nash]
- Removed String and StringBuilder. [Phil Nash]
- Removed redundant .c_str()s  from StringRef usages. [Phil Nash]
- Added << ostream overload to StringRef. [Phil Nash]
- Rebased with string conversion tests. [Phil Nash]
- StringRef conversions to/ from std::string. [Phil Nash]
- Reformatted benchmark output a bit. [Phil Nash]
- Added config to control multiple of clock resolution to run benchmark
  iterations for. [Phil Nash]
- Cleaned up the output a bit - removed [!shouldfail] test from "green"
  path - changed "spanner" to more descriptive text. [Phil Nash]
- Fixes issue with fatal errors and non-failing assertions Fixes #990.
  [Phil Nash]
- Rebased approvals with info loop change. [Phil Nash]
- Merge branch 'reevaluate' into dev-modernize. [Phil Nash]
- Moved matcher-based capture macros into their own file - this file
  excluded from the CATCH_CONFIG_DISABLE_MATCHERS path. - matchers are
  always compiled in to the impl file - _THROWS_WITH macros are still
  available with matchers disabled - but only the ones that take a
  string - tests that use matchers have #ifdefs, so the whole SelfTest
  project can compile with matchers disable. [Phil Nash]
- Collapsed alternate capture macros now originals are redundant. [Phil
  Nash]
- Removed some unnecessary #includes - and don't #include
  "catch_debugger.h" in the header path when CATCH_CONFIG_FAST_COMPILE
  is defined. [Phil Nash]
- Actually do what the previous commit claimed to do! :-s. [Phil Nash]
- Workaround for GCC 4.8 "deleted ctor in aggregate" bug. [Phil Nash]
- Suppressed some warnings - signed/ unsigned mismatches - virtual
  destructor on ITransientExpression (even though not needed) [Phil
  Nash]
- Removed all (well, most) of the redundant, ResultBuilder-based, code.
  [Phil Nash]
- Integrated new AssertionHandler into unexpected exception handling in
  RunContext. [Phil Nash]
- Integrated INTERNAL_CATCH_THROWS with new AssertionHandler. [Phil
  Nash]
- Integrated INTERNAL_CATCH_THROWS_STR_MATCHES with new
  AssertionHandler. [Phil Nash]
- Integrated INTERNAL_CATCH_THROWS_MATCHES with new AssertionHandler.
  [Phil Nash]
- Integrated INTERNAL_CHECK_THAT with new AssertionHandler. [Phil Nash]
- Restored exceptionGuard functionality under CATCH_CONFIG_FAST_COMPILE.
  [Phil Nash]
- Integrated AssertionHandler into INTERNAL_CATCH_MSG. [Phil Nash]
- Integrated AssertionHandler into INTERNAL_CATCH_THROWS_AS. [Phil Nash]
- Integrated AssertionHandler into INTERNAL_CATCH_NO_THROW. [Phil Nash]
- First cut of new AssertionHandler/ Decomposer - integrated into
  INTERNAL_CATCH_TEST. Needs more work to fully replace existing stuff.
  [Phil Nash]
- Made macroName and capturedExpression StringRefs. [Phil Nash]
- Reduced AssertionInfo to a pure record type. [Phil Nash]
- Removed default ctors for AssertionInfo, AssertionResult and
  SourceLineInfo. [Phil Nash]
- Remove obsoleted `SCOPED_MSG` and `SCOPED_CAPTURE` [Martin Hořeňovský]

  Standard `MSG` and `CAPTURE` behave the same way these used to,
  and are recommended instead.
- Allow specifying default reporter at compile time. [Martin Hořeňovský]
- Make catch_stream.hpp a standard .cpp file. [Martin Hořeňovský]
- Merge branch 'master' into dev-modernize. [Martin Hořeňovský]
- Refactored how FAST_COMPILE affects internal test macros (less
  duplication) [Phil Nash]
- Suppress more signed/ unsigned mismatches during Evaluator calls on
  MSVC. [Phil Nash]
- Refactored Evaluator templates to only be specialised on Op, with
  Lhs/Rhs types templated on method instead. [Phil Nash]
- Removed compare layer from expression evaluation. [Phil Nash]
- Use size_t for String size types. [Phil Nash]
- Correctly handle special tags that also imply being hidden
  (!benchmark) [Phil Nash]
- Report benchmark durations in natural units (and extended StringRef to
  be able to report utf8 char lengths. [Phil Nash]
- Removed benchmark tests from approval tests (for now) [Phil Nash]
- Added benchmark tests. [Phil Nash]
- Factored table writing code out into a TablePrinter class (removes a
  lot of magic numbers and ad-hoc formatting) [Phil Nash]
- Changed clock resolution estimator to return uint64_t. [Phil Nash]
- First draft of (experimental) benchmarking support. [Phil Nash]
- Moved Timer impl back to cpp (I thought it wasn't included on the non-
  main path, but it is) [Phil Nash]
- Timer resolution is now nanoseconds. [Phil Nash]
- Made most of Timer class inline - and export
  getCurrentMicrosecondsSinceEpoch() [Phil Nash]
- Added some missing `override`s and removed some `virtual`s from
  overrides. [Phil Nash]
- Include proper exception header in enforce.h. [Martin Hořeňovský]
- Fixup bad merge in 2212cdfe. [Martin Hořeňovský]
- Adding more flexibility into the cmake catch parsing script (#971)
  [Danila Sukharev]

  * Adding more flexibility into the cmake catch parsing script
- Initial support for native IBM i ILE C++ (#976) [Anton Vorobyev]

  * - Initial support for native IBM i ILE C++
- Eliminate some work when results won't be reported. [Neal Coombes]
- Update tutorial.md. [Markus Werle]
- Added 'args' argument parser library. [Ivan Kush]
- Fix for JUnit reporter when using dynamically generated sections
  (#963) [Fran García Salomón]

  * BySectionInfo should also take into account the section name in addition to the source code line
- Note start of .cpp files in single header. [Martin Hořeňovský]
- Route all T* comparisons through const void* comparisons. [Martin
  Hořeňovský]

  This should stop the evaluate machinery from instantiating all the
  templates for every ptr type that is compared, instead generating it
  for single one.
- Add missing <algorithm> include in catch_approx.hpp. [Martin
  Hořeňovský]
- Move some compile-time dispatch to runtime. [Martin Hořeňovský]

  The runtime performance is likely to be negligible,
  but compile times need every improvement they can get.
- Split out internal error macros from the common path. [Martin
  Hořeňovský]
- Fix fwd declaration of IConfig in catch_test_case_registry_impl.hpp.
  [Martin Hořeňovský]
- Move Section(End)Info bodies to proper .cpp file. [Martin Hořeňovský]
- Move windows.h reduction logic into windows.h proxy header. [Martin
  Hořeňovský]

  Fixes #965 (at least the primary problem, the separate warnings can
  be taken care of later)
- Disable build broken by travis changes. [Martin Hořeňovský]

  It should be reenabled at some point, but I don't have the time ATM
- Fix inverted CATCH_CONFIG_DISABLE_MATCHERS toggle. [Martin Hořeňovský]
- Introduce compile time toggle to remove Matchers from TU. [Martin
  Hořeňovský]

  The toggle is `CATCH_CONFIG_DISABLE_MATCHERS` and the only use is
  to speed up compilation of small TUs. For large ones it is likely
  insignificant, because the speed up is constant relative to
  number of tests/assertions in TU.
- Fix missing CATCH_ prefixed macros. [Martin Hořeňovský]
- Removed <algorithm> include from the main path. [Martin Hořeňovský]
- Remove <set> include from the common test path. [Martin Hořeňovský]
- Move std::exception_ptr out of interfaces. [Martin Hořeňovský]
- Change typedefs to using. [Martin Hořeňovský]
- Split Option<T> and TagAlias definitions away from the main include
  path. [Martin Hořeňovský]
- Improve single header generator. [Martin Hořeňovský]
- Move all stringref function bodies out of line. [Martin Hořeňovský]
- Clean up Approx to take arguments by const& [Martin Hořeňovský]
- Remove superfluous include. [Martin Hořeňovský]
- Split out more headers into separate .cpp files. [Martin Hořeňovský]
- General cleanup. [Martin Hořeňovský]
- Split out helper functions on std::string from catch_common.h. [Martin
  Hořeňovský]
- Addressed Resharper-C++ warnings. [Martin Hořeňovský]

  See #958
- Address more of PVS studio warnings. [Martin Hořeňovský]
- Hold exception translators by unique_ptr - and removed range deleters.
  [Phil Nash]
- Removed catch_section_info.cpp (not used) [Phil Nash]
- Removed tbc_text_format from CMakeLists.txt. [Phil Nash]
- Use Columns to format reporter list. [Phil Nash]
- Removed tbc_text_format (superceded by TextFlow) [Phil Nash]
- Removed final use of tbc_text_format (console reporter) [Phil Nash]
- Removed Text tests (TextFlow has it's own test suite) [Phil Nash]
- Removed "unapproved" baselines that got checked in at some point.
  [Phil Nash]
- Removed "long text" test (not a limitation of TextFlow) [Phil Nash]
- ListTests now only uses TextFlow (not tbd_text_format) again. [Phil
  Nash]
- Embed Clara with TextFlow fix for whitespace after newline. [Phil
  Nash]
- Embedded version of Clara with TextFlow fix for embedded newlines.
  [Phil Nash]
- Removed redundant virtuals on override functions (and added a couple
  of overrides) [Phil Nash]
- Update Baselines. [Martin Hořeňovský]
- Address results of PVS-Studio static analysis. [Martin Hořeňovský]

  Couple are left un-addressed, see #958 for details.
- Fix merge mishap (duplicated catch_reporter_multi header) [Martin
  Hořeňovský]
- Merge branch 'dev-better-verbosity' of
  https://github.com/BMBurstein/Catch. [Martin Hořeňovský]
- Merge remote-tracking branch 'upstream/dev-modernize' into dev-better-
  verbosity. [Baruch Burstein]
- Previous implementation didn't work. [Baruch Burstein]

  It relied on calling a virtual method from a base constructer
- Check that reporter supports requested verbosity. [Baruch Burstein]
- Use new formatting capabilities. [Baruch Burstein]
- Add ability to format any streamable class. [Baruch Burstein]

  This should probably be done at the source of this external file, but I couldn't find where that is. Perhaps it should be mentioned in the file header comment?
- Fix SelfTest compilation after _THROWS_ assertion change. [Martin
  Hořeňovský]

  That is, changes made in efd79aa0bdeb7d02be2d9b3db01685c7f0467568
- Update documentation to reflect the last change. [Martin Hořeňovský]
- Extend exception type in _THROWS_ with const& unconditionally. [Martin
  Hořeňovský]

  Potentially breaking change, but most people apparently were using it
  wrong and thus it won't be breaking for them.

  Closes #955
- More method bodies moved out of line. [Martin Hořeňovský]
- Removed superfluous inline specifications. [Martin Hořeňovský]
- Split out non-templated Approx methods into cpp file. [Martin
  Hořeňovský]
- Re/moved some headers in catch_tostring. [Phil Nash]
- Removed redundant member. [Phil Nash]
- Minor clean-ups in string conversion code. [Phil Nash]
- Replaced some uses of tbc_text_format with TextFlow (from Clara) [Phil
  Nash]
- Removed intermediate IConfig ptr. [Phil Nash]
- Reuse ostringstream in XML reporter. [Phil Nash]
- Converted a load of spelt out iterators to auto. [Phil Nash]
- Split out catch_run_context into cpp and hpp file. [Martin Hořeňovský]
- Initialise unexpectedExceptions in JUnitReporter. [Phil Nash]
- Removed all (that I could find) redundant second macro args to
  TEST_CASE and SECTION - now we can rely on variadic macros. [Phil
  Nash]
- Removed failing enum test from test run. [Phil Nash]
- Enabled c++11 tests in approvals. [Phil Nash]
- Some clean-ups. [Phil Nash]
- Suppress clang-tidy warnings about inline asm. [Phil Nash]
- Made everything used in test case registration noexcept - this
  prevents warnings about startup-time exceptions. [Phil Nash]
- Fixed up OcMethod base. [Phil Nash]
- Simplified test case registration and started using StringRefs. [Phil
  Nash]
- Changed some names in test case registry - in preparation for a bigger
  refactoring. [Phil Nash]
- Added override keyword to overrides in compact reporter. [Phil Nash]
- Rebase baselines to take into account the removed test. [Martin
  Hořeňovský]
- Removed spurious "inline" (was causing linker errors) and fixed broken
  macOS detection. [Phil Nash]
- Removed superfluous inline keywords. [Martin Hořeňovský]
- Don't rely on transitive <string> include. [Martin Hořeňovský]
- Moved couple function's bodies out of common-include path. [Martin
  Hořeňovský]
- Use = delete instead of private, unimplemented copy operations.
  [Martin Hořeňovský]
- Removed declared-but-undefined function. [Martin Hořeňovský]
- Moved Catch NotImplementedException out of the common include path.
  [Martin Hořeňovský]

  We could probably toss it away completely, currently it is used
  only by TeamCity reporter.
- Moved leak detector to its own file. [Martin Hořeňovský]
- Remove obsolete GENERATE macro. [Martin Hořeňovský]
- More include and impl refactoring. [Martin Hořeňovský]
- Default included reporters are now also in .cpp files. [Martin
  Hořeňovský]

  The non-default ones remain as header files.
- Modified generateSingleHeader script to work with .cpp files better.
  [Martin Hořeňovský]

  Also fixed the scripts to take into account renamed version file
- Started work on splitting out .cpp files from header files. [Martin
  Hořeňovský]
- Explicit conversion from size_t to size_type. [Phil Nash]
- Minor session tweaks. [Phil Nash]
- Made more of StringRef noexcept. [Phil Nash]
- Added some missing cstring includes. [Phil Nash]
- Added string tests to approvals. [Phil Nash]
- Added string classes. [Phil Nash]
- Updated overview docs a bit. [Phil Nash]
- Clamp exit code internally, so it doesn’t have to be done in every
  main() implies. [Phil Nash]
- Merge branch 'dev-second-string-argument-removal' into dev-modernize.
  [Martin Hořeňovský]

  It is no longer true that an assertion macro has either 1 or 2 args,
  so...
- Remove "second argument" from result builder and assertion result.
  [Martin Hořeňovský]

  This is not quite complete removal (it doesn't pass approval tests),
  but it should be representative of full perf improvements from doing so
- Merge branch 'master' into dev-modernize. [Martin Hořeňovský]

  This includes the performance commits done recently
- Merged implemention of #934, but using 'verbose' option on command
  line instead. (see 616f7235efc875ee239c1dc6ddb48025e05e57ff on master
  for original merge) [Baruch Burstein]
- Added "How to test changes in PR" section to documentation. [Martin
  Hořeňovský]

  Also linked it from PR template.

  Closes #936
- Disable deprecation warning of std::uncaught_exception. [Martin
  Hořeňovský]

  We might prefer to use `std::uncaught_exceptions` in the future, but I
  would prefer not to bring in more configuration into Catch Classic

  Closes #927
- Fix how GCC version is detected when checking for __COUNTER__ [Martin
  Hořeňovský]

  Fixes #928
- Removed const refs from NSString/ NSObject overloads (effectively
  reapplies PR #855 originally applied to "1.x" master) [Phil Nash]
- Fixed indentation. [Phil Nash]
- Updated Clara with handling for / on Windows. [Phil Nash]
- Updated Clara with VS ICE workaround. [Phil Nash]
- Reverted previous two commits as they didn’t fix anything. [Phil Nash]
- Reorganised CLI again in another attempt to get past VS ICEs. [Phil
  Nash]
- Another attempt to fix VS ICEs - split cli parser up. [Phil Nash]
- Moved command line lambdas out-of-line in an attempt to fix VS ICEs.
  [Phil Nash]
- Added version of Clara that has virtual destructors. [philsquared]

  (just to silence warnings - they are not actually needed)
- Updated version of Clara (should fix Windows compile issues) -
  embedded using new embed script. [Phil Nash]
- Silence unused argument warning in Catch. [Martin Hořeňovský]
- Fixed issue with different result types in Clara. [Phil Nash]
- Rebased following Clara changes. [Phil Nash]
- Integrated (all) new version of Clara. [Phil Nash]
- Updated approvals following Junit changes. [Phil Nash]
- Merge remote-tracking branch 'tsondergaard/improve-junit-xml-for-
  jenkins' into dev-modernize. [Martin Hořeňovský]
- Include suite name in junit classname attrib for grouping in jenkins.
  [Thomas Sondergaard]

  Jenkins groups junit test results by loosely interpreting the
  classname attribute of the <testcase> element as a package-qualified
  java class name such as java.util.String. It ignores the <testsuite>
  elements in the xml. To organize test results we therefore need to
  embed the suite name in the classname attribute as if it was a java
  package name.

  Fixes #922.
- Use [#filename] tag for junit testcase classname attribute. [Thomas
  Sondergaard]

  If [#filename] is present in tags, use it for the classname attribute,
  rather than "global". If the test fixture is present that still takes
  precedence.
- Consistent junit reporting regardless of internal SECTIONS. [Thomas
  Sondergaard]

  Change it so the classname attribute on the <testcase> element is the
  test fixture name or "global" regardless of whether the TEST_CASE
  contains SECTIONs. This way the output is not changed substantially,
  just because a SECTION is added to a TEST_CASE.
- Make generateSingleHeader.py Python 2.7 compatible. [Martin
  Hořeňovský]
- Fix erroneous result disposition for {REQUIRE,CHECK}_THAT. [Martin
  Hořeňovský]

  This fixes result disposition being ContinueOnFailure |
  ContinueOnFailure for CHECK_THAT (obviously an error) and Normal |
  ContinueOnFailure for REQUIRE_THAT (less obviously an error, but worse,
  as that signals to the pipeline that assertion failure should both abort
  and continue the test with ???? happening).
- Update baselines. [Martin Hořeňovský]
- Fix #914 being removed during last merge. [Martin Hořeňovský]
- Add tests for *_THROWS_MATCHES. [Martin Hořeňovský]

  Closes #641, closes #818
- Slight documentation improvements. [Martin Hořeňovský]
- Added new assertion macros: `*_THROWS_WITH` [Martin Hořeňovský]

  It combines `*_THROWS_AS` and `*_THROWS_WITH` macros, so that the
  exception type matches expectetations and its contents match a specific
  matcher.
- Merge branch 'master' into dev-modernize. [Martin Hořeňovský]

  Hopefully nothing went too wrong.
- Silence GCC's Wunused-function firing in compilation tests. [Martin
  Hořeňovský]

  The whole GCC kinda sucks around warnings, this is yet another place
  where pragmas manipulating warnings don't work properly and thus a
  warning has to be disabled globally... luckily, this time it is
  happening in selftest file and thus it isn't too problematic to just
  turn that warning of for the entire file.
- Purge deprecated generators. [Martin Hořeňovský]
- Inherit from NonCopyable to disable RegisterHub copies. [Martin
  Hořeňovský]
- Catch and register startup exceptions in autoregistrars. [Martin
  Hořeňovský]

  Previously they were registered where they would be thrown otherwise
- Collect startup exceptions instead of throwing them. [Martin
  Hořeňovský]

  Previously, some errors in Catch configuration would cause exceptions to
  be thrown before main was even entered. This leads to call to
  `std::terminate`, which is not a particularly nice way of ending the
  binary.

  Now these exceptions are registered with a global collector and used
  once Catch enters main. They can also be optionally ignored, if user
  supplies his own main and opts not to check them (or ignored them
  intentionally).

  Closes #921
- Generate single header even if output dir does not exist. [Martin
  Hořeňovský]
- Enable colourized output while in debugger. [Martin Hořeňovský]
- Move back to static StringMaker<T>::convert. [Martin Hořeňovský]

  This avoids some breakage from the modernization
- Updated documentation about stringifying UDTs. [Martin Hořeňovský]
- Disable unreachable code warning for TrickyTests.cpp. [Martin
  Hořeňovský]

  Somehow this only triggers for VS 2015, Win32 | Release configuration...
- Attempt at fixing compilation on OSX. [Martin Hořeňovský]

  Since I don't have actual access to OSX, this might be a tad optimistic.
- Fix alignment for Catch::Option. [Martin Hořeňovský]

  This is so much easier in C++11...
- Fix C4702 (unreachable code) in generators. [Martin Hořeňovský]

  Generators might get removed anyway, but at least compilation wont
  trigger Wx on MSVC in the meantime.
- Fix compilation on non-OSX platforms. [Martin Hořeňovský]
- Removed need for Error class to capture stream inserted strings into
  exceptions. [Phil Nash]
- Rebased approvals. [Phil Nash]
- Added CATCH_ENFORCE (and updated CATCH_INTERNAL_ERROR to be stream
  based) replaced all ad-hoc exceptions (where appropriate) with
  CATCH_ENFORCE or CATCH_INTERNAL_ERROR - no explicit ostringstreams.
  [Phil Nash]
- Converted IStreamingReporter to unique_ptr. [Phil Nash]
- Changed dynamic_pointer_casts to static_pointer_casts. [Phil Nash]
- More macros are now variadic. [Martin Hořeňovský]

  Also added tests for them
- Added std:: qualification to nullptr_t. [Martin Hořeňovský]

  Apparently Clang doesn't like it unqualfied :smile:
- Reworked stringification layer, removed Catch::toString. [Martin
  Hořeňovský]

  Now the order of stringification checks is

  1) StringMaker specialization
  2) operator<<

  toString overloads and specializations have been removed.
- Fix order of arguments in CATCH_FAIL macro. [Martin Hořeňovský]
- Added missing <memory> includes. [Phil Nash]
- Added test for assertion with comma. [Phil Nash]
- Made INTERNAL_CATCH_TEST variadic so commas in assertions work. [Phil
  Nash]
- Removed Ptr, Shared and SharedImpl. [Phil Nash]
- Migrated (Reporter) Nodes to std::shared_ptr. [Phil Nash]
- Migrated Pattern to std::shared_ptr. [Phil Nash]
- Migrated ITracker to std::shared_ptr. [Phil Nash]
- Migrated ITestCase to std::shared_ptr. [Phil Nash]
- Migrated IStreamingReporter from Ptr to std::shared_ptr. [Phil Nash]
- Some listener and factory clean-ups. [Phil Nash]
- Migrated IReporterFactory to std::shared_ptr. [Phil Nash]
- Migrated Config and IConfig to shared_ptr (from Ptr) [Phil Nash]
- Removed copy ctor, assignment operator and swap from TestCaseInfo.
  [Phil Nash]
- Removed legacy reporter support. [Phil Nash]
- Removed VS 2013 from AppVeyor. [Martin Hořeňovský]

  Does not support C++11 properly enough
- Removed gcc 4.7 from travis. [Martin Hořeňovský]

  It wasn't able to deal with C++11 properly
- A load more C++11 tweaks - mostly moving initialisations from
  constructors to inline. [Phil Nash]
- Removed SafeBool. [Phil Nash]
- Most of Assertion macros are now variadic. [Martin Hořeňovský]

  This means that `REQUIRE(std::vector<int>{1, 2} == std::vector<int>{1,
  2});` works as expected.

  Note that assertion macros taking more than 1 argument are currently not
  variadic, because variadic args have to come last, which would make the
  interface of these ugly: `REQUIRE_THROWS_AS(std::exception const&, ....
  )`
- Fix MSVC compilation error. [Martin Hořeňovský]

  MSVC's `std::vector` requires its allocator to have copy constructor
  from the same allocator kind, but templated over different type.
- Fix double-to-float conversion warning in tests. [Martin Hořeňovský]
- Updated version number for v2 development and removed single include
  (for now). [Phil Nash]
- Enabled SFINAE stream test. [Phil Nash]
- Removed C++11 config macro docs. [Phil Nash]
- Removed more C++98/03 compatibility. [Phil Nash]
- Removed debug break support for PowerPC Macs. [Phil Nash]
- Use std::chrono for Timer to eliminate platform dependency. [Phil
  Nash]
- Removed more redundant compatibility stuff from timer. [Phil Nash]
- Removed pre-C++11 versions of Clang (3.4) and GCC (4.4) [Phil Nash]
- Gutted catch_compiler_capabilities. [Martin Hořeňovský]

  All C++11 toggles are now removed. What is left is either platform
  specific (POSIX_SIGNALS, WINDOWS_SEH), or possibly still needed
  (USE_COUNTER).

  If current CLion is compatible with `__COUNTER__`, then we should also
  force `__COUNTER__` usage.

  Changed
  * CATCH_AUTO_PTR    -> std::unique_ptr
  * CATCH_OVERRIDE    -> override
  * CATCH_NULL        -> nullptr
  * CATCH_NOEXCEPT    -> noexcept
  * CATCH_NOEXCEPT_IS -> noexcept

  Removed
  * CATCH_CONFIG_CPP11_UNIQUE_PTR
  * CATCH_CONFIG_CPP11_SHUFFLE
  * CATCH_CONFIG_CPP11_TYPE_TRAITS
  * CATCH_CONFIG_CPP11_OVERRIDE
  * CATCH_CONFIG_CPP11_LONG_LONG
  * CATCH_CONFIG_CPP11_TUPLE
  * CATCH_CONFIG_CPP11_IS_ENUM
  * CATCH_CONFIG_CPP11_GENERATED_METHODS
  * CATCH_CONFIG_CPP11_NOEXCEPT
  * CATCH_CONFIG_CPP11_NULLPTR
  * CATCH_CONFIG_VARIADIC_MACROS
- Removed catch_type_traits from CMakeLists.txt. [Phil Nash]
- Converted (almost) all for-loops with iterators or indices to range-
  based. [Phil Nash]
- CMake defaults to C++11. [Phil Nash]
- Remove C++98 backcompat from evaluate. [Martin Hořeňovský]
- Remove c++98 backcompat from timer. [Martin Hořeňovský]
- Remove C++98 backcompat from toString. [Martin Hořeňovský]
- Removed superfluous reimplementation of type traits. [Martin
  Hořeňovský]
- Removed C++98 backcompat from Approx. [Martin Hořeňovský]

  Now it always uses type traits to work with all types convertible to
  double
- Update assertions.md. [Pfiffikus]

  scale more detailed explained; have to be adapted to PR #1068 if necessary


v1.11.0 (2017-10-31)
--------------------
- V1.11.0. [Martin Hořeňovský]
- Make Approx::margin inclusive. [Martin Hořeňovský]

  Fixes #952, related to #980
- Update test-cases-and-sections.md. [Pfiffikus]

  some clarification and typo correction
- Fix very minor typo. [Clare Macrae]

  it's -> its
- Update build-systems.md. [Pfiffikus]

  typo correction
- Adds flushes to the output stream of teamcity reporter, making the
  test output more responsive. [Sebastian Grottel]
- `RandomNumberGenerator::result_type` should be unsigned (#1050)
  [Sebastian Grottel]

  `result_type` must be unsigned:
  http://en.cppreference.com/w/cpp/concept/UniformRandomBitGenerator

  Using a signed type causes an infinite loop working with MS Visual Studio 2017, targetting: v140, WindowsTargetPlatformVersion 10.0.15063.0, Debug, x64
- Added PARSE_CATCH_TESTS_ADD_TO_CONFIGURE_DEPENDS option. [dvirtz]
- Fix documentation crosslink in configuration.md. [Martin Hořeňovský]
- Fixed expansion of _FALSE binary expression - see #1051. [Phil Nash]
- Update handling of __JETBRAINS_IDE__ macro. [Dmitry Kozhevnikov]

  1. Use it to conditionally define CATCH_INTERNAL_CONFIG_COUNTER, not
     CATCH_CONFIG_COUNTER, as __JETBRAINS_IDE__ is similar to
     compiler-provided macros, not to user-provided ones.

  2. Since __COUNTER__ will work starting with CLion 2017.3, use it
     when possible (and hopefully remove this check altogether
     at some point).
- Minor - added header-only flag in conan. [solvingj]

  See header-only guidelines:
  http://conanio.readthedocs.io/en/latest/howtos/header_only.html?highlight=header%20only
  Its borderline cosmetic, but it does have a purpose.
- Remove duplicate CLI option. [Sam Bristow]

  The "use-colour" option was accidentally duplicated as part of commit
  feaf355 (Implemented libidentify support).
- Fix updateVcpkgPackage. [Martin Hořeňovský]


v1.10.0 (2017-08-26)
--------------------
- V1.10.0. [Martin Hořeňovský]
- Workaround raw string literal bug in VS2017. [Martin Hořeňovský]
- Tweaked how failedButOk assertions are recorded - fixes issue where
  sections in !shouldfail or !mayfail test cases that have failing
  assertions where marked as failed instead of failedButOk. [Phil Nash]
- Specialise removeConst for nullptr. [Phil Nash]
- Suppress more signed/ unsigned mismatches during Evaluator calls on
  MSVC. [Phil Nash]
- Cherry-picked "evaluate" refactoring from dev-modernize branch - fixed
  up NULL comparisons to allow for NULL being a long - should address
  #981. [Phil Nash]
- Refactor release scripts, automatically update Wandbox on release.
  [Martin Hořeňovský]
- Explicitly ignore return value of getchar. [Martin Hořeňovský]

  This silences MSVC warning about ignored return value
- Added Clara and TextFlowCpp to open source users. [Phil Nash]
- Create CODE_OF_CONDUCT.md. [Phil Nash]
- Removed unnecessary single quotes. [Phil Nash]
- Added --libidentify and --wait-for-keypress to docs. [Phil Nash]
- Removed inadvertent use of auto merged from dev-modernise. [Phil Nash]
- Implemented wait-for-keypress option. [Phil Nash]
- Add open-source user. [Monocasual]
- Removed redundant processName argument from libIdentify call. [Phil
  Nash]
- Implemented libidentify support - see
  https://github.com/janwilmans/LibIdentify. [Phil Nash]


v1.9.7 (2017-08-10)
-------------------
- V1.9.7. [Martin Hořeňovský]
- Fix issue with fatal errors and non-failing assertions. [Phil Nash]

  Fixes #990
- Add tests for #961. [Martin Hořeňovský]
- Make default reporter configurable at compile time. [Martin
  Hořeňovský]

  Closes #978
- Update documentation with changes from 7e4038d. [Martin Hořeňovský]
- Capture std::clog writes and combine them with std::cerr writes (#989)
  [Martin Hořeňovský]

  This also introduces Catch::clog() method to allow embedded targets
  to override std::clog usage with their own stream (presumably null-sink),
  similarly to how Catch::cout() and Catch::cerr() are used.

  Fixes #989
- Update `updateVcpkgPackage` script for the new port format. [Martin
  Hořeňovský]
- Add wandbox to release process documentation. [Martin Hořeňovský]

  Also some formatting and wording changes.
- Update matchers docs to reflect namespace usage. [Cody Han]
- Add a landing page link to wandbox with catch preloaded. [Martin
  Hořeňovský]

  Idea shamelessly stolen from nlohmann/json
- Adding more flexibility into the cmake catch parsing script (#971)
  [Danila Sukharev]

  * Adding more flexibility into the cmake catch parsing script
- Fix compilation error on older compilers. [Martin Hořeňovský]
- Address some of the Resharper finds for Catch 1. [Martin Hořeňovský]

  Closes #957 as the other findings are mostly noise that is pointless
  to fix in a branch that will be soon EoLd.
- Initial support for native IBM i ILE C++ (#976) [Anton Vorobyev]

  * - Initial support for native IBM i ILE C++
- Disable build broken by travis changes. [Martin Hořeňovský]

  It should be reenabled later, but I don't have time to investigate
  right now.
- Fix for JUnit reporter when using dynamically generated sections
  (#963) [Fran García Salomón]

  * BySectionInfo should also take into account the section name in addition to the source code line
- Addressed some static analysis warnings. [Martin Hořeňovský]

  Based on findings in #957
- Added NOLINT annotations to selectively suppress clang_tidy warnings.
  [Phil Nash]
- Initialize JunitReporter::unexpectedExceptions in constructor. [Martin
  Hořeňovský]

  This is not needed for correctness, but will prevent PVS warning
  from triggering, and there is basically no performance difference.

  Closes #951
- Eliminate some work when results won't be reported. [Neal Coombes]
- Added 'args' argument parser library. [Ivan Kush]
- Fix typo in README. [Martin Hořeňovský]
- Added survey monkey link. [Phil Nash]
- Update tutorial.md. [Markus Werle]
- #926 Update Conan test version by release. [Uilian Ries]
- Updated license. [Phil Nash]
- Merge branch 'feature/conan' of https://github.com/uilianries/Catch.
  [Phil Nash]
- #926 Update Conan version by release. [Uilian Ries]

  - Update release scripts to increment Conan version
- #926 Conan recipe for Catch single header. [Uilian Ries]

  - Insert catch.hpp (single header) to package
  - Copy BDDTests and TrickyTest to validate Catch package


v1.9.6 (2017-06-27)
-------------------
- V1.9.6. [Martin Hořeňovský]
- If --list-extra-info is specified with --list-test-names-only, only
  output one list. [Baruch Burstein]
- --extra-info -> --list-extra-info, behaves like other --list-* flags.
  [Martin Hořeňovský]
- Add --extra-info flag. [Baruch Burstein]

  this will add line info to test lists, and test descriptions to the long
  form of the test list
- Cache std::ostringstream between assertions. [Neal Coombes]

  This is not thread safe, but I think that was already true of Catch.
  The construction/destruction of the std::ostringstream is where the
  vast majority of time is spent per assertion.  A simple test of
  100000000 CHECK()s is reduced from around 60s to 7.4s
- Added "How to test changes in PR" section to documentation. [Martin
  Hořeňovský]

  Also linked it from PR template.

  Closes #936
- Performance improvement in AssertionInfo. [Neal Coombes]

  By using char const * instead of std::string we avoid significant
  copying per assertion.  In a simple loop with 10000000 CHECKS on
  my system, this reduces the run time from 9.8s to 6s.


v1.9.5 (2017-06-15)
-------------------
- V1.9.5. [Martin Hořeňovský]
- Disable deprecation warning of std::uncaught_exception. [Martin
  Hořeňovský]

  We might prefer to use `std::uncaught_exceptions` in the future, but I
  would prefer not to bring in more configuration into Catch Classic

  Closes #927
- Fix how GCC version is detected when checking for __COUNTER__ [Martin
  Hořeňovský]

  Fixes #928
- Merge pull request #855 from kainjow/objc-tostring-link. [Phil Nash]

  Fix Catch::toString() linker error when main() is compiled as C++
- Fix Catch::toString() linker error when main() is compiled as C++
  [Kevin Wojniak]

  Fixes #278
- Actually link #923 from the documentation. [Martin Hořeňovský]
- Refer to #923 in reporter documentation. [Martin Hořeňovský]
- Add link to external gcov/lcov example to documentation. [Martin
  Hořeňovský]

  An alternate take on #916, that better slots into the existing
  documentation.

  Closes #916
- Don't include warning headers from catch_xmlwriter.hpp. [Martin
  Hořeňovský]

  This prevents Catch from disabling `Wpadded` for Clang inside test files
  (files that do not define either `CATCH_CONFIG_MAIN` or
  `CATCH_CONFIG_RUNNER`).

  catch_suppress_warnings.h and catch_reenable_warnings.h should be
  included only once*, so that the stitching script includes them as the
  first and last header respectively, since it only includes each header
  once. This caused a bug, where the first one was included properly, but
  the second one was included prematurely, from catch_xmlwriter.hpp, and
  thus was guarded by `CATCH_IMPL`.

  * At least until the stitching script is changed to accomodate common
  warning disabling header.

  Fixes #871
- Cosmetic fixes (whitespace and spelling) [Martin Hořeňovský]
- Add test for #914 (stringify truthy exprs in standard way) [Martin
  Hořeňovský]
- ExpressionLhs reconstruction based on value, not truthiness (#914)
  [twhittock]

  Types which are truthy, but have more information than the truthiness in their string conversion were showing up as 'true' or 'false' instead of showing the underlying type's string value.
- Merge pull request #911 from dvirtz/master. [Martin Hořeňovský]

  CTest integration script enhancements
- Added target name to test name and labels. [dvirtz]
- Add option to print debug messages. [dvirtz]
- Use absolute path to test files - accroding to CMake docs EXISTS
  behavior is well-defined only for full paths. [dvirtz]
- Add Inscopix to commercial users. [Martin Hořeňovský]

  Closes #918
- Merge pull request #913 from Carrotstrip/master. [Martin Hořeňovský]

  fixed spelling error in tutorial.md
- Fixed spelling error. [Austin L Wolfgram]
- Added release process notes/checklist/explanation. [Martin Hořeňovský]
- Merge branch 'master' of https://github.com/awglyde/Catch. [Martin
  Hořeňovský]
- Changing tabs to spaces. [Alex Glyde]
- Teamcity reporter should time durations explicitly. [Alex Glyde]
- Fixed missing ` in tag documentation. [Martin Hořeňovský]
- Expanded tag documentation. [Martin Hořeňovský]

  It now mentions that most characters are valid as part of tag and other
  details.

  Closes  #909
- Minor fixup in updateVcpkgPackage.py. [Martin Hořeňovský]
- Merge branch 'master' of https://github.com/philsquared/Catch. [Martin
  Hořeňovský]
- Merge pull request #908 from pJunger/patch-1. [Martin Hořeňovský]
- Added namespace in method testCaseEnded. [Patrick Junger]

  Did not compile as is
- Expanded logging documentation. [Martin Hořeňovský]

  Closes #884


v1.9.4 (2017-05-16)
-------------------
- V1.9.4. [Martin Hořeňovský]
- Typo fix. [Martin Hořeňovský]

  Somehow I made that in 5ffc8a84cda91b5da037a923480236450f7f4586 without noticing
- Added Win32 UNICODE wmain support (#903) [Antonio Di Monaco]

  * Added wmain support
  * Added appveyor.yml wmain configuration
  * Added wmain configuration flag to CMake
- Updated toString documentation. [Martin Hořeňovský]

  It will need another update when Catch 2 goes live.

  Closes #741
- Added warning if source file cannot be found. [Benjamin R. Jack]

  If source files are defined using relative paths, CMake will compile the tests, but this script will (sometimes) fail to find and parse the tests from the source files.  I have added an explicit warning when ParseAndAddCatchTests fails to find a source file.
- Approval tests now see different line endings as ok. [Martin
  Hořeňovský]

  This is mostly to deal with WSL, where git will checkout file with CRLF,
  but code that uses formatted output will be writing LFs.
- Updated approval tests. [Martin Hořeňovský]
- Approval tests now can deal with different expansions of errno.
  [Martin Hořeňovský]
- Don't clear out all messages upon printing an assertion. [Martin
  Hořeňovský]

  Previously, this would not print out any messages for the last CHECK
  ```cpp
  TEST_CASE("Foo") {
  INFO("Test case start");
  for (int i = 0; i < 2; ++i) {
  INFO("The number is " << i);
  CHECK(i == 0);
  }
  CHECK(false);
  }
  ```

  now it does.
- CMake binaries are now conditionally enabled. [Martin Hořeňovský]

  Defining NO_SELFTEST=1 when cmake configuration is being done now turns
  off SelfTest and Benchmark executables. This is for projects that
  consume Catch using ExternalProject_Add and don't want to build our
  selftest binaries for their unit test suite.

  Closes #897
- Fix order of arguments in CATCH_FAIL and nonvariadic
  INTERNAL_CATCH_MSG. [Martin Hořeňovský]

  Fixes #896
- Update opensource-users.md. [JayAndCatchFire]

  Fixed broken link to LICENSE


v1.9.3 (2017-04-25)
-------------------
- V1.9.3. [Phil Nash]
- Removed errant uses of uint64_t fixes #894. [Phil Nash]


v1.9.2 (2017-04-25)
-------------------
- V1.9.2. [Martin Hořeňovský]
- Don’t unconditionally #include <stdint.h> (as earlier MSVC don’t have
  it) [Phil Nash]
- Further tweaked alignment hack for Option. [Phil Nash]
- All of Approx's member functions now accept strong typedefs. [Martin
  Hořeňovský]

  Previously `Approx::operator()`, `Approx::epsilon`, `Approx::margin` and
  `Approx::scale` didn't.

  Closes #888
- Improve documentation about using Catch with CMake. [Martin
  Hořeňovský]

  Also added a note about the `contrib/ParseAndAddCatchTests.cmake`
  script.

  Closes #882
- Cmake script to generate ctest definitions from catch tests: fix for
  test case body bracket. [Ernst Maurer]
- Add Newsbeuter to OSS users list (#891) [Alexander Batischev]
- Tweaked storage alignment "workaround" a bit more in Option. [Phil
  Nash]
- Fix .travis.yml syntax. [Martin Hořeňovský]
- Enable C++11 and C++14 on OSX on Travis. [Martin Hořeňovský]
- Minor .travis.yml cleanup. [Martin Hořeňovský]

  Still could use someone more experienced to clean it up properly...
- Enable C++14 on Linux on Travis. [Martin Hořeňovský]
- Enable /std:c++latest (C++17) for AppVeyor VS 2017. [Martin
  Hořeňovský]
- Don't enable POSIX signals under QNX. [Martin Hořeňovský]

  Fixes #889
- “fixed” alignment in Option. [Phil Nash]
- Add script that helps with updating the Vcpkg package. [Martin
  Hořeňovský]

  Kind of a hackjob, that assumes vcpkg is already checked out
  and is next to the Catch's directory.
- Add CMake script to generate ctest definitions from Catch tests (#879)
  [Ernst Maurer]

  Added cmake script to parse the source files containing Catch's test and generate ctest definitions.

  It generates one ctest test per `TEST_CASE` and labels them, using the `TEST_CASE`'s tags.

  Closes #719.
- Junit reporter does not count exceptions as failures if ok-to-fail.
  [Phil Nash]
- Use (locally defined) UInt64 instead of uint64_t - typedefs long long
  for MSVC - typedefs uint64_t otherwise. [Phil Nash]

  Should probably do finer grained compiler checking - but this should at least be better than what was there before
- Added note about thread safety in assertions - closes #875. [Phil
  Nash]
- Approved tests that were correct the first time (previous approvals
  were erroneous) [Phil Nash]


v1.9.1 (2017-04-09)
-------------------
- V1.9.1 release. [Martin Hořeňovský]
- Unexpected exception are no longer ignored by default. [Martin
  Hořeňovský]

  What an embarassing bug, I'll have to look into why it wasn't caught by
  any of Catch's self-tests.

  Fixes #885 and closes #887 (duplicate)
- Added Nonius to open-sources users. [Phil Nash]


v1.9.0 (2017-04-07)
-------------------
- V1.9.0 release. [Martin Hořeňovský]
- Added NASA to commercial users list. [Phil Nash]
- Commented out unused argument. [Phil Nash]
- TeamCity reporter “ignores” failures in tests marked “ok to fail” -
  also don’t report hidden/ not-selected tests. [Phil Nash]
- Added approvals for “failed as expected” tests. [Phil Nash]
- Added VS2017 to AppVeyor matrix. [Martin Hořeňovský]
- Give up on _Pragma for gcc, force disable Wparentheses in all TUs.
  [Martin Hořeňovský]
- Updated REQUIRE* documentation under FAST_COMPILE. [Martin Hořeňovský]
- Add opt-in c++11 stream insertable check. (#877) [Sergey Semushin]

  * Add opt-in c++11 stream insertable check.

  To opt-in, define CATCH_CONFIG_CPP11_STREAM_INSERTABLE_CHECK.

  Opt-in fixes #872 and should fix #757 as well.
- Added templated constructor to C++11 Approx. [Martin Hořeňovský]

  When using C++11, comparison operators are already templated to take
  anything that can be explicitly converted to double, but constructor
  took only doubles. This lead to warnings when an `Approx` was
  constructed from floats, which was problematic for some users.

  Since just adding float constructor would be a large breaking change, as
  suddenly `Approx( 1 )` would become ambiguous, I added a templated
  constructor that will take anything that is explicitly convertible to
  double. This has the added benefit of allowing constructing `Approx`
  instances from instances of strong typedefs, ie allowing
  `calculated_temp == Approx( known_temp)`.

  Closes #873
- Fmt and tag fixup for #876. [Martin Hořeňovský]

  Github wouldn't let me push to the PR, probably because it was made from
  fork of a fork...
- Print messages when unexpected exceptions are thrown. [dvirtz]
- Reset the UnexpectedException report state. [Martin Hořeňovský]
- Fixed up CATCH_CONFIG_FAST_COMPILE for REQUIREs. [Martin Hořeňovský]

  Unexpected exceptions no longer cause abort and there should be no more
  potential for false negatives.

  The trade-off now is that exceptions are no longer translated.
- Updated documentation of CATCH_CONFIG_FAST_COMPILE. [Martin
  Hořeňovský]
- Rework of REQUIRE* changes in CATCH_CONFIG_FAST_COMPILE. [Martin
  Hořeňovský]

  `ResultBuilder`s destructor now checks for exceptions, preventing false
  negatives. The speedup should remain the same give or take a tiny bit.
- Suppress -Wexit-time-destructors in Catch code. [Martin Hořeňovský]

  This is another warning that follows test macros, making it painful to
  suppress without leaking outside. Luckily clang's `_Pragma`
  implementation works.

  Should fix #308
- Merge pull request #869 from mloskot/patch-1. [Phil Nash]

  Add nanodbc library to Catch users
- Add nanodbc library to Catch users. [Mateusz Łoskot]
- Remove redundant "/" [Rian Quinn]

  This "/" is not needed as CMake adds this automatically
- Expanded documentation about THROWS_AS assertions. [Martin Hořeňovský]
- Don't sanitize exception type in REQUIRE_THROWS_AS. [Martin
  Hořeňovský]

  Effectively a revert of previous commit, fixing #542, where this was
  added to stop linters complaining about `REQUIRE_THROWS_AS` used like
  `REQUIRE_THROWS_AS(expr, std::exception);`, which would be slicing the
  caught exception. Now it is user's responsibility to pass us proper
  exception type.

  Closes #833 which wanted to add `typename`, so that the construct works
  in a template, but that would not work with MSVC and older GCC's, as
  having `typename` outside of a template is allowed only from C++11
  onward.
- Throw instead of calling exit in RegistrarForTagAliases constructor.
  [Martin Hořeňovský]

  Caries a problem vis-a-vis Windows, just like previous commit, but that
  can be fixed later on.

  Closes #866
- Throw instead of calling exit in enforceNotReservedTag. [Martin
  Hořeňovský]

  Closes #865
- Version struct now uses char* for holding branch name. [Martin
  Hořeňovský]

  Since the info is constant, and the only use is to write it out during
  runtime, there is no need for `std::string`.
- Use inline 'libraryVersion()' function (closes #858) [Kevin Ushey]
- Added polymorphic_value to OSS users. [Phil Nash]
- Changed all internal forwarding macro usages to put macro name as
  first argument (and ‘expression’, if any, last) This is a first step
  towards allowing expression arguments to become variadic. [Phil Nash]
- Removed stray define. [Martin Hořeňovský]
- Renamed licence file, license should now be detected by github.
  [Martin Hořeňovský]
- Documented REQUIRE under CATCH_CONFIG_FAST_COMPILE. [Martin
  Hořeňovský]
- CATCH_CONFIG_FAST_COMPILE now disables trys in REQUIRE* [Martin
  Hořeňovský]

  This seems to give about 15% speedup when compiling tests using GCC.

  The tradeoff is that under certain circumstances, there is a chance for
  false negative result, when the expression under test throws exception
  and the test code catches it before it gets to the test runner.

  Example:
  ``` cpp
  TEST_CASE("False negative") {
  try {
  REQUIRE(throws() == "");
  } catch (...) {}
  }
  ```
  This test case will succeed, reporting no assertions checked, instead of
  failing as it would with `CATCH_CONFIG_FAST_COMPILE` disabled. However,
  just removing the try-catch block inside client's code will fix this, so
  it is worthwhile.

  This change does not apply to CHECK* macros, because these are currently
  specified as continuing on exception and thus need the local try-catch
  to work as intended.
- Use bulk vector::insert rather than back_inserter. [Mickey Rose]
- Merge pull request #856 from lightmare/script-exec-perm. [Phil Nash]

  Set execute permission on runnable python scripts
- Set execute permission on runnable python scripts. [Mickey Rose]
- Tag Alias registry is part of registry hub instead of it’s own
  singleton - should now be cleaned up properly. [Phil Nash]
- Reorganised the readme/ ref docs TOC and added link to reporters docs.
  [Phil Nash]
- Added docs on reporters. [Phil Nash]
- Added Obj-C bindings fix to release notes. [Phil Nash]
- Fixed up old documentation links in release notes. [Martin Hořeňovský]


v1.8.2 (2017-03-13)
-------------------
- V1.8.2 release. [Martin Hořeňovský]
- Updatecd [!shouldFail] docs with extra explanatory note, [Phil Nash]
- Added link to event listeners docs. [Phil Nash]
- Fix Objective-C Matchers Fixes #854. [Phil Nash]
- Don’t assume first CL arg (exe name) is present Fixes #729. [Phil
  Nash]
- Don’t ref past end of string fixes #830. [Phil Nash]
- #include <ctype> for std::to lower. [Phil Nash]
- Docs for Listeners. [Phil Nash]
- Added CATCH_REGISTER_LISTENER without the INTERNAL_ prefix. [Phil
  Nash]
- Qualified std::tolower in Clara. Fixes #543. [Phil Nash]
- Added FAIL_CHECK Works like FAIL, but does not abort test. As proposed
  in #765. [Phil Nash]
- Merge pull request #846 from m0ppers/patch-1. [Phil Nash]

  Add ArangoDB
- Add ArangoDB. [m0ppers]
- "Fix" build by annotating the new test as !shouldfail. [Martin
  Hořeňovský]

  The quick test under ctest checks only for no tests failing, not for the
  expected output.
- Add tests for #835. [Martin Hořeňovský]

  Also add ErrnoGuard before `isatty` call, because apparently it can set
  errno to 25 (ENOTTY).
- Save errno before using sprintf, ifstream. [Martin Hořeňovský]

  std::ifstream in libstdc++ contains a bug, where it sets errno to zero.
  To work around it, we manually save the errno before using std::ifstream
  in debugger check, and reset it after we are done.

  We also preventively save errno before using sprintf.

  Fixes #835
- Take std::string by const-ref where possible. [Martin Hořeňovský]

  Most places already do, this brings over some forgotten places.

  Also close #842
- /Wx -> /WX (stupid typo) [Martin Hořeňovský]
- Enable /Wx (Warnings as error) for SelfTest builds. [Martin
  Hořeňovský]
- BenchmarkCompile.py fixup. [Martin Hořeňovský]
- Disable C4702 in Exception tests self tests. [Martin Hořeňovský]

  VS 2015 in Release mode sees through our indirection and complains.
  There is no reason to make the indirectoin harder to reason about,
  instead of just disabling the warning.
- Copied release note fixes to documentation. [Martin Hořeňovský]
- Fixed unintentional tabs. [Phil Nash]
- Fixed mssing virtual destructor warnings. [philsquared]

  In Visual Studio with warning 4265 enabled
  Closes #844
- Fixed CMake generation of MSVC warning levels. [philsquared]
- Added 4265 to specific warnings in VS. [Phil Nash]
- Removed version # from readme - and script that updates it (as it’s
  now automatically in a badge) [Phil Nash]
- Added release badge. [Phil Nash]
- Add AppVeyor status. [Phil Nash]
- Refactored console reporter include logic to match Xml Reporter’s.
  [Phil Nash]
- Tweaked Xml Reporter to follow same success/ info behaviour as Console
  reporter. [Phil Nash]
- Change reporting of CAPTURE'd variables. [Martin Hořeňovský]

  Info is not changed, intentionally.

  Closes #639
- Fixed compile benchmark script. [Martin Hořeňovský]

  Now it no longer attempts to enter a directory before creating it...
- Don't reconstruct expression on encountering fatal error. [Martin
  Hořeňovský]

  In some cases, like when given

  ```cpp
  std::vector<char>* str =
  reinterpret_cast<std::vector<char>*>(0x1234458);
  CHECK(*str == std::vector<char>());
  ```

  reconstructing the expression to report it would cause another fatal
  error. Instead we just put together an AssertionResult without
  reconstructing the expression fully.

  This should fully fix #810
- Added duration reporting to compact reporter. [Martin Hořeňovský]

  Also made the duration formatting code available to all reporters.

  Closes #780
- TAP reporter now behaves as if -s was always set. [Martin Hořeňovský]

  This should fulfill the TAP specification better.
- Merge branch 'tap-count-success' of https://github.com/gahr/Catch.
  [Martin Hořeňovský]
- TAP Reporter: count success tests even if not printed. [Pietro
  Cerutti]

  This fixes a bug whereas running the TAP reporter without the -s switch
  causes the reporter to print 1..0.
- Resized main logo again. [Phil Nash]
- Updated artwork. [Phil Nash]
- Updated release notes. [Phil Nash]


v1.8.1 (2017-03-01)
-------------------
- V1.8.1 release. [Phil Nash]
- Moved definition of _BSD_SOURCE earlier. [Phil Nash]
- Fixed typo in test name. [Phil Nash]
- Update release-notes.md. [Phil Nash]

  Removed speed up time placeholder
- Update release-notes.md. [Phil Nash]

  Fixed docs/ paths


v1.8.0 (2017-02-28)
-------------------
- V1.8.0 release. [Phil Nash]
- Updated baselines. [Martin Hořeňovský]
- Improved Approx documentation. [Martin Hořeňovský]
- Added tests for using margin with Approx. [Martin Hořeňovský]
- Merge branch 'develop' of https://github.com/CNugteren/Catch. [Martin
  Hořeňovský]

  This adds an optional absolute margin to the Approx checks.
- Changed 'auto' into 'bool' for C++98 compatibility. [CNugteren]
- Added an optional absolute margin to the approximation checks.
  [cnugteren]
- Console reporter now uses fixed decimal formatting. [Martin
  Hořeňovský]

  3 decimal places, output in seconds.
- Minor output improvements in approvalTests.py. [Martin Hořeňovský]
- Documented the new vector matchers. [Martin Hořeňovský]
- Updated reporter documentation. [Martin Hořeňovský]
- Removed unused exception object from release notes script. [Phil Nash]
- Removed stray code. [Phil Nash]
- Fix C++11 dependency in TAP reporter. [Martin Hořeňovský]
- Disabled C4312 in the evaluate layer. [Martin Hořeňovský]

  We reinterpret cast int to T* (because someone might compare 0 to a
  ptr), which causes 4312 to fire when x64 platform is set.

  Fixes #148
- Add missing assert.h include to reporter bases. [Martin Hořeňovský]

  It being missing caused an error when compiling under MSVC.
- Fixed up Automake reporter. [Martin Hořeňovský]
- Added Automake and TAP reporters to SelfTest's main. [Martin
  Hořeňovský]
- Fixed-up TAP reporter a bit. [Martin Hořeňovský]
- Add TAP reporter. [Colton Wolkins (Ogre)]

  This is a hackish attempt to add a TAP reporter (see
  philsquared/Catch#309 ) by following the TAP 12 specification
  <http://testanything.org/tap-specification.html>. I'm unsure how well I
  did in following the spec or with following good C++ guidelines.
  Comments are appreciated.
- Add reporter for Automake (#826) [Justin Wilson]

  This allows for integration with Automake's default log compiler.

  See #826 for more details.
- Changed console reporter test duration reporting format. [Martin
  Hořeňovský]

  Was
  "<section-name> completed in XXX s."
  Now is
  "XXX s: <section-name>"

  Closes #322

  (cherry picked from commit 0805539)
- Removed tabs. [Phil Nash]
- Single include generator now handles spaces between # and include.
  [Phil Nash]
- Fixed test spec parser issue - multiple specs in a single string, with
  escapes in each were erroring out. [Phil Nash]
- Added first vector matchers (Contains and Equals) [Phil Nash]
- Generalised Matchers so objects and comparators can be different
  types. [Phil Nash]
- Moved matchers tests into their own file. [Phil Nash]
- Added #define needed for gettimeofday() to be declared on some
  versions of Cygwin. [Phil Nash]
- Added a couple more unimplemented assignment operators to silence
  VS2013 warnings. [philsquared]
- Merge branch 'warning-c4512' of https://github.com/gchudnov/Catch into
  gchudnov-warning-c4512. [philsquared]
- Ignore .vs folder. [philsquared]
- Updated docs to reflect the change to leak checking. [Martin
  Hořeňovský]
- Moved WIndows leak detector code out of main() [philsquared]
- Merge branch 'dev-windows-leakdetection' [Martin Hořeňovský]
- Report leaks to debugger in addition to stderr. [Martin Hořeňovský]

  This branch should also close #120.
- Documentation improvement. [Martin Hořeňovský]
- Add opt-in leak detection under MSVC + Windows. [Martin Hořeňovský]

  Closes #439
- Add file/line to TestCase, Section and Failure elements in Xml
  Reporter. [Phil Nash]
- Cygwin compatibility fixes. [Martin Hořeňovský]
- Improve -Wparentheses supression for gcc. [Martin Hořeňovský]

  If the gcc version supports `_Pragma` properly, we use that to disable
  it locally inside assertions.

  Otherwise we disable it for the entire TU.

  Fixes #674
- Some minor clean-up to Python script. [Phil Nash]
- Push/pop warnings when disabling parentheses warnings within assertion
  (gcc/ clang) [Phil Nash]
- Added `CATCH_CONFIG_FAST_COMPILE` to documentation. [Martin
  Hořeňovský]
- Merge branch 'dev-performance-round3' [Martin Hořeňovský]
- Move debug break out of tests, speeds up compilation time. [Martin
  Hořeňovský]

  This is hidden behind CATCH_CONFIG_FAST_COMPILE
- Benchmark script: allow passing flags to compiler. [Martin Hořeňovský]
- Benchmark script: use median AND mean of compile time. [Martin
  Hořeňovský]
- Make the benchmarking script Python 2 compatible. [Martin Hořeňovský]

  Ended up using `time.time()`, even if it supposedly has worse accuracy,
  because Python running under WSL supports `time.clock()` very badly.
- Added a script for running synthetic compile time benchmark. [Martin
  Hořeňovský]
- Added SOCI to open-source users. [Phil Nash]
- Added link to matchers docs from readme. [Phil Nash]
- Fix wrong short option for section. [Kevin Wojniak]
- Matcher documentation. [Phil Nash]
- Import MatcherBase to Catch namespace. [Phil Nash]
- Renamed toStringUncached -> describe. [Phil Nash]
- Extracted string matchers impl into cpp that is only compiled into
  main TU. [Phil Nash]
- New Matchers implementation - simpler - less templates and machinery -
  no cloning, copying or unnecessary heap allocations - better factored.
  [Phil Nash]
- Removed test for invoking String Matcher with NULL (this will no
  longer be supported) [Phil Nash]
- Added appveyor.yml for CI with VS {2013, 2015} for {Win32, x64}
  [Martin Hořeňovský]
- Added missing #include in test file. [Phil Nash]


v1.7.2 (2017-02-13)
-------------------
- V1.7.2 build. [Phil Nash]
- XML Reporter closes tag and flushes stream at end of TestCase and
  Section tags. This fixes an issue where XML reports on stdout are
  broken by printf statements. [Phil Nash]
- More include simplifications. [Martin Hořeňovský]
- Removed single char contains() - had incorrect prototype anyway. [Phil
  Nash]
- Replaced use of dynamic_cast with static_cast. It wasn't necessary
  anyway. This addresses #821. [Phil Nash]
- Fixed editing mishap in documentation. [Martin Hořeňovský]
- Expanded the practical example in slow-compiles documentation. [Martin
  Hořeňovský]
- Fixed typo in CLI error reporting. [Martin Hořeňovský]
- Couple more includes cleaned out. [Martin Hořeňovský]
- Moved some std includes out from catch_common.h. [Martin Hořeňovský]
- Removed reference to DEBUG in command line docs. [Phil Nash]
- Added std:: qualification to some functions from C stdlib. [Martin
  Hořeňovský]

  This should solve #543, once Clara changes are in as well.
- Added example of how to separately compile Catch's main. [Martin
  Hořeňovský]

  Closes #632
- Added links to open source users page from general pages. [Phil Nash]
- Marked IConfig implementations in Config CATCH_OVERRIDE (silences
  warnings) [Phil Nash]
- Tagged a C++11 specific test with [c++11] to exclude from approval
  tests (for now) [Phil Nash]
- Fix MSVC /analyze warning about inconsistent annotations. [Martin
  Hořeňovský]
- The file/ line in sections is now of the section. not the test case.
  [Phil Nash]
- Added compilation tests to approvals. [Phil Nash]
- Added file for listing commercial users. [Phil Nash]
- REQUIRE_THROWS_AS now catches exception by const& [Martin Hořeňovský]

  Prevents some warnings caused by catching complex types by value.

  Closes #542
- REQUIRE_THROWS_AS is now reported with expected type as well. [Martin
  Hořeňovský]

  Also updated tests to reflect this change.
- Removed an obsolete file that somehow got into the previous master.
  [Martin Hořeňovský]
- Added some more open source projects. [Phil Nash]
- Added 3rd party bug to documentation. [Martin Hořeňovský]
- Corrected formatting. [Phil Nash]
- Added ChakraCore, Couchbase-lite and MAME rot OS projects. [Phil Nash]
- Added RxCpp to OS page. [Phil Nash]
- Seeded new doc page for tracking open source projects that use Catch.
  [Phil Nash]
- Documented the _THROWS_WITH macros, as well as slightly expanding the
  matchers docs. [Phil Nash]
- Rebased approvals with tags and description attributes in XML report.
  [Phil Nash]
- XmlReporter: Trim test case name; added description and tags
  attributes to the test case element in the xml report. [Marek Klus]
- XmlWriter can specify a stylesheet Provide an extension point on
  XmlReporter to be able to supply a stylesheet url in a derived
  implementation. [Phil Nash]
- XmlWriter reverts to XML 1.0. Character encodings that are not valid
  in XML 1.0 are instead written using C-style escapes. [Phil Nash]
- Added tests (single char pretty printing + op overload) [Martin
  Hořeňovský]

  Tests for issue #809 -- Potentional operator overload ambiguity -- and
  PR #646 -- Pretty print characters.
- Improved .travis.yml. [Martin Hořeňovský]

  * Removed ccache (it was slowing down the compilation for some reason)
  * Enabled some C++11 builds (gcc 4.8, gcc 6, clang 3.8 for now)
  * Added gcc 4.4, 4.7 and clang 3.4


v1.7.1 (2017-02-07)
-------------------
- V1.7.1 build. [Martin Hořeňovský]
- Revert "First cut of Evaluate refactoring to remove int
  specialisations, among other things" [Phil Nash]

  This reverts commit 39753558eb635886555a07e0fa01ee72816c06f6.
- Deregister SEH handler before reporting SE. [Martin Hořeňovský]
- Removed const qualification to disambiguate between operator
  overloads. [Martin Hořeňovský]
- XmllWriter flushes the stream after every endElement now. [Phil Nash]
- Rebased again - against the right executable this time :-s. [Phil
  Nash]
- Rebased approvals following previous reversal (d’oh!) [Phil Nash]
- Revert "XmlWriter reverts to XML 1.0." [Phil Nash]

  This reverts commit a189387f49f129a3554c47426a0dfe176c5c0781.
- Added stdout and stderr to XML Reporter. [Phil Nash]
- XmlWriter reverts to XML 1.0. Character encodings that are not valid
  in XML 1.0 are instead written using C-style escapes. [Phil Nash]
- Merge branch 'master' of https://github.com/philsquared/Catch. [Phil
  Nash]
- Add explanation of THROW assertion limits + using lambda. [Martin
  Hořeňovský]
- More documentation of known issues. [Martin Hořeňovský]

  Closes #315
- First cut of Evaluate refactoring to remove int specialisations, among
  other things. [Phil Nash]
- Fixes for MinGW compatibility. [Martin Hořeňovský]

  Some versions of MinGW do not support enough of Win32 API to let us work
  with SEH, so SEH is now MSVC only (+ configurable toggle).

  Also made use of gmtime_s MSVC only (as oposed to Windows only).

  Fixes #805
- New documentation section: "known limitations" [Martin Hořeňovský]

  It contains known limitation such as the fact that Catch is not thread
  safe, it does not support running tests in forked process or running
  multiple tests in parallel

  closes #399
  closes #681
  closes #246
  closes #483
- Include windows.h proxy header, instead of windows.h itself. [Martin
  Hořeňovský]

  Because the signal changes were in a different branch from the windows.h
  related changes, the SEH handling code included the header directly.

  Fixes #803


v1.7.0 (2017-02-01)
-------------------
- V1.7.0 build. [Martin Hořeňovský]
- Scripts intended to be run should now have x bit set. [Martin
  Hořeňovský]
- Remove \l, add \f in character pretty printing. [Martin Hořeňovský]

  I have never head of \l and MSVC warns about unknown escape sequence, so
  I changed it into \f that definitely exists and potentially might be
  useful.
- Fix travis build + build warnings. [Martin Hořeňovský]

  The cmake download was failing, so we were relying on the old cmake,
  which I broke recently (in 7ae96c710b579f8beb58d713e0e93192755bd37d).
  Now the download should work again.

  Also fixed warning that the requested OSX image no longer exists and
  that it is automatically substituted for xcode 7.3 image.
- Typo. [Phil Nash]
- Updated command line docs with info on -c for running sections, as
  well as -# for filenames as tags. [Phil Nash]
- Fixed bugs in escape char handling in test names 1. If escape char is
  first char, sets start of range 2. Multiple escape chars are handled
  (offsets chars to remove) [Phil Nash]
- Put quote marks around printed characters; also nicely print some
  escapes. [Eric Schmidt]
- Cap main exit code to 255 (#797) [Jan Včelák]

  Changed default main to clamp exit code to 8 bits because of POSIX limitations.

  Updated documentation about declaring non-default main.
- Added INSTALL commands (#788) [Saad K]

  Added INSTALL commands - this is especially useful when adding dependencies (such as CATCH) by using the ExternalProject_Add command
- Bumped min cmake version to 3.0. [Martin Hořeňovský]

  Now we can use target_compile_option to privately add warnings to our
  build, without polluting outside CXX_FLAGS.
- Expr is now cast to void in THROWS family of assertions. [Martin
  Hořeňovský]

  This prevents Clang from complaining about unused value in expressions
  containing explicit casts used in the THROW assertion macro family.

  Example:
  `REQUIRE_THROWS_AS(static_cast<bool>(object), std::bad_cast);` would
  trigger `-Wunused-value` warning. Now it does not.

  Credits to Arto Bendiken, who submitted a PR almost 3 years ago, but his
  branch has since died and I was unable to merge it.
- Returned basic warnings to CMake generated builds. [Martin Hořeňovský]
- Enable breaking into debugger on Mac. [Josef Kemetmueller]

  The integrated assembler segment was missing an underscore:
  "_asm__". Also we remove the "DEBUG" macro check, so we are consistent
  with the linux and windows variant.
  Now breaking into gdb on failure should work via:
  	gdb --args test_executable --break
- Fixed SEH deregistration on Windows. [Martin Hořeňovský]

  Should fix #796
- Improved assertion documentation. [Martin Hořeňovský]

  Mentioned that decomposing `&&` and `||` is not supported, gave examples
  + possible workarounds.

  Closes #621, #787, #341 and maybe others I haven't found.
- Merge branch 'dev-performance-round2' [Martin Hořeňovský]
- Added benchmark for the char literals change. [Martin Hořeňovský]
- Use char literal instead of string literal with 1 char. [Martin
  Hořeňovský]

  In reality, this is a relatively small performance improvement,
  especially with the previous improvements removing lots of superfluous
  string handling, but still was measurable.
- Added benchmark result for the SourceLineInfo change. [Martin
  Hořeňovský]
- Use const char* for filename in SourceLineInfo. [Martin Hořeňovský]

  This is sane, because those `const char*`s are given to us by compiler,
  from the text area and thus we do not have to manage their lifetimes. We
  also never want to change them.

  Also moved copy constructor to compiler-generated methods, not sure why
  it wasn't -- even before it was the same as a compiler would generate.
- Merge branch 'templates' [Martin Hořeňovský]
- First draft of issue and PR templates. [Martin Hořeňovský]

  Apparently we can also get contributing.md to be linked from
  issues and PRs, but it would also have to be in .github folder
  or in root of the project.
- Revert "use sizeof(expr) for unevaluated syntax check" [Martin
  Hořeňovský]

  Using sizeof(expr) can trigger a compile-time error,
  "lambda expressions are not allowed in an unevaluated context", when passing
  expression containing lambda, like a std algorithm. This error is considered
  a standard defect, as it is meant to prevent lambdas in decltype
  or templates, but not in sizeof.

  This reverts commit 227598af47e4d46f06cfcc879f206eb34e681275.
- Compilation warnings fix (#791) [Alexander Ryabykin]

  * Compilation warnings fix

  * Removed unused argument from reportFatal function
- Fixed inconsistent and trailing whitespace. [Martin Hořeňovský]

  This means that all tabs used in indentation are now 4 spaces and that
  there should be no more trailing whitespace.

  Ill also look into creating a pre-commit hook that will prevent this
  from happening in the future.

  Fixes #105
- Enabled previous commit under MSVC, introduced new feature toggle.
  [Martin Hořeňovský]
- Add support for comparison of Approx with strong typedefs. [Jonathan
  Coe]

  closes #652
- Direct download link now links to latest release version. [Martin
  Hořeňovský]

  Also edited releaseCommon script to update the link in readme as well.
- Change include -> single_include in CMake example. [Joshua Gerrard]
- Added CheckFileList in CMake over the benchmark sources. [Martin
  Hořeňovský]
- Merge branch 'dev-performance' [Martin Hořeňovský]
- Renamed measurement script for benchmarking. [Martin Hořeňovský]
- Added copyright headers to benchmark files. [Martin Hořeňovský]
- Added benchmark for previous commit, added iterations to failure
  bench. [Martin Hořeňovský]
- Various small string usage performance improvements. [Martin
  Hořeňovský]

  * Empty strings are now direct constructed as `std::string()`, not as empty string literals.
  * `startsWith` and `endsWith` no longer construct new a string. This should be an improvement
  for libstdc++ when using older standards, as it doesn't use SSO but COW and thus even short
  strings are expensive to first create.
  * Various places now use char literal instead of string literals containing single char.
  ** `startsWith` and `endsWith` now also have overload that takes single char.

  Generally the performance improvements under VS2015 are small, as going from short string
  to char is mostly meaningless because of SSO (Catch doesn't push string handling that hard)
  and previous commit removed most string handling if tests pass, which is the expect case.
- Added benchmark with Mickey Rose's improvements. [Martin Hořeňovský]
- Lazily stringify expressions. [Mickey Rose]
- First commit of benchmarks for Catch runtime perf. [Martin Hořeňovský]

  So far its very much a WIP with some problems that are known already and
  not very representative tests.
- Merge branch 'dev-signals' [Martin Hořeňovský]
- If we receive a signal, we re-register ALL previous signal handlers.
  [Martin Hořeňovský]

  This fixes the case when we pass signal to previously registered
  handler, and it needs to transform the signal into different one.

  Still problematic: What if the signal handler we replaced does not
  terminate the application? We can end up in a weird state and loop
  forever.

  Possible solution: Deregister our signal handlers, CALL the previous
  signal handler explicitly and if control returns, abort. This would
  however complicate our code quite a bit, as we would have to parse the
  sigaction we delegate to, decide whether to use signal handler or signal
  action, etc...
- Removed superfluous comments (bad merge after cherry pick). [Martin
  Hořeňovský]
- Reset signals immediately after use and re-raise orginal signal
  instead of just exiting. [Phil Nash]
- Added signal handling under Windows. [Martin Hořeňovský]

  Only some "signals" are handled under Windows, because Windows does not
  use signals per-se and the mechanics are different. For now, we handle
  sigsegv, stack overflow, div-by-zero and sigill. We can also
  meaningfully
  add various floating point errors, but not sigterm and family, because
  sigterm is not a structured exception under Windows.

  There is also no catch-all, because that would also catch various
  debugger-related exceptions, like EXCEPTION_BREAKPOINT.
- Fix for sigsegv stack overflow behavior. [Martin Hořeňovský]

  Also stops Catch from assuming its the only signal user in the binary,
  and makes it restore the signal handlers it has replaced. Same goes for
  the signal stack.

  The signal stack itself probably shouldn't be always reallocated for
  fragmentation reasons, but that can be fixed later on.
- Mark CHECKed-throw test as [failing] [Phil Nash]
- Changed exception tests to allow for now throw-from-CHECK behaviour.
  [Phil Nash]
- CHECK no longer stops running SECTION on exception. [Martin
  Hořeňovský]

  This seems to be much closer to desired behaviour than the current one, where
  CHECK(false) lets the execution continue, but CHECK(<throws>) does not.
- Don’t include tests that rely on varying two-phase-lookup behaviour in
  approval tests. [Phil Nash]
- Added [!nonportable] tag. [Phil Nash]
- Restated text format loop to avoid out-of-bounds condition. [Phil
  Nash]
- Added missing <iterator> #include. [Phil Nash]
- Added surrogate cpp for catch_test_case_tracker. [Phil Nash]
- First cut of -c/—section option for running specific sections. [Phil
  Nash]
- Text formatting rework Rewrote main wrapping loop. Now uses iterators
  instead of indices and intermediate strings. Differentiates between
  chars to wrap before, after or instead of. Doesn’t preserve trailing
  newlines. Wraps or more characters. Dropped support for using tab
  character as an indent setting control char. Hopefully avoids all the
  undefined behaviour and other bugs of the previous implementation.
  [Phil Nash]


v1.6.1 (2017-01-20)
-------------------
- V1.6.1 build. [Martin Hořeňovský]
- Python scripts can now be run directly from bash. [Martin Hořeňovský]
- Approval tests are now mostly Windows compatible. [Martin Hořeňovský]

  There are some differences in output between Catch on Windows and
  Catch on Linux, that indicate a minor bug, but those have to be fixed separately.
- Approval tests now use Python std lib instead of call to diff. [Martin
  Hořeňovský]

  This needed to change to let it run on Windows as well as on the Unices
- Approval tests now uses path relative to cwd, not the catch folder.
  [Martin Hořeňovský]

  This means that bash's autocompletion is actually helpful.
- Simplify output filtering in approvalTests.py. [Mickey Rose]
- Use sizeof(expr) for unevaluated syntax check. [Mickey Rose]
- Changed documentation to use standard main function signature. [Martin
  Hořeňovský]
- Force short-circuited evaluation for types that have overloaded &&.
  [Martin Hořeňovský]

  This fixes #574.
- JUnit reporter outputs timestamps now. [Martin Hořeňovský]

  Also extended approval tests script to support the change
- Added the new proxy header to CMakeLists.txt. [Martin Hořeňovský]
- Merge branch 'windows-header-defines' of
  https://github.com/horenmar/Catch. [Martin Hořeňovský]
- Extracted NOMINMAX and WIN32_LEAN_AND_MEAN guards into a proxy header.
  [Martin Hořeňovský]
- Added NOMINMAX and WIN32_LEAN_AND_MEAN defines before including
  windows.h. [Martin Hořeňovský]

  This stops the `windows.h` header from defining `min` and `max` macros
  and including lot of Windows APIs that are not needed by Catch.
- Clean up generator state. [Phil Nash]
- Suppress use of __COUNTER__ when being parsed by CLion (or AppCode).
  [Phil Nash]
- Fix missing CATCH_ for CHECK_THAT in prefixed macro version. [jbo-
  ableton]
- Enabled CMake dev warnings in travis. [Martin Hořeňovský]
- CMake will now warn if a file is in folder, but not in variable.
  [Martin Hořeňovský]
- Use inline assembly with gcc under Linux for CATCH_TRAP. [Vadim
  Zeitlin]

  This is more convenient than using the generic portable raise(SIGTRAP) as it
  avoids having another stack frame in the debugger when the break happens.
- Refactor CATCH_BREAK_INTO_DEBUGGER() to avoid repetition. [Vadim
  Zeitlin]

  Don't duplicate Catch::isDebuggerActive() check many times, do it just once
  in CATCH_BREAK_INTO_DEBUGGER() definition and use a separate CATCH_TRAP()
  macro for the really platform-dependent part.
- Add support for breaking into debugger for Linux. [Vadim Zeitlin]

  Use Linux-specific /proc/$PID/status file to check whether we're being
  debugged and a generic raise(SIGTRAP) to actually break into the debugger.
- Added single char version of logo. [Phil Nash]
- Sorted file lists in CMakeLists.txt for easier maintainence. [Phil
  Nash]
- Removed make file (now generated from CMake) [Phil Nash]
- Added note on escaping names on command line to docs. [Phil Nash]
- Tweaked release notes page with better formatting. [Phil Nash]
- Fixed type in “Release Notes” link. [Phil Nash]


v1.6.0 (2017-01-11)
-------------------
- V1.6.0 build - including release notes. [Phil Nash]
- Added \ as escape character in test names on the command line - so you
  can run tests by name when they contain , or [ [Phil Nash]
- Added missing #include so CATCH_CONFIG_COUNTER properly takes into
  account the current compiler. May address #677 and #435 and others.
  [Phil Nash]
- Merge pull request #775 from philsquared/standardizing-feature-
  toggles. [Phil Nash]

  Standardize C++11 feature toggles to follow documentation
- Standardize C++11 feature toggles to follow documentation. [Martin
  Hořeňovský]

  Closes #774
- Added missing C++11 feature toggle to docs. [Martin Hořeňovský]
- Updated docs for contributing. [Phil Nash]
- Fixed compile error under VS2015 /c++:latest, caused by using
  random_shuffle. [Martin Hořeňovský]

  Now if we detect C++11 compiler, or MSVC in version corresponding to VS2015,
  we switch from using `std::random_shuffle` to `std::shuffle`.

  `std::random_shuffle` was officially deprecated in C++14, and removed in C++17.

  Also removed guarded inclusion of `<random>` header, as there was nothing
  in the header that used it.
- Renamed missing project explainer filename. [Phil Nash]
- Merge pull request #767 from hmich/xml-encoder-extended-ascii. [Phil
  Nash]

  Do not encode extended ASCII characters in XML reporter
- Do not encode extended ASCII characters in XML reporter. [Igor
  Akhmetov]
- Removed all manually maintained project files in favour of
  instructions on how to use CMake to generate them. [Phil Nash]
- Set project name in CMakeLists.txt to CatchSelfTest. [Phil Nash]
- CMake project groups test files separately from surrogate impl files
  for nicer rendering as XCode/ VS projects. [Phil Nash]
- Make backticks symmetric in markdown. [Kylo Ginsberg]
- Added approvals for “Greater-than inequalities with different
  epsilons” test. [Phil Nash]
- Excluded two more C++11 tests from Approval tests. [Phil Nash]
- Exclude test name from approval tests. [Phil Nash]
- Marked tests that use C++11 features with [c++11] tag and exclude them
  from approval tests. [Phil Nash]
- Approval tests can use Catch path fixed in env. var, and convert
  nullptr and __null to 0 for comparison. [Phil Nash]
- Add support for inequalities. [Jonathan B. Coe]
- Changed build status to be always taken from master. [Martin
  Hořeňovský]

  Before it was taken from whatever last build happened, which led it show
  a build error because I took PR against wrong branch.

  This should be fixed now.
- Minor typo fix. [Antoine Wendlinger]
- URL fixed. [Eldar Zakirov]
- Remove concatenation of m_exprComponents.op in if-branch where op has
  tested empty in previous line. [Ross Bencina]
- Add missing argument to CATCH_CHECK_THROWS (closes #602) [Kevin Ushey]
- Merge branch 'philipp-classen-master' [Martin Hořeňovský]

  Removed changes to the single-include header.
- Fixed shell color code of "Blue" [Philipp Claßen]
- Fix grammar error in tutorial.md. [faulda]

  It's = it is
  In the sentence "In fact it is usually a good idea to put the block with the ```#define``` [in it's own source file](slow-compiles.md).", the correct usage is "its", not "it's".
- Own-main.md: fix typo. [Victor]
- Fixing a couple of typos. [andrew morton]

  I tried to make sure I wasn't changing any British spellings so I apologize
  if I've mixed any up.
- Added headers to CMake project (for CLion) [Phil Nash]
- Fixed Travis and CMake after moving CMakeLists.txt. [Phil Nash]
- Moved CMake into root folder (where it’s much happier - especially for
  CLion) [Phil Nash]


v1.5.9 (2016-11-29)
-------------------
- Build 1.5.9. [Phil Nash]
- Removed now redundant xml stream initialisation. [Phil Nash]
- Merge branch 'horenmar-xml-reporter-fix' [Phil Nash]
- Merge branch 'xml-reporter-fix' of https://github.com/horenmar/Catch
  into horenmar-xml-reporter-fix. [Phil Nash]
- Fix XmlReporter always writing first line to stdout. [Martin
  Hořeňovský]
- Merge branch 'horenmar-missing-include-fix' [Phil Nash]
- Merge branch 'missing-include-fix' of
  https://github.com/horenmar/Catch into horenmar-missing-include-fix.
  [Phil Nash]
- Fixes build error caused by missing include. [Martin Hořeňovský]
- Explicitly convert int to char during transform on string (equivalent
  of PR #756) [Phil Nash]
- Sort test ordering during Approval testing. [Phil Nash]
- Ignore CMake and CLion generated files. [Phil Nash]
- Added some missing source files (including all SurrogateCpps) to CMake
  project. Fixed up relative include paths to make this work. [Phil
  Nash]


v1.5.8 (2016-10-26)
-------------------
- Build 1.5.8. [Phil Nash]
- Merge branch 'BillyONeal-master' [Phil Nash]
- Merge branch 'master' of https://github.com/BillyONeal/Catch into
  BillyONeal-master. [Phil Nash]
- Fix transform without a lambda. [Billy Robert O'Neal III]

  Catch apparently supports targeting C++03, so use an inline function
  instead.
- Fix transform narrowing warnings. [Billy Robert O'Neal III]

  Catch passes ::tolower into std::transform with string iterators.
  ::tolower has the signature int(int), which triggers a stealth narrowing
  warning inside std::transform, because transform calls
  *_Dest = _Fn(*_First), which implicitly narrows an int to a char.

  For this particular application the narrowing is fine, so explicitly
  narrow in a lambda.
- Fix random_shuffle narrowing warnings. [Billy Robert O'Neal III]

  Catch passes an RNG which accepts int to random_shuffle. Inside
  random_shuffle, the STL tries to call that RNG with the difference_type
  of the user provided iterators. For std::vector, this is ptrdiff_t,
  which on amd64 builds is wider than int. This triggers a narrowing
  warning because the 64 bit difference is being truncated to 32 bits.

  Note that this RNG implementation still does not produce a correctly
  uniformly shuffled result -- it's currently asserting that std::rand
  can produce 1000000 which is false -- but I don't know enough about
  how much repeatable shuffles are necessary here, so I'm leaving that
  alone for now.
- Rename element for Fatal Error Condition so it doesn't have spaces
  Fixes: #685. [Phil Nash]
- Merge pull request #716 from jbcoe/master. [Phil Nash]

  Quick fix for failing travis builds on OS X
- Quick fix for failing travis builds on os x. [Jonathan B. Coe]
- Removed XCode6 builds (which were erroring anyway) and added XCode8
  builds. [Phil Nash]


v1.5.7 (2016-09-27)
-------------------
- Build 1.5.7. [Phil Nash]
- --list-test-names quotes test names that start with # - completes
  #717. [Phil Nash]
- Rebased following recent changes. [Phil Nash]
- -f supports quoted test names (test name surrounded with "
  characters). This is the first part to resolving #717. [Phil Nash]
- Added braces to emphasise the return logic. [Phil Nash]
- Merge pull request #680 from nabijaczleweli/master. [Phil Nash]

  Fix misindent in internal/catch_test_spec.hpp:70
- Fix misindent. [nabijaczleweli]

  Closes #679
- Merge pull request #701 from razeh/master. [Phil Nash]

  Fixes for XML encoding.
- Fixes for XML encoding. [Robert A Zeh]

  This commit fixes the following scenario:
    * You have a test that compares strings with embedded control
    characters.
    * The test fails.
    * You are using JUnit tests within TeamCity.

  Before this commit, the JUnit report watcher fails on parsing the XML
  for two reasons: the control characters are missing a semicolon at the
  end, and the XML document doesn't specify that it is XML 1.1.

  XML 1.0 --- what we get if we don't specify an XML version --- doesn't support embedding control characters --- see
  http://stackoverflow.com/questions/404107/why-are-control-characters-illegal-in-xml
  for all of the gory details.

  This is based on PR #588 by @mrpi
- Merge pull request #705 from hmich/xml-reporter-trim. [Phil Nash]

  Do not trim test case names in the XML reporter.
- Do not trim test case names in the XML reporter. [Igor Akhmetov]

  SCENARIO does not add leading spaces to the test name (only BDD-style section
  names are modified), so the trimming is not necessary. But if the name is
  trimmed, it makes it harder to correlate the output of XML reporter with tests
  that have leading spaces in their name: e.g. these tests will have the same name
  attribute:

  TEST_CASE("Test") {}
  TEST_CASE(" Test") {}


v1.5.6 (2016-06-09)
-------------------
- V1.5.6. [Phil Nash]
- Use Clara v0.0.2.4 (updated) - fix for string lengths. [Phil Nash]
- Fixed RNG issue with pre C++14 compilers. [Phil Nash]


v1.5.5 (2016-06-09)
-------------------
- V1.5.5: Deal with auto_ptr and random_shuffle hard deprecations in
  C++14. [Phil Nash]
- Use std::shuffle instead of (deprecated) std::random_shuffle if C++14
  detected. [Phil Nash]
- Switched remaining std::auto_ptrs to use CATCH_AUTO_PTR. [Phil Nash]


v1.5.4 (2016-05-12)
-------------------
- V1.5.4. [Phil Nash]
- "test" expression using !! instead of static_cast to bool. This
  addresses #657 while (hopefully) maintaining fix for #574. [Phil Nash]


v1.5.3 (2016-05-12)
-------------------
- V1.5.3. [Phil Nash]
- Merge branch 'rcdailey-throw-on-duplicate-tests' [Phil Nash]
- Merge branch 'throw-on-duplicate-tests' of
  git://github.com/rcdailey/Catch into rcdailey-throw-on-duplicate-
  tests. [Phil Nash]
- [#608] Don't use exit() on duplicate test descriptions. [Robert
  Dailey]

  Instead of `exit(1)`, it now throws `std::runtime_error` with the details
  of the failure. This exception is handled in `run()` at a higher level where
  the log is printed to cerr and the test gracefully exits.
- Merge pull request #656 from daniel-j-h/better_travis. [Phil Nash]

  Pins LLVM 3.8 (stable) instead of tracking the nightly repository
- Pins LLVM 3.8 (stable) instead of tracking the nightly repository.
  [Daniel J. Hofmann]


v1.5.2 (2016-05-07)
-------------------
- V1.5.2. [Phil Nash]
- Using Clara 0.0.2.4 - fixes issue with spaces in quoted arguments.
  [Phil Nash]


v1.5.1 (2016-04-28)
-------------------
- V1.5.1. [Phil Nash]
- Removed use of dynamic_cast from test_case_tracker. (Thanks to #631
  and #648) [Phil Nash]
- Removed use of dynamic_cast for MultipleReporters (Thanks to #630,
  #636 and #648) [Phil Nash]


v1.5.0 (2016-04-25)
-------------------
- Regenerated single include (forgot for previously tagged release)
  [Phil Nash]
- V1.5.0 (due to new embedded Clara) [Phil Nash]
- Updated embedded Clara to 0.0.2.3 - has all new, more robust, token
  parsing. - eliminates issue with unreachable code - allows use of
  forward slashes to introduce short args on Windows. [Phil Nash]
- Merge branch 'AzCopey-hotfix/override-warning' [Phil Nash]
- Added missing CATCH_OVERRIDE to
  CumulativeReporterBase::assertionEnded(). This fixes a warning when
  building in Xcode 7.2+ with default warning settings. [Ian Copland]
- Merge pull request #634 from rafaeleyng/patch-1. [Phil Nash]

  Update tutorial.md
- Update tutorial.md. [Rafael Eyng]

  Closes #633


v1.4.0 (2016-03-15)
-------------------
- V1.4.0 - use __COUNTER__ for unique IDS instead of __LINE__ (where
  possible) + bug fixes. [Phil Nash]
- Fixed !shouldfail. [Phil Nash]
- Use __COUNTER__ when generating unique names instead of __LINE__, if
  available. Based on PR #351. [Phil Nash]
- Build v1.3.6 (include's David Grayson's fix for the gcc pragma) [Phil
  Nash]
- Merge branch 'DavidEGrayson-pr_gcc_pragma_typo' [Phil Nash]
- Fix CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS: GCC needs to be
  capitalized. [David Grayson]

  Fixes issue #600.


v1.3.5 (2016-02-29)
-------------------
- V1.3.5. [Phil Nash]
- Rebased approvals following colour changes. [Phil Nash]
- Merge branch 'explicit-bool-conversion' of
  git://github.com/seanmiddleditch/Catch into seanmiddleditch-explicit-
  bool-conversion. [Phil Nash]
- Support explicit operator bool. [Sean Middleditch]

  Fix for issue 596
- Suppress parentheses warnings on clang and gcc - should address #593,
  #528, #521, #496 (and possibly others) [Phil Nash]
- Added --use-colour option to give finer control over colourisation.
  --force-colour is still present but deprecated (will remove in v2)
  [Phil Nash]
- Merge pull request #598 from luxe/patch-1. [Phil Nash]

  removes link to missing readme file
- Removes link to missing readme file. [Trevor Hickey]


v1.3.4 (2016-02-10)
-------------------
- Build for v1.3.4. [Phil Nash]
- Use Clara v0.0.1.1. [Phil Nash]
- Fix as suggested in #574 Cast expression to bool to prevent custom &&
  from defeating short-circuiting. [Phil Nash]


v1.3.3 (2016-01-22)
-------------------
- Removed reference to pre 1.0 release from README. [Phil Nash]
- V1.3.3. [Phil Nash]
- Fix EndsWith Matcher (and refactored EndsWith  and StartsWith in terms
  of endsWith and startsWith) (see Issue #573) [Phil Nash]
- Fixed CATCH_REGISTER_TEST_CASE too. [Phil Nash]
- Fixed REGISTER_TEST_CASE for VS2013 (hopefully) - see #549. [Phil
  Nash]
- V1.3.1. [Phil Nash]
- Fixed catch_with_main.hpp (no longer references deleted
  catch_runner.hpp) [Phil Nash]
- Approvals for Matcher change (added comma) [Phil Nash]
- Add missing comma when in captured expression for matchers. [Simon
  Warta]

  Such that
  CHECK_THAT( hex_encode(outbuf) Equals("B5D4045C") )
  becomes
  CHECK_THAT( hex_encode(outbuf), Equals("B5D4045C") )
- Fixed non-variadic version of REGISTER_TEST_CASE. [Phil Nash]


v1.3.1 (2015-12-09)
-------------------
- Patch build to include last two fixes. [Phil Nash]
- Main takes args by non-const char* - see #548. [Phil Nash]
- Initialise m_currentSortOrder - as reported in #545. [Phil Nash]
- Keep Xcode 7.1 happy. [Phil Nash]
- Removed some trailing whitespace. [Phil Nash]


v1.3.0 (2015-12-09)
-------------------
- Merged from develop branch - now v1.3.0. [Phil Nash]
- Added noexcept to CustomStdException destructor. [Phil Nash]
- Dev build 4. [Phil Nash]
- Added support for manually registering test functions. As discussed in
  #421. [Phil Nash]
- Dev build 3. [Phil Nash]
- Exception translators considered even for types deriving from
  std::exception, now - also added docs for exception translators -
  updated approvals. [Phil Nash]
- Session's argv now taken by char const* const* - see #427. [Phil Nash]
- Dev build 2. [Phil Nash]
- Changed Not struct to a class. - it was forward declared as a class,
  which caused warnings on some compilers. It should really have been a
  class anyway. - this addresses the same issue as PR #534, albeit from
  the other angle. [Phil Nash]
- Fixed test names mentioning the new Matcher combinator operators.
  [Phil Nash]
- Build 1.3.0-develop.1. [Phil Nash]

  I've incremented the minor release number. This is a slight abuse of semantic versioning so let me explain:
  I've slightly changed how matchers are used. The matcher macro (REQUIRE_THAT/ CHECK_THAT) used to introduce the Catch::Matchers namespace before the macro token for the matcher, to save you having import the namespace yourself.
  The trouble is if the matcher token is not a simple matcher (can now be an expression) this breaks!
  So I've removed that qualification. Now if you use Matchers you'll have to do somethings like using namespace Catch::Matchers to bring them in.
  This is a breaking change - but, OTTOH, Matchers are an undocumented "beta' feature that I've stated in the past is not guaranteed to have a stable API - so I don't think this warrants a major version change - but I did want to make it significant enough that people do notice that something is going on - and perhaps lead them to this commit message.
- Added &&, || and ! operator overloads for matchers (syntactic sugar
  for AllOf, AnyOf and Not compositional matchers, respectively) [Phil
  Nash]
- Don't introduce Catch::Matchers namespace in macro - this could be a
  breaking change - fixed up self-test code to compensate. [Phil Nash]
- Removed unnecessary parentheses. [Phil Nash]
- Removed unused parameter - as per PR #530. [Phil Nash]
- Stripped trailing whitespace from all source code lines (replaces need
  for PRs #310 and #504) [Phil Nash]
- Added script to strip trailing whitespace from source files. [Phil
  Nash]
- Fixed noexcept destructors issue. [Phil Nash]
- Dev build 16. [Phil Nash]
- Fixed CMake file (changed SectionTrackerTests.cpp - now deleted - to
  the new PartTrackerTests.cpp) [Phil Nash]
- Fixed reversed logic of NoAssertions warning check (that explains the
  previous regressions) [Phil Nash]
- V1.2.1-develop.15 - includes all new section tracker. [Phil Nash]
- Merge branch 'NewSectionTracking' into develop. [Phil Nash]

  * NewSectionTracking:
    Added SUCCEEDs to empty leaf sections to avoid failing due to no assertions
    Removed deprecated section tracking implementation and tests
    Approved changes due to "No assertions" warnings now firing correctly on inner sections
    perform startRun() at the start of each test case
    Fitted new section tracking
    Converted all new part tracking tests/ sections to non variadic form
    Moved all new tracking impl into catch_test_case_tracker.pp
    Removed the "part" component of the tracker names
    More minor tweaks
    Added tests for failing a section within a generator - small fixes to implementation to make it work
    more minor clean-ups
    Cleaned tests up a bit
    Added IndexTracker and got it working with a single generator - made some simplifications to state machine
    More name changes
    Tweaks
    First cut of new section/ part tracking
    Refactored stream related stuff - simpler, polymorphic hierarchy-based, approach - less bitty conditionals spread across the code - all resolved up-front so now config class is immutable (it had evolved the way it was and in need of a clean-up sweep for a long time)
    Some small clean-ups and refactorings - removed previous instance saves in RunContext (they were a hang-over from embedded contexts) - started cleaning up config usage
- Added SUCCEEDs to empty leaf sections to avoid failing due to no
  assertions. [Phil Nash]
- Removed deprecated section tracking implementation and tests. [Phil
  Nash]
- Approved changes due to "No assertions" warnings now firing correctly
  on inner sections. [Phil Nash]
- Perform startRun() at the start of each test case. [Phil Nash]
- Fitted new section tracking. [Phil Nash]
- Converted all new part tracking tests/ sections to non variadic form.
  [Phil Nash]
- Moved all new tracking impl into catch_test_case_tracker.pp. [Phil
  Nash]
- Removed the "part" component of the tracker names. [Phil Nash]
- More minor tweaks. [Phil Nash]
- Added tests for failing a section within a generator - small fixes to
  implementation to make it work. [Phil Nash]
- More minor clean-ups. [Phil Nash]
- Cleaned tests up a bit. [Phil Nash]
- Added IndexTracker and got it working with a single generator - made
  some simplifications to state machine. [Phil Nash]
- More name changes. [Phil Nash]
- Tweaks. [Phil Nash]
- First cut of new section/ part tracking. [Phil Nash]
- Refactored stream related stuff - simpler, polymorphic hierarchy-
  based, approach - less bitty conditionals spread across the code - all
  resolved up-front so now config class is immutable (it had evolved the
  way it was and in need of a clean-up sweep for a long time) [Phil
  Nash]
- Some small clean-ups and refactorings - removed previous instance
  saves in RunContext (they were a hang-over from embedded contexts) -
  started cleaning up config usage. [Phil Nash]
- Fixed some missing sentence structure. [Phil Nash]

  Thanks to #517
- Merge pull request #512 from daniel-j-h/better_travis. [Phil Nash]

  Improves the Travis CI integration
- Improve the Travis CI integration. [Daniel J. Hofmann]

  Adding several improvements, such as:

  - making use of the container based infrastructure
  - using ccache for faster building
  - builds for linux, osx
  - builds for verious gcc, clang versions
  - recent cmake installation
- Dev build 14 - workaround for uncaught_exception issue - avoid
  mutating vector while iterating it (due to re-entrancy) [Phil Nash]
- Do uncaught_exception checking before calling sectionEnded - split the
  uncaught handling (adding to unfinishedSections) into separate method.
  [Phil Nash]
- Dev build 13. [Phil Nash]
- Merge branch 'matcher-not' into develop. [Phil Nash]

  * matcher-not:
    Add matcher: Not()
- Add matcher: Not() [Simon Warta]
- Added unique_ptr detection to compiler_capabilities - as well as use
  by C++11 conformant compilers now enabled for VS2013 on too (see #479)
  - updated docs with this (and long long and override support) [Phil
  Nash]
- Regen single header. [Phil Nash]
- Replaced some stray overrides with CATCH_OVERRIDE. [Phil Nash]
- Removed use of std::copy_if (as it's limited to c++11) [Phil Nash]
- Dev build 12. [Phil Nash]
- Fixes for single include. [Phil Nash]
- Added Listeners (programatically provided extra reporters) [Phil Nash]
- Support for multiple reporters - can't (yet) specify different targets
  for each reporter (e.g. different files) [Phil Nash]
- Refactored test filtering and sorting. [Phil Nash]
- Dev build 11. [Phil Nash]
- Removed Runner class - it served no purpose - split into functions
  instead. [Phil Nash]
- Set group name to -n parameter (or exe name) - As discussed in #469.
  [Phil Nash]
- Approvals rebase - I *think* this fixes an earlier regression, but I'm
  not 100% sure where that came from! [Phil Nash]
- Let gcc use __cplusplus identifier to decide if nullptr supported -
  or, for 4.6, continue to check __GX_EXPERIMENTAL_CXX0X__ See GitHb
  issue #445 and PR #471. [Phil Nash]
- Dev build 10. [Phil Nash]
- Qualified path to xmlwriter to fix travis error. [Phil Nash]
- Dev build 9. [Phil Nash]
- Rebased approvals for long long test. [Phil Nash]
- Added CATCH_CONFIG_CPP11_LONG_LONG support. [Phil Nash]
- Fixed Xml encoding - don't encode apostrophes - only encode quotes in
  attributes - encode control characters (as in PR #465) [Phil Nash]
- Given, When, Then prefixes are now std::strings (and so can be
  prepended to std::strings themselves) see #455. [Phil Nash]
- Dev build 8. [Phil Nash]
- Exception message assertions now work with matchers. [Phil Nash]
- Dev build 7. [Phil Nash]
- Exception message testing now supports wildcards - extracted
  WildcardPattern from TestSpec::NamePattern. [Phil Nash]
- Dev build 6. [Phil Nash]
- Added _THROWS_WITH macros - asserts on exception message. [Phil Nash]
- Updated approvalTests script to allow for modified version strings.
  [Phil Nash]
- Force cout/ cerr to be initialised before errors in test registry are
  printed - see #461. [Phil Nash]
- Dev build 5. [Phil Nash]
- Changed --filenames-as-tags prefix to #, added -# as short form and
  updated docs. [Phil Nash]
- Dev build 4 - undisturbed background colour (windows), from PR #456.
  [Phil Nash]
- Merge branch 'develop' of git://github.com/RandomInEqualities/Catch
  into RandomInEqualities-develop. [Phil Nash]
- Fix for white background in windows powershell when using colour
  output. [csa]

  This commit fixes the white background that appears in windows powershell
  when catch outputs messages with colour. The previous implementation
  ignored the original background colour and defaulted to a white background.
- Dev build 3. [Phil Nash]
- Fixed an issue on some compilers with implicit conversion from nullptr
  to Ptr - also cleaned up some warnings to do with CATCH_NULL. [Phil
  Nash]
- Fixed backslash detection in filenames-as-tags. [Phil Nash]
- Dev build 2. [Phil Nash]
- Reseeds rng before each test case and provides access to seed through
  Catch::rngSeed() function. [Phil Nash]
- Develop build 1. [Phil Nash]
- --filenames-as-tags. [Phil Nash]
- Squashed some warnings about local variables shadowing members - see
  #444. [Phil Nash]
- Use CATCH_NULL instead of NULL - expands to nullptr if
  CATCH_CONFIG_CPP11_NULLPTR is defined (see #444) [Phil Nash]
- Merge pull request #523 from nabijaczleweli/patch-1. [Phil Nash]

  Fix typo in catch_stream.hpp
- Fix typo in catch_stream.hpp. [Jędrzej]
- Revert "Fix parentheses warning on expression evaluation when using
  ccache" [Phil Nash]

  This reverts commit 7da777a4b716f267cb20faf5d117b1322a814519.
- Merge pull request #496 from segalaj/master. [Phil Nash]

  Fix parentheses warning on expression evaluation when using ccache
- Fix parentheses warning on expression evaluation when using ccache.
  [segalaj]
- Force cout/ cerr to be initialised before errors in test registry are
  printed - see #461. [Phil Nash]


v1.2.1 (2015-06-30)
-------------------
- Build for v1.2.1. [Phil Nash]
- Split imply from TrackedSection class to avoid use of incomplete type
  - see #450. [Phil Nash]
- Fixed approval tests script for new version number formatting. [Phil
  Nash]
- Added compiler feature suppression macros. [Phil Nash]

  _NO_ forms to disable detection of features - particularly C++11 features.
  Also removed SFINAE detection (and use in tostring)


v1.2.0 (2015-06-29)
-------------------
- Committed to semantic versioning. [Phil Nash]

  as prompted by #365, #430, #447 and a thread on the google group.
  - split version bumping out of generateSingleHeader script
  - separate scripts for bumping each version component
  - "build" number only incremented for "develop" builds
- Fixed readme to not refer to develop branch. [Phil Nash]
- Use <= operator instead of ->* for decomposer. [Phil Nash]

  Allows more complex LHS expressions - and works around an Eclipse bug.
  See Issues #359, #393 and #247 for details
- Build 3. [Phil Nash]
- Suppressed some more warnings. [Phil Nash]
- Changed hex threshold on ints to 255. [Phil Nash]

  - and print it in *addition* to the decimal form
- Merge branch 'master' of github.com:philsquared/Catch. [Phil Nash]
- Merge pull request #380 from socantre/master. [Phil Nash]

  s/ran/run
- S/ran/run. [socantre]
- Updated toString docs with StringMaker. [Phil Nash]
- Removed CATCH_CONFIG_CPP11_NULLPTR for VS2015. [Phil Nash]

  - as it was already there for VS2010 on
- Build 2. [Phil Nash]
- Reorganised C+11 feature detection a bit and added
  CATCH_CONFIG_CPP11_NULLPTR for VS2015. [Phil Nash]
- Removed some more warnings. [Phil Nash]
- Added comments on multi-file tests to tutorial. [Phil Nash]

  Prompted by PR #397 (and a lot of support history!) - added some comments on how to move beyond "everything in a single file"
- Merge pull request #404 from adzenith/patch-1. [Phil Nash]

  Fix typo in tutorial.md
- Fix typo in tutorial.md. [Nikolaus Wittenstein]
- Merge branch 'BMBurstein-develop' [Phil Nash]
- Merge branch 'develop' of git://github.com/BMBurstein/Catch into
  BMBurstein-develop. [Phil Nash]
- Fix REQUIRE_FALSE so that it aborts test case. [Baruch]
- Updated approvals following merge of develop back to master. [Phil
  Nash]
- Merge branch 'develop' [Phil Nash]
- Fixed a missing ), as per PR #363 and PR #390. [Phil Nash]
- V1.1 build 1 (master) Updated version for master and regenerated
  single include. [Phil Nash]
- Ignore *.xccheckout. [Phil Nash]
- Merged from develop. [Phil Nash]
- Restored tag parsing when checking for reserved tags - had been
  accidentally deleted in an earlier refactoring. A bit worrying that
  this didn't get spotted sooner! [Phil Nash]
- Use reinterpret_cast to eliminate some warnings #369. [Phil Nash]
- Changed comment to work around header stitching bug. [Phil Nash]
- Build 14. [Phil Nash]
- Rebased to include new --force-colour tests. [Phil Nash]
- Merge branch 'peterhuene-develop' into develop. [Phil Nash]
- Merge branch 'develop' of git://github.com/peterhuene/Catch into
  peterhuene-develop. [Phil Nash]
- Add --force-colour option to force colour output. [Peter Huene]

  Adding a --force-colour option to force colour output on POSIX systems,
  provided a debugger is not attached.

  This allows for Catch to output colours even if STDOUT is not a tty,
  which can be the case when the test executable is being spawned by a
  parent process (e.g. CMake's ctest).
- Suppress warnings correctly for Intel compiler #376. [Phil Nash]
- Removed over-eager assertion. Doesn't hold if reporting due to a
  segfault #377. [Phil Nash]
- Changed relative #includes and made SourceLineInfo sortable (added <
  op) [Phil Nash]
- Build 13. [Phil Nash]

  toString for std:tuple
- Added tests for toString<std::tuple<>> and rebased. [Phil Nash]
- Merge branch 'PureAbstract-tuple_to_string' into develop. [Phil Nash]
- Merge branch 'tuple_to_string' of
  https://github.com/PureAbstract/Catch into PureAbstract-
  tuple_to_string. [Phil Nash]
- ToStringTuple - gcc doesn't like tuple init_list ctor. [Andy Sawyer]
- Add tests for toString(std::tuple<...>) [Andy Sawyer]
- Catch_tostring: toString for std::tuple. [Andy Sawyer]
- Catch_tostring: Add includes for tuple, type_traits. [Andy Sawyer]
- Catch_tostring: Move toString overload declarations. [Andy Sawyer]

  - Put all the declarations of the overloads early in the file, so they
    get seen by the templates later on
- Build 12. [Phil Nash]

  - includes updated xml reporter
- Added type attribute to xml reporter output. [Phil Nash]

  - reports the macro used
- Fixed up xml reporter and rebased. [Phil Nash]
- Fixed escaping of ' in TeamCity reporter. [Phil Nash]
- Merge branch 'develop' of https://github.com/SeanCline/Catch into
  develop. [Phil Nash]
- XmlReporter enhancement: Add an attribute for the macro name of an
  expression. [Sean D. Cline]
- XmlReporter enhancement: Add attributes for duration when requested by
  the command line. [Sean D. Cline]
- Move the xml reporter away from the deprecated IReporter interface.
  [Sean D. Cline]
- Build 11. [Phil Nash]
- Rebased. [Phil Nash]
- FIxed a couple of test names. [Phil Nash]
- Support for reporting skipped tests. [Phil Nash]

  - implemented by TeamCity reporter
- Removed #includes for Catch headers. [Phil Nash]

  see comment in file for details
- Regenerated single include. [Phil Nash]
- Fix memset build error. [Phil Nash]

  Moved #include <cstring> to catch_reporter_bases.hpp
- Build 10. [Phil Nash]

  First cut of TeamCity reporter
- Rebased. [Phil Nash]
- Some clean-up ready for first push to GitHub. [Phil Nash]
- Cleaned up section headers. [Phil Nash]

  - and don't reprint test case name
- TeamCity reporter work. [Phil Nash]

  expanded reporting - includes section headers
- Fixed HasExpression check. [Phil Nash]

  classic spurious ! prefix
- Fixed escape order and expression reporting. [Phil Nash]
- TeamCity reporter. [Phil Nash]

  added more detail to the assertion message
- Fixed replace(inPlace) function. [Phil Nash]

  and added tests (should have done that in the first place - I'll never learn!)
- First commit of (in progress) TeamCity reporter. [Phil Nash]

  Should run but is not complete
- Added docs for floating point comparisons. [Phil Nash]
- Extends configuration docs. [Phil Nash]
- Added docs for --invisibles. [Phil Nash]

  also reordered command line docs jump list to match order listed when getting usage from Catch itself.
- Try again to fix --order docs. [Phil Nash]
- Fixed single_include link. [Phil Nash]
- Fixed (hopefully) formatting of '--order' docs. [Phil Nash]

  if only there was a standard-markdown!
- Added docs for --input-file (somehow missing from previous commit)
  [Phil Nash]
- Updated command line docs. [Phil Nash]

  Added docs for:
    -f, --input-file
    --list-test-names-only
    --order
    --rng-seed
- Build 9. [Phil Nash]
- Tweaks to tutorial. [Phil Nash]
- Tags with . prefix are all hidden. [Phil Nash]
- Any tag prefixed with . hides the test. [Phil Nash]
- Removed spurious } [Phil Nash]
- Tweaked formatting. [Phil Nash]
- Build 8. [Phil Nash]
- ToString( int ) uses hex for large values. [Phil Nash]

  now matches behaviour of unsigned int
- Fixed toString for Approx. [Phil Nash]

  restored to a specialisation instead of an overload
- Made approvals more platform agnostic. [Phil Nash]

  removes root from all paths - so only relative paths remain
- Fixed case of tostring.md link. [Phil Nash]
- Added string conversions link. [Phil Nash]
- Last tweak to download text - honest. [Phil Nash]
- Tweaked download link text. [Phil Nash]
- Absolute path to single direct download. [Phil Nash]
- Updated README with direct download link. [Phil Nash]
- Added documentation for toString. [Phil Nash]
- Some toString cleanups. [Phil Nash]
- Added first cut of docs for configuring Catch - initially just covers
  new colour config - also updated all [Home] links in footers to go to
  local readme. [Phil Nash]
- Build 7. [Phil Nash]
- Cleaned up terminal colouring impl and added more config options.
  [Phil Nash]
- Removed some warnings. [Phil Nash]
- Updated NonCopyable (to include C++11 version) and use for Session and
  Section. [Phil Nash]
- Fixed #include. [Phil Nash]
- Only use std::cout/ cert via Catch::cout/ cert - and make those
  conditional on CATCH_CONFIG_NOSTDOUT. [Phil Nash]
- Build 6. [Phil Nash]
- Use reset instead of assignment when updating auto_ptr/unique_ptr.
  [Phil Nash]
- Calls method of FatalConditionHandler (to avoid warnings) [Phil Nash]
- Updated project for Xcode 6. [Phil Nash]
- Build 5. [Phil Nash]
- Moved RandomNumberGenerator out of function and pass in a named
  instance instead of a temporary - both for C++03 compatibility
  reasons. [Phil Nash]
- Enable nullptr for VS2010. [Phil Nash]
- Backed out PR #307 (use nullptr from VS2005) as it seems clr specific.
  [Phil Nash]
- Made sorting functors const. [Phil Nash]
- Added missing #include. [Phil Nash]
- Build 4. [Phil Nash]
- Allow testing ordering to be specified as declaration,
  lexicographical, or random. Allow random seed to be specified. [Phil
  Nash]
- Factored out mention of "unprintable string" ("{?}") [Phil Nash]
- Give (currently not used, so global only) group a name. [Phil Nash]
- Some minor tidy-up/ style alignment of recent toString merges. [Phil
  Nash]
- Build 3. [Phil Nash]
- Added baselines for new test cases. [Phil Nash]
- Changed time function name to reflect that it actually returns
  Microseconds as reported in #323. [Phil Nash]
- Merge branch 'develop' of github.com:philsquared/Catch into develop.
  [Phil Nash]

  # By Andy Sawyer
  # Via Andy Sawyer (1) and Phil Nash (1)
  * 'develop' of github.com:philsquared/Catch:
    Updated CMakeLists.txt for toString work
    A bunch of Catch::toString tests
- Merge pull request #319 from PureAbstract/to_string_tests. [Phil Nash]

  To string tests
- Updated CMakeLists.txt for toString work. [Andy Sawyer]
- A bunch of Catch::toString tests. [Andy Sawyer]
- Merge branch 'develop' of github.com:philsquared/Catch into develop.
  [Phil Nash]

  # By Andy Sawyer
  # Via Andy Sawyer (1) and Phil Nash (1)
  * 'develop' of github.com:philsquared/Catch:
    catch_tostring: tostring for enum class types
    SelfTest: Build as C++11, add EnumToString tests
    SelfTest: refresh makefile
- Merge pull request #318 from PureAbstract/enum_to_string. [Phil Nash]

  Enum to string (for #317)
- Catch_tostring: tostring for enum class types. [Andy Sawyer]
- SelfTest: Build as C++11, add EnumToString tests. [Andy Sawyer]

  Note: EnumToString tests currently fail - haven't made the changes to
  catch_tostring yet.
- SelfTest: refresh makefile. [Andy Sawyer]
- Use nullptr in MSVC from 2005+ (based on PR #307 - thanks alex85k)
  [Phil Nash]
- Merge branch 'master' of github.com:philsquared/Catch into develop.
  [Phil Nash]

  # By Andy Balaam
  # Via Phil Nash (2) and Andy Balaam (1)
  * 'master' of github.com:philsquared/Catch:
    Fix a typo (missing "n")

  Conflicts:
  	README.md
  	include/internal/catch_version.hpp
  	single_include/catch.hpp
- V1.1 build 2 (develop branch) - Signal hander support. [Phil Nash]
- FatalErrorConditions now full close reporter states - so the console
  reporter(s) show final summary and the xml reporters close their tags.
  [Phil Nash]
- Approvals for develop branch. [Phil Nash]
- Removed signal handler test, for now (to avoid screwing up the
  approval tests) [Phil Nash]
- Added signal handlers (and placeholder for SEH handlers) - based on PR
  232 (https://github.com/philsquared/Catch/pull/232 - thanks Lukasz
  Forynski) - Writes to reporter, so gets all the usual context, but
  then exits directly (since the stack cannot be resumed) so no summary
  - On Windows does nothing, as yet. [Phil Nash]
- Merge branch 'master' of github.com:philsquared/Catch into develop.
  [Phil Nash]

  * 'master' of github.com:philsquared/Catch:
    Updated “contributing” docs to reflect new develop branch
- Merge pull request #344 from therocode/patch-1. [Phil Nash]

  Update test-fixtures.md
- Update test-fixtures.md. [Tobias Widlund]

  Fix a small type
- Merge pull request #329 from AnthonySuper/betterdocs. [Phil Nash]

  Documentation Changes
- Documentation Changes. [Anthony Super]

  Modified several sentences for clarity and fixed a few typos.
- Merge pull request #350 from jamiebullock/master. [Phil Nash]

  More generic and maintainable makefile for SelfTest
- More generic and maintainable makefile. Fixes #348. [Jamie Bullock]

  - implicit recipes
  - wildcard glob of C++ files in directory
- Remove missing catch_self_test.cpp, fixes #348. [Jamie Bullock]
- Merged group name commit from develop. [Phil Nash]
- Merge pull request #306 from andybalaam/master. [Phil Nash]

  Fix a typo (missing "n")
- Fix a typo (missing "n") [Andy Balaam]
- Merge branch 'develop' of github.com:philsquared/Catch. [Phil Nash]

  Tweaked wording around ability to do BDD
- Tweaked wording around ability to do BDD. [Phil Nash]
- Updated version for develop branch. [Phil Nash]
- Updated “contributing” docs to reflect new develop branch. [Phil Nash]
- Merge branch 'master' of github.com:philsquared/Catch. [Phil Nash]

  # By Martin Moene
  # Via Martin Moene
  * 'master' of github.com:philsquared/Catch:
    Added bundled compact reporter
    Fixed link to reference section
- Added bundled compact reporter. [Martin Moene]
- Fixed link to reference section. [Martin Moene]
- Build 53 includes wchar_t toString overloads and SCENARIO_METHOD
  macros. [Phil Nash]
- Added approvals for new tests. [Phil Nash]
- Const_casts to get rid of warnings in new wchar_t tests. [Phil Nash]
- Merge branch 'master' of https://github.com/jbrwilkinson/Catch. [Phil
  Nash]

  # By James Wilkinson
  # Via James Wilkinson
  * 'master' of https://github.com/jbrwilkinson/Catch:
    Added SCENARIO_METHOD for BDD testing with fixtures.
- Added SCENARIO_METHOD for BDD testing with fixtures. [James Wilkinson]
- Merge pull request #302 from johannesmoene/doc-index. [Phil Nash]

  Add Readme as documentation entry
- Update link in tutorial. [Martin Moene]
- Add Readme as documentation entry. [Martin Moene]
- Fixed link to blog post. [Martin Moene]
- Merge pull request #301 from bena/master. [Phil Nash]

  toString handles wchar_t raw strings
- Catch's Travis builds are using gcc that doesn't like the auto
  keyword. [Ben Arnold]
- ToString handles wchar_t raw strings. [Ben Arnold]
- Updated docs on slow compiles. [Phil Nash]
- Re-enable warnings disabled for GCC. [Phil Nash]
- Hide warnings with GCC. [Fabien Caylus]
- Added FAQ on slow compiles to docs. [Phil Nash]
- Fixed issue with single include generator - well, partially. The
  problem is it is matching /* … */ comments by assuming the intervening
  lines begin with whitespace followed by a *. This avoids it having to
  maintain extra state, but makes it brittle. It was matching *it = " "
  + *it; as a comment! It now matches on a single space followed by a  *
  and this seems to work for now - but it probably needs to move to
  proper stateful comment handling. [Phil Nash]
- Manual fix for generation error. [Phil Nash]
- Build 52. [Phil Nash]
- Approvals for last change. [Phil Nash]
- More summary formatting tweaks. [Phil Nash]
- Green summary bar is darker if not all passed - and the green part now
  comes at the end (to emphasise the failures) [Phil Nash]
- Format floats like doubles when printing - but add ‘f’ suffix (a lá
  #291) [Phil Nash]
- Build 51. [Phil Nash]
- Section no longer relies on copy-elision for correctness - should
  address #293 - *may* address #271. [Phil Nash]
- Made Colour copyable to remove warning. [Phil Nash]
- Removed C-style casts. [Phil Nash]
- Regenerated single include and baselines. [Phil Nash]
- More tweaks to summary format. [Phil Nash]
- Build 50. [Phil Nash]
- Added [!mayfail] tag to indicate test case that can fail without
  failing the suite. Overhauled the summary report (including the
  expected failure count) [Phil Nash]
- Merge branch 'master' of github.com:philsquared/Catch. [Phil Nash]

  # By Alex Moreno
  # Via Alex Moreno (1) and Phil Nash (1)
  * 'master' of github.com:philsquared/Catch:
    Fixed typo
- Merge pull request #287 from amorenoc/master. [Phil Nash]

  Fixed typo
- Fixed typo. [Alex Moreno]
- Removed use of variadic form of SUCCEED from tests - as per #284.
  [Phil Nash]
- Build 49 - _THROWS fix - tag aliases. [Phil Nash]
- Approved tag alias tests. [Phil Nash]
- Tag aliases feature. [Phil Nash]
- Some clean-ups for string handling in Objective-C. [Phil Nash]
- Merge branch 'master' of github.com:philsquared/Catch. [Phil Nash]

  # By Zhihao Yuan
  # Via Phil Nash (1) and Zhihao Yuan (1)
  * 'master' of github.com:philsquared/Catch:
    fix macro syntax in doc
- Merge pull request #283 from lichray/patch-1. [Phil Nash]

  fix macro syntax in doc
- Fix macro syntax in doc. [Zhihao Yuan]
- Fixed regression with -e. [Phil Nash]
- Build 48 - big assertion capture refactoring. [Phil Nash]
- Fixed single header generator for generating no-impl header. [Phil
  Nash]
- Fixed typo. [Phil Nash]
- Merge branch 'master' of github.com:philsquared/Catch. [Phil Nash]

  # By Joseph Schrag
  # Via Joseph Schrag (1) and Phil Nash (1)
  * 'master' of github.com:philsquared/Catch:
    Fixed Typo
- Merge pull request #282 from jlschrag/patch-1. [Phil Nash]

  Fixed Typo
- Fixed Typo. [Joseph Schrag]
- Renamed ShouldNegate to FalseTest. [Phil Nash]
- Folded ExpressionResultBuilder into ResultBuilder (even more SRP
  violations!) [Phil Nash]
- Big assertion capture refactoring. - moved as much logic out of the
  macros as possible - moved most logic into new ResultBuilder class,
  which wraps ExpressionResultBuilder (may take it over next), subsumes
  ResultAction and also takes place of ExpressionDecomposer. [Phil Nash]

  This introduces many SRP violations - but all in the name of minimising macro logic!
- Approved new test case. [Phil Nash]
- Tweaked rawMemoryToString() along lines of suggestion in #281. [Phil
  Nash]
- Build 47. [Phil Nash]
- Make TagInfo non-local. [Phil Nash]
- Build 46 - Fixes some test spec parser issues and some warnings
  (compiler and analysers) [Phil Nash]
- Fixed dereferenced null issue. [Phil Nash]
- Attempt to prevent analyser warnings about dereferencing null. [Phil
  Nash]
- Approved new test output. [Phil Nash]
- Fixed space separated lists of test specs - they form an AND
  expression. They were forming an OR expression due to changes made to
  fix -f - so that had to be fixed differently. [Phil Nash]
- Minor fixes to a couple of test names. [Phil Nash]
- Tests hidden with legacy ./ prefix tagged as hidden. [Phil Nash]
- Fix case sensitivity when matching tags (now insensitive again) Also
  group case-different tags together when listing. [Phil Nash]
- Killed a couple more warnings (one for VS2010 and one for Clang) [Phil
  Nash]
- Suppressed a load of warnings. [Phil Nash]
- Build 45 - fixes. [Phil Nash]
- Updated approvals after adding extra tests. [Phil Nash]
- Fixed issue with reading test names from file. [Phil Nash]
- Fixed issue with wildcards at the start of a string. [Phil Nash]
- Suppress switch statement warning. [Phil Nash]
- Fixed isHidden regression. [Phil Nash]
- Build 44 - new name/ tag parser (fixes #279) [Phil Nash]
- Refactored last usages of old tag parser and removed all the, now
  redundant, tag parsing code. [Phil Nash]
- Approved all the changes following name/ tag parser rework. [Phil
  Nash]
- Moved catch_test_spec.h to catch_test_spec.hpp. [Phil Nash]
- Switched over to new name/ tag parser. [Phil Nash]
- Moved new test spec code into appropriate header - about to remove old
  test spec code and rewire throughout the codebase! [Phil Nash]
- Small test spec parser refactoring. [Phil Nash]
- First cut of new test spec parser code. [Phil Nash]
- Unanonymised unions to avoid breaking on compilers that don’t support
  them - e.g. GCC 4.3 and 4.4 - fixes #281. [Phil Nash]
- Build 43 - removed some pragmas. [Phil Nash]
- Removed some #pragmas that have been causing problems for now. [Phil
  Nash]
- Build 42: “compact” reporter - thanks to Martin Moene. [Phil Nash]
- Adjusted some elements of style in compact_reporter. [Phil Nash]
- Merged Martin Moene’s “compact reporter” [Phil Nash]
- Suppress some more warnings. [Phil Nash]
- Added ability for releaseNotes script to pull github issue titles.
  [Phil Nash]
- Added script to extract stub for “release notes” - gets last two
  commit hashes for the version file, gets the commit logs between those
  versions and parses out the messages. [Phil Nash]
- Build 41 - fixes. [Phil Nash]
- Changed the way noexcept support is handled to (hopefully) fix #275
  and #273. [Phil Nash]
- Include missing <cstring> header - should fix issue #274. [Phil Nash]
- Build 40 - Fixed endianness when converting numbers to hex strings -
  Added option to show invisibles (/t, /n) in printed strings with -i -
  moved toString() impls to impl file - avoid allocations for static
  strings used in reporter. [Phil Nash]
- Added test for invisibles. [Phil Nash]
- Moved tostring impl into catch_tostring.hpp. [Phil Nash]
- Renamed catch_tostring.hpp catch_tostring.h - in preparation for
  splitting implementation into catch_tostring.hpp. [Phil Nash]
- Added ability to show “invisibles” in strings (just tabs and newline
  chars, for now). [Phil Nash]
- Replace some static strings with static char*s for leak detection
  friendliness (h/t #272) [Phil Nash]
- Considers endianness when printing raw memory into a string. [Phil
  Nash]
- Merge pull request #255 from johannesmoene/fix-python-print. [Phil
  Nash]

  Fix python print
- Fix python scripts for python 3 (print now a function rather than a
  keyword) [Martin Moene]
- Change <> to != [Martin Moene]
- Merge branch 'master' of github.com:philsquared/Catch. [Phil Nash]

  # By Aaron Simmons
  # Via Aaron Simmons (1) and Phil Nash (1)
  * 'master' of github.com:philsquared/Catch:
    GIT_EXECUTABLE undefined
- Merge pull request #260 from paleozogt/patch-1. [Phil Nash]

  GIT_EXECUTABLE undefined
- GIT_EXECUTABLE undefined. [Aaron Simmons]

  This script needs to find_package for git so that GIT_EXECUTABLE is defined.
- Sections are, once again, eagerly entered. When the section tracking
  code was rewritten a while back to simplify and iron out some bugs the
  order of evaluation was changed so that each new section was skipped
  on the first run through. This had unwelcome consequences for some
  people. This commit restores the original semantics (while maintaining
  the simpler, less buggy, new code). [Phil Nash]
- Merge branch 'master' of https://github.com/gnzlbg/Catch. [Phil Nash]

  # By gnzlbg
  # Via gnzlbg
  * 'master' of https://github.com/gnzlbg/Catch:
    Conditionally removes usage of deprecated features

  Conflicts (resolved):
  	include/internal/catch_common.h
  	include/internal/catch_section.hpp
- Conditionally removes usage of deprecated features. [gnzlbg]

  -add macros to test for C++ version and features
  to catch_compiler_capabilities.hpp
  - replaces dynamic exception specifications (deprecated)
  with noexcept in C++ Version >= 11
  - defines defaulted copy constructor/move constructors/assignment
  in C++ Version >= 11 since their implicit generation is deprecated
  under some circumstances.
  - fixes #259
- Build 37. [Phil Nash]
- Changed branchName to char*, as per #266. [Phil Nash]
- Merge branch 'master' of github.com:philsquared/Catch. [Phil Nash]

  # By Alexander Manenko
  # Via Alexander Manenko (1) and Phil Nash (1)
  * 'master' of github.com:philsquared/Catch:
    Fix build issue with TchRunnerMainView in XCode 5
- Merge pull request #269 from alexander-manenko/master. [Phil Nash]

  Fix build issue with TchRunnerMainView in XCode 5
- Fix build issue with TchRunnerMainView in XCode 5. [Alexander Manenko]
- Renamed XCode4 folder to just XCode (It’s been Xcode 5 for a long
  time, now, anyway) [Phil Nash]
- Removed some unnecessary core macros. [Phil Nash]
- Updated approval tests baselines. [Phil Nash]
- Doc tweaks. [Phil Nash]
- Updated docs with new [!throws] behaviour. [Phil Nash]
- Tags beginning with a non alpha-numeric character are now disallowed.
  Added !throws special tag which denotes a test case to be skipped when
  run with -e (the idea being that the test case is expected to throw an
  exception which is not caught within a XXX_THROWS assertion). [Phil
  Nash]
- Build 35. [Phil Nash]
- Secondary fix for #270 (addresses same issue with CHECK) [Phil Nash]
- Fix for #270 (REQUIRE continues if test throws an exception). [Phil
  Nash]

  Added test case that reproduced the bug then applied the fix.
- Re-approved following recent command line description tweak. [Phil
  Nash]
- New version of Clara that fixes operator= issue with ref member (#265)
  [Phil Nash]
- New version of Clara - interface changed slightly - moved clara.h and
  tbc_text_format.h into “external” folder. [Phil Nash]
- Fixed instance of Clara::_ placeholder when using CATCH_CONFIG_RUNNER.
  [Phil Nash]
- Build 30 - with Clara fix for null deref crash. [Phil Nash]
- Updated VS2010 project (removed CmdLineTests.cpp) [Phil Nash]
- Fix problem (hopefully) with single source definitions from Clara -
  define CLARA_CONFIG_MAIN in the right place. [Phil Nash]
- Updated cmake file with command line test removal. [Phil Nash]
- Merge branch 'master' of github.com:philsquared/Catch. [Phil Nash]

  # By David Beckley
  # Via David Beckley (1) and Phil Nash (1)
  * 'master' of github.com:philsquared/Catch:
    Highlight block as C++
- Merge pull request #251 from ThatOtherPerson/patch-1. [Phil Nash]

  Highlight block as C++
- Highlight block as C++ [David Beckley]

  C++ syntax highlighting was not enabled on one of the blocks.
- Build 28 - new version of Clara - removed command line tests. [Phil
  Nash]
- New version of Clara. - updated command line setup with new API -
  updated STITCH macros - force embedded Clara to use Catch’s console
  width (but restore it after) - remove command line tests (as these
  have now moved into the Clara project) [Phil Nash]
- New version of Clara - Clara now built with new stitch script (based
  on generateSingleInclude) - also fixed python scripts for python 3
  (print now a function rather than a keyword) [Phil Nash]
- Build 26. [Phil Nash]
- Updated single include test project. [Phil Nash]
- Updated single include generator to allow for embedded micro-
  libraries. [Phil Nash]
- Added private assignment operator to fix VS2010 issue - thanks to
  Kosta (#239) [Phil Nash]
- Added #include for <memory> to Clara - thanks again, Martin. [Phil
  Nash]
- … and <stdexcept> [Phil Nash]
- Added #include <algorithm> to clara.h - thanks Martin. [Phil Nash]
- Extracted stand-alone micro-library, tbc_text_format.h, from
  catch_text.h. - use this version in clara.h so clara can stand alone.
  [Phil Nash]
- Fixed some comments. [Phil Nash]
- Tweaked Cliche macros/ names. [Phil Nash]
- Made Clara a “Cliche” header, which will be usable independently of
  Catch. - This is just a first step. It still has a dependency on
  catch_text.h, which also needs to be made a Cliche header. - These
  then need their own homes on GitHub. [Phil Nash]
- Build 25 - fix for #231. [Phil Nash]
- Removed unnecessary union name. [Phil Nash]
- Build 24. [Phil Nash]
- Fixes toString() for function pointers and added support for member
  function pointers. - thanks to Malcolm Noyes for supplying sample code
  on which the solution here was based. [Phil Nash]
- Convert pointers to integrates when printing. - handles function
  pointers that way too (otherwise printed as 1 by gcc and clang) [Phil
  Nash]
- Clara ignores anything after a lone — (double dash) - this allows use
  within an environment that appends additional arguments that Clara
  will otherwise reject - generated build 23. [Phil Nash]
- Build 22. [Phil Nash]
- Reporter command line parser errors more eagerly - show all
  “unrecognised option” errors. [Phil Nash]
- Build 21. [Phil Nash]
- Changed Approx::toString() to be implemented in terms of toString(
  double ) (as proposed in #233) [Phil Nash]
- Changed stdout/ stderr messages to be less misleading. [Phil Nash]
- Build 20. [Phil Nash]
- Updated project for OCUnit. [Phil Nash]
- Fixes compiler error for some versions of GCC - Manual application of
  PR #196 (couldn’t merge) - See also #226. [Phil Nash]
- Sneaking last change in without version bump. [Phil Nash]
- Made SUCCESS variadic too (optional stream) [Phil Nash]
- Try again with nullptr compatibility check in GCC. [Phil Nash]
- Build 19 - fixes nullptr regression (I had accidentally left in some
  dev changes) [Phil Nash]
- Build 18. [Phil Nash]
- Compile in CATCH_CONFIG_CPP11_NULLPTR for some compilers. [Phil Nash]
- Test for FAIL that doesn’t take an argument. [Phil Nash]
- Allow FAIL() to be empty. [Phil Nash]
- Build 17. [Phil Nash]
- Fixed warnings for platforms that don’t implement
  CATCH_BREAK_INTO_DEBUGGER - as discussed in #229. [Phil Nash]
- Trim test/ section names in xml reporter - BDD-style test names have
  leading spaces for alignment in the console reporter. [Phil Nash]
- Stop overloading virtualise defined at multiple levels. [Phil Nash]
- Fixed broken single header following script change - fixed the script
  (was missing #ifdefs) - also fixed single include (Xcode) test project
  - build 16. [Phil Nash]
- SourceLineInfo takes char*s instead of std::strings. [Phil Nash]
- Normalised “hidden” tags. [Phil Nash]
- Removed some cruft. [Phil Nash]
- Build 15. [Phil Nash]
- Refactored a lot of code from headers into impl headers only compiled
  into one TU - also added noimpl option to single header script - which
  only generates the non impl code. [Phil Nash]
- Merge pull request #224 from PetterS/cygwinfix. [Phil Nash]

  Fix fileno not always present. fileno(stdout) = 1.
- Fix fileno not always present. fileno(stdout) = STDOUT_FILENO. [Petter
  Strandmark]

  This was a problem when compiling on Cygwin with gcc 4.8.
- Build 14. [Phil Nash]
- Added ability to load names of tests to run from a file. [Phil Nash]

  - use -f to specify filename. Blank lines and lines starting with # are ignored
  - also added --list-test-names-only to list test names out to file in a form that can be immediate read in by -f
- Merge pull request #222 from gnzlbg/cmake-docs. [Phil Nash]

  Add documentation for the CMake build system
- Add documentation for the CMake build system. [gnzlbg]

  - new file "docs/build-system.md" to document the integration of
    Catch with popular build systems.
  - document how to configure Catch as a CMake external project.
- Restored second arg to a TEST_CASE for non variadic compilers. [Phil
  Nash]
- Removed deleted file from CMake. [Phil Nash]
- Removed redundant MetaTestRunner. [Phil Nash]
- Merge branch 'master' of github.com:philsquared/Catch. [Phil Nash]
- Merge pull request #217 from nanoant/patch/std-auto_ptr-deprecated.
  [Phil Nash]

  std::auto_ptr is deprecated in c++11/c++0x
- Std::auto_ptr is deprecated in c++11/c++0x. [Adam Strzelecki]

  This will use std::unique_ptr on C++11 and remove deprecation warning.
- Converted all test case names to "modern" style (freeform text + tags)
  [Phil Nash]
- Removed cruft from VS projects. [Phil Nash]
- Merge pull request #214 from AIM360/weibelt/fix-eol. [Phil Nash]

  Fixed crlf issue
- Fixed crlf issue. [Tobias Weibel]
- Added some more docs. [Phil Nash]
- Build 13. [Phil Nash]
- Print warnings if no assertions and not running with -s. [Phil Nash]
- If no assertions print custom message. [Phil Nash]
- Simplified and tidied test case and tag listing. [Phil Nash]
- Build 12. [Phil Nash]
- Change one more in-page link to work with GitHub generated anchors.
  [Phil Nash]
- Converted all html anchors in command line docs to match github
  generated anchors. [Phil Nash]
- Attempt to match html anchors (which github strips out) with the ones
  github generates. [Phil Nash]
- Merge pull request #207 from Fraser999/list_tests_issue. [Phil Nash]

  List tests issue
- Added CTest targets to perform basic test of --list-tests and --list-
  tags options. [Fraser Hutchison]
- Fixes overflow issue when listing tests. [Fraser Hutchison]
- Added missing #include for <vector> [Phil Nash]
- Updated command line docs with -w and -d. [Phil Nash]
- Fixed uninitialised members in Context object. [Phil Nash]
- Updated travis URL. [Phil Nash]
- Merge branch 'master' of git://github.com/AIM360/Catch. [Phil Nash]
- Update README.md. [Kosta]
- Update README.md. [Kosta]
- Fixed formatting of travis status icons. [Kosta]
- Added travis status to the readme. [Kosta]
- Cmake: call SelfTest exe instead of approvalTests script. [Kosta]

  Just call the SelfTest executable directly for testing, since there seems to be a problem with the approval tests python script right now.
- More approval tests script debugging. [Kosta]
- More debugging. [Kosta]
- More debugging. [Kosta]
- Debugging arguments passed to the approvalTests script. [Kosta]
- Printing the executable into the console window. [Kosta]
- Tweak CMakeLists.txt. [Kosta]
- Calling SelfTest exe directly. [Kosta]
- Merge branch 'Kosta/travis_ci_integration' of
  https://github.com/AIM360/Catch into Kosta/travis_ci_integration.
  [Kosta]
- Initial checkin of cmake and travis config files. [Kosta]
- Initial checkin of cmake and travis config files. [Kosta]
- Updated VS2010 project. [Phil Nash]
- Fixed typo. [Phil Nash]
- Git Attributes, with control for line-endings. [Phil Nash]
- First commit of docs for contributors. [Phil Nash]
- Fixed typo. [Phil Nash]
- Regenerated single include. [Phil Nash]
- Truncate excessively long messages rather than asserting. [Phil Nash]
- Added an extra tag test. [Phil Nash]
- More doc formatting fixes. [Phil Nash]
- Fix wrapping width when listing tests - addresses #201. [Phil Nash]
- Minor doc tweaks. [Phil Nash]
- Escaped square brackets. [Phil Nash]
- Expanded test-cases-and-exceptions docs and added to reference-index.
  [Phil Nash]
- Expanded docs on tests cases and sections (still work-in-progress) -
  also touched up some outdated bits in the tutorial. [Phil Nash]
- Filter out version number from approval tests. [Phil Nash]
- No, really trim paths in approval tests down to just filenames. [Phil
  Nash]
- Trim paths in approval tests down to filenames. [Phil Nash]
- Split approve file into multiple files. [Phil Nash]
- Removed outdated Xcode 3 project. [Phil Nash]
- Merge commit '22ded1f2bb3caf96d90c2f1981ede29d3aeb1c74' [Phil Nash]
- Merge pull request #198 from PureAbstract/vector_to_string. [Phil
  Nash]

  Add allocator support to StringMaker<vector>
- Updated single-include version. [Andy Sawyer]
- Catch_tostring : moved defintion of rangeToString. [Andy Sawyer]

  Detail::rangeToString is now defined after the various toString
  overloads. This results in them being accessible with rangeToString is
  instantiated (in this case, by StringMaker<vector>). This (sort-of)
  fixes the problem where contained types are toString'd incorrectly.

  Consider:
    std::vector<std::string> v { "abc" };

  Before:
    Catch::toString( v ) == "{ abc }"
  After:
    Catch::toString( v ) == "{ "abc" }"

  (note the extra pair of quotes around the "abc" - these are added by
  Catch::toString( std::string ) which is now called by rangeToString)
- Add allocator support to StringMaker<vector> [Andy Sawyer]

  - also extracted out 'rangeToString', in an attempt to make it easier
     to add support for other containers
- Fix for comma separated tags on the command line - also added more
  test for tags. [Phil Nash]
- Upgraded project for latest Xcode. [Phil Nash]
- Eliminate a warning in the latest clang with Xcode. [Phil Nash]
- Fixes toString forward reference issue: - as raised in
  https://github.com/philsquared/Catch/pull/195. [Phil Nash]
- Fixed string indexing bug. [Phil Nash]
- Regen single header. [Phil Nash]
- Separated out catch_platform.h. [Phil Nash]
- Build 8 - includes command line tweaks and fixes for durations. [Phil
  Nash]
- Some Clara/ command line clean-up and tweaks. [Phil Nash]
- Don't report durations if not reporter anything else. [Phil Nash]
- Added missing assert include. [Phil Nash]
- Removed basic reporter. [Phil Nash]
- Build 7 - New Junit reporter - New Timer class. [Phil Nash]
- Redacted test durations from JUnit reporter output in approval test
  script. [Phil Nash]
- Removed legacy JUnit reporter. [Phil Nash]
- Completed CumulativeReporterBase and reimplemented JUnitReporter in
  terms of it. [Phil Nash]
- Added LazyStat wrapper. [Phil Nash]
- Replaced currentSectionInfo and m_rootSection with m_sectionStack.
  [Phil Nash]
- First cut of Timer class. - started integrating with reporters (now
  (optionally) supported in console reporter). - introduced Node<>
  template to help with cumulative reporting and used it instead of
  ThreadedSectionInfo. [Phil Nash]
- Removed now redundant handling for missing assertions in test cases -
  handled as part of sections. [Phil Nash]
- Refactored missing assertions handling. [Phil Nash]
- Tidied up reporting of missing assertions in test cases - also removed
  basic reporter from approval test. [Phil Nash]
- Fix MSVC warning. [Phil Nash]
- Build 6 - fixes infinite loop bug (#185 and #166) [Phil Nash]
- Merged TestCaseTracker and SectionTracker and introduced
  TestCaseTracker::Guard. [Phil Nash]
- Removed displaced RunningTest class. [Phil Nash]
- Integrated new section tracker. - also pass extra section to reporter
  - one for each test case - ignore it in headers   (this is so we know
  a test case has restarted) - significant effect on regression test due
  to change of ordering of sections - fixes infinite loop issue. [Phil
  Nash]
- Reworked SectionTracker and moved into own header. [Phil Nash]
- Small fixes and started new section tracking code. [Phil Nash]
- Removed all trailing whitespace - addresses #105. [Phil Nash]
- Converted stray tabs to spaces. [Phil Nash]
- Merge pull request #180 from benjamg/patch-1. [Phil Nash]

  Fix external site links
- Fix external site links. [Ben Gray]

  The links (for me under firefox/ubunutu at least) try to open files in github rather than the catch-lib site.
- Slightly tweaked docs on supplying your own main. [Phil Nash]
- Build 5 - added throw() to streambuf destructor overrides (#182) [Phil
  Nash]
- Build 4. [Phil Nash]
- Fixed broken test. [Phil Nash]
- Fix for #179. [Phil Nash]
- Use MFCs windows include if present. [Phil Nash]
- Guard NOMINMAX definition (windows) [Phil Nash]
- Build 2. [Phil Nash]
- Merge branch 'master' of github.com:philsquared/Catch. [Phil Nash]
- Update whats-changed.md. [Phil Nash]
- Update whats-changed.md. [Phil Nash]
- Update whats-changed.md. [Phil Nash]
- Static assertion for && and || expressions. [Phil Nash]
- Removed line numbers from approval tests of xml too. [Phil Nash]
- Removed line numbers from approval tests. [Phil Nash]
- Addd test-fixtures docs from wiki. [Phil Nash]
- Updated docs with INFO/ CAPTURE changes. [Phil Nash]
- INFO and CAPTURE are now scoped - SCOPED_INFO and SCOPED_CAPTURE are
  now just aliases. [Phil Nash]
- Updated docs to reflect INFO change. [Phil Nash]
- INFOs only reset at assertion if consumed. [Phil Nash]
- Added run without -s to approvals. [Phil Nash]
- Approved [.] change. [Phil Nash]
- Support [.] as alias for [hide] [Phil Nash]
- Big merge from Integration - now v1.0 build 1. [Phil Nash]
- Removed filename from --reporter option (it's not implemented yet)
  [Phil Nash]
- Added "what's changed" [Phil Nash]
- Added #define NOMINMAX - thanks to @robson3 in #171. [Phil Nash]
- Fixed returns in docs ref. [Phil Nash]
- New docs for command line and logging. [Phil Nash]
- Fixed iTChRunner. [Phil Nash]
- Completed assertions docs. [Phil Nash]
- Filled out reference index and added placeholders for assertions and
  logging docs. [Phil Nash]
- Added new docs for supplying your own main. [Phil Nash]
- Doc updates. [Phil Nash]
- Fixed script for new readme - updated README with new version - fixed
  casing error for -e opt description. [Phil Nash]
- Docs progress. [Phil Nash]
- Build 39. [Phil Nash]
- Tweaked indentation of errors and test lists. [Phil Nash]
- Use Text formatter to list reporters. [Phil Nash]
- Re-encapsulated session vars. - construct Config object lazily. [Phil
  Nash]
- Session vars are public. [Phil Nash]
- List options return number listed. [Phil Nash]
- Tweaks. [Phil Nash]
- Refactored new Session class to make it more friendly for custom
  client code. [Phil Nash]
- Moved all Catch::Main()s into new Session class - renamed them run() -
  moved cleanUp call into destructor. [Phil Nash]
- Approved latest changes. [Phil Nash]
- Runner -> RunContext, Runner2 -> Runner and fixed issue with
  processName. [Phil Nash]
- Added processConfig() method. [Phil Nash]
- Removed legacy cli parser. [Phil Nash]
- Now fully switched over to Clara-based command line with modified
  args. [Phil Nash]
- Start of new docs. [Phil Nash]
- Start of new docs. [Phil Nash]
- Got parseCommandLine ready to use new Clara (but not doing so yet)
  [Phil Nash]
- Made generated function name more obvious (for quickly finding in
  debugger's stack viewer) [Phil Nash]
- Last changes to ConfigData names (for now) [Phil Nash]
- Removed stream name from config. [Phil Nash]
- ConfigData now looks virtually identical to the Clara test Config.
  [Phil Nash]
- ConfigData just keeps strings for test names/ specs/ tags (processed
  in Config actor) [Phil Nash]
- Config refactoring: split List enum into three bools. [Phil Nash]
- More config refactoring. [Phil Nash]
- Started nudging ConfigData towards new layout. [Phil Nash]
- Listing is now in terms of interface (and calls to bool functions)
  [Phil Nash]
- Final refactoring to remove direct access to encapsulated ConfigData
  once in Config. [Phil Nash]
- Main() functions deal with raw ConfigData. [Phil Nash]
- Most of system now uses Ptr<IConfig const> [Phil Nash]
- Refactoring towards interface based config. [Phil Nash]
- Moved Clara into its (her?) own file. [Phil Nash]
- Tweaked some option names and added verbosity. [Phil Nash]
- Clara: formatting and code tweaks. [Phil Nash]
- Clara: Usage strings for args. [Phil Nash]
- Clara: support for positional arguments. [Phil Nash]
- Clara: added test for positional arg. [Phil Nash]
- Clara: support for binary functions. [Phil Nash]
- Added binding to free functions (and renamed hierarchy) [Phil Nash]
- Fixed inconsistency in reporting of _FALSE (negated) expressions.
  [Phil Nash]
- Approved current output. [Phil Nash]
- Refactored CLI tests and converted main one into a scenario. [Phil
  Nash]
- Clara: added -r option. [Phil Nash]
- Clara: some refactoring - moved all internal stuff into Detail - moved
  Parser out of CommandLine, encapsulates tokens. - allow unused tokens
  to be feed into different CommandLine processors. [Phil Nash]
- Clara: Added support for compact short opts (e.g. -peb) [Phil Nash]
- New CLI parser impl. [Phil Nash]
- Handle TEST_CASE_METHOD macro consistently - internally define
  INTERNAL_CATCH_TEST_CASE_METHOD. [Phil Nash]
- Test case for infinite loop. [Phil Nash]
- Some refactoring of Clara impl and experimental string based
  interface. [Phil Nash]
- Clara: Allow space separator, as well as : and = [Phil Nash]
- Clara: Some renames and changed the addOption interface. [Phil Nash]
- Added support for binding to methods and generating usage strings.
  Also renamed namespace to Clara. [Phil Nash]
- More CmdLine work - Support for non string values - Support for
  chaining parsers. [Phil Nash]
- First draft of future opt parser lib. [Phil Nash]
- Header builder script writes to file rather than stdout. [Phil Nash]
- Build 38. [Phil Nash]
- Refactored scripts to start using a common file. [Phil Nash]
- Approved changes relating to no-return functions. [Phil Nash]
- Removed use of compiler specific techniques for denoting non-returning
  functions - use if( Catch::isTrue( true) ) to guard throws instead.
  [Phil Nash]
- Changed "const X ref"s to "X const ref"s - Brought older code up to
  current convention (with the help of a Python script) [Phil Nash]
- Build 37 - string matchers work with NULLs - removed stray
  CATCH_CONFIG_SFINAE for GCC 3. [Phil Nash]
- Fix for #144 - string matchers now work with NULLs. [Phil Nash]
- Removed rogue CATCH_CONFIG_SFINAE for GCC 3.x. [Phil Nash]
- Build 36 - incorporation of pull request #154 to allow comparison with
  nullptr_t - some compiler capability tweaks. [Phil Nash]
- Compiler capabilities clean-up - renamed CATCH_SFINAE ->
  CATCH_CONFIG_SFINAE - moved variadic macros detection into
  catch_compiler_capabilities.h. [Phil Nash]
- Build 35 - non-SFINAE IsStreamInsertable. [Phil Nash]
- Complete disable CATCH_SFINAE for now. [Phil Nash]
- Returned to older version of IsStreamable - this time based on code
  from Martin Moene https://gist.github.com/martinmoene/5418947#file-
  insertionopdetector-cpp. [Phil Nash]
- Build 34 includes: - SFINAE version of IsStreamable (where available)
  - new Text class that replaces LineWrapper (internal) - fix for
  spurious double exception reporting (#164) [Phil Nash]
- Fixes issue #164 - Removed spurious (re-)throw when catching
  unexpected exception. [Phil Nash]
- Fully committed to new Text class. - moved impl into .hpp - replaced
  last few uses of LineWrapper with Text - removed LineWrapper. [Phil
  Nash]
- Refactored line wrapping in Text constructor a bit. [Phil Nash]
- Revert "Refactored line wrapping in Text constructor a bit" [Phil
  Nash]

  This reverts commit e43d4a202876d1e4f016552a81c1c606e8efe867.
- Refactored line wrapping in Text constructor a bit. [Phil Nash]
- Text class is now full replacement for LineWrap. [Phil Nash]
- Text class mostly working - tabs not yet working. [Phil Nash]
- Remove SFINAE support for all unknown compilers. [Phil Nash]
- Moved line info in header again. [Phil Nash]
- Added (conditional) SFINAE support. Better streamable detection for
  toString using SFINAE (falls back to non-SFINAE version without) [Phil
  Nash]
- Build 33. [Phil Nash]
- Fixed BrightGreen in ANSI/ Posix case  - was yellow :-s. [Phil Nash]
- Exclude VS2005 from using variadic macros  - due to issues raised in
  https://groups.google.com/forum/?fromgroups=#!topic/catch-
  forum/VGfNtNXjHXQ. [Phil Nash]
- Moved legacy_reporter_adapter files back into internal. [Phil Nash]
- Fixed Junit issue with REQUIRE_THROWS - As mentioned by @SebDyn in
  GitHub issue #5. [Phil Nash]
- Build 32. [Phil Nash]
- LegacyReporterAdapter unbundles INFO messages from assertion to mimic
  legacy behaviour - Moved LegacyReporterAdapter out into its own
  file(s) [Phil Nash]
- Build 31 - new Colour class - Headers are wrapped, with special
  indentation for given/ when/ then. [Phil Nash]
- LineWrapper can indent first line differently to subsequent lines -
  use this to wrap Given/ When/ Then with indent after the : [Phil Nash]
- Switched TextColour out for Colour  - Removed TextColour. [Phil Nash]
- First cut of new Colour class (to replace TextColour) [Phil Nash]
- Build 30. [Phil Nash]
- More formatting/ colour tweaks. [Phil Nash]
- Added some more wrap chars. [Phil Nash]
- Use SecondaryText code in lists. [Phil Nash]
- Added SecondaryText colour enum - slightly refactored ConsoleColour as
  well. [Phil Nash]
- Changed Xcode search paths for easier sharing of projects with
  Windows. [Phil Nash]
- Build 29. [Phil Nash]
- Added -l tags - which lists available tags. - also improved formatting
  of -l for tests. [Phil Nash]
- Added vector resizing example to BDD tests. [Phil Nash]
- Use new line wrapper to show test case list, with tags, in columns.
  [Phil Nash]
- Simplified StringWrapper - by changing intoStream to << overload - and
  removing redundant ctor. [Phil Nash]
- Refactored string wrapper - to be much more flexible (writes to
  vector) - fixed a couple of bugs. [Phil Nash]
- Build 28. [Phil Nash]
- Line numbers changed and test added. [Phil Nash]
- Wrap expr results if they contain newlines. [Phil Nash]
- Fixed line wrap bug Added line wrap tests and modified wrap algo to
  wrap within words using a - [Phil Nash]
- Added vector resize test. [Phil Nash]
- Addressed some warnings (mostly MSVC) [Phil Nash]
- Refactored toLower. [Phil Nash]
- Moved scripts into their own folder. [Phil Nash]
- Updated release script for README changes. [Phil Nash]
- Moved title back below logo. [Phil Nash]
- More markdown formatting. [Phil Nash]
- Reformatted README for markdown. [Phil Nash]
- Added .md extension. [Phil Nash]
- Try with title. [Phil Nash]
- Try lowercase chars. [Phil Nash]
- Try as not first line. [Phil Nash]
- Try raw domain. [Phil Nash]
- Try full path to logo. [Phil Nash]
- Fixed logo path. [Phil Nash]
- Added logo to readme. [Phil Nash]
- Build 27. [Phil Nash]
- Tags can be specified using -t (or as default command) Previously -g
  had to be used. [Phil Nash]
- Minor tidy up. [Phil Nash]
- Variadics support for BDD macros (scenarios) [Phil Nash]
- Build 26. [Phil Nash]
- Print ~~~ at start of console output. Some cleanup in the reporter
  code. [Phil Nash]
- Initial support for variadic macros. [Phil Nash]
- Build 25. [Phil Nash]
- Added BDD macros (Also includes regenerated files from previous
  commits) [Phil Nash]
- Cleaned up -Wpadded warning handling a bit more. [Phil Nash]
- Removed some cruft and warnings. [Phil Nash]
- Moved "no test cases matched" message to reporter. [Phil Nash]
- Build 24. [Phil Nash]
- Fixes nil NSString issue reported in #159. [Phil Nash]
- Tag and test case name querying are now case insensitive. [Phil Nash]
- Tweaked colours again. [Phil Nash]
- Refactored ConsoleColour impl. Tweaked the (Windows) colours a bit.
  Also fixed issue that would cause warnings on some compilers when
  doing REQUIRE( p ); where p is a pointer. Moved to build 23. [Phil
  Nash]
- Build 22. [Phil Nash]
- Converted tabs to spaces in some files where they have crept back in.
  [Phil Nash]
- Added duplicate method warnings. [Phil Nash]
- Removed unnecessary test. [Phil Nash]
- Tidied up some loose ends with reporting test cases and sections (now
  handles them as a single block). This should fixes an issue where
  sections not being printed when they should be (and reverses a
  workaround where they were being printed too much) [Phil Nash]
- Patched issue where an assert before the first section can cause a
  set-fault (needs a better fix, though) [Phil Nash]
- Added StringMaker (for partially specialising string conversions),
  extended BDD macros and moved file/line info to top of message. Re-
  enable ANSI colour by default - hopefully properly excluding Windows
  this time. [Phil Nash]
- Reverted ANSI colour change (it was failing for Windows) Produced
  build 20. [Phil Nash]
- Build 19. [Phil Nash]
- Handle section ends in the event of unexpected exceptions. [Phil Nash]
- Updated approval file. [Phil Nash]
- Cleaned up some stray tests. [Phil Nash]
- Suppress "no test cases matched" message if there was no test spec
  string. [Phil Nash]
- Added className to TestCase in Obj-C. [Phil Nash]
- Default to using colour in unix based terminals. [Phil Nash]
- Don't use ANSI colour codes when debugging. [Phil Nash]
- Ignore OCTest DerivedData. [Phil Nash]
- Fixed sticky INFO (which persisted across TEST_CASEs) from #152 and
  generated build 18. [Phil Nash]
- Updated message tests to reflect slightly changed semantics. [Phil
  Nash]
- Build 17 - includes reworking of message/ info handling. [Phil Nash]
- Removed deprecated message code. [Phil Nash]
- Changed the way info messages are handled. This fixes issue with
  SCOPED_INFO and makes output more readable. Needs some refactoring.
  [Phil Nash]
- Added google group to README. [Phil Nash]
- Build 16. [Phil Nash]
- Removed circular dependency between SectionInfo and its parent. [Phil
  Nash]
- Allows console line width to be configured (and defaults to 80). Line
  wrap is at console width-1. [Phil Nash]
- Console_reporter refactoring. [Phil Nash]
- More console reporter tweaks. [Phil Nash]
- Tweaked console reporter some more. [Phil Nash]
- Dropped "Test case" and "Section" prefixes in test report headers.
  [Phil Nash]
- Generated build 13. [Phil Nash]
- Some test case header refactoring. [Phil Nash]
- Console reporter: got rid of spurious blank lines. [Phil Nash]
- Console reporter: Always print test case + sections in header for
  every new section. Group sections into single block Tweaked BDD
  mappings to print out nicely with above. [Phil Nash]
- Merged test case/ sections headers. [Phil Nash]
- More console reporter refactoring. [Phil Nash]
- Refactored printResultType and printMessage to work off a single
  switch. [Phil Nash]
- Refactored printResultType into switch. [Phil Nash]
- Some tidy up. [Phil Nash]
- More console reporter tweaks and approved new output. [Phil Nash]
- More console reporter tweaks - mostly newlines. [Phil Nash]
- Fairly major reworking of console reporter (still in progress).
  Changed reporter interface a bit. [Phil Nash]
- Fixed bug in generators. [Phil Nash]
- Added "basic" reports to the Approval results (in addition to the
  console reports) [Phil Nash]
- Reporter interface uses value types instead of shared ptrs again.
  [Phil Nash]
- Approval filter condenses hop filenames as well as cpp. [Phil Nash]
- Clear state in AccumulatingReporter. [Phil Nash]
- Fixed reference to basic reporter (to console reporter) [Phil Nash]
- Build 12. [Phil Nash]
- Split original/ expanded expressions over multiple lines. [Phil Nash]
- Fix for long headers. [Phil Nash]
- Changed header and summary logs to multiline forms. [Phil Nash]
- Build 11: Console reporter changes. [Phil Nash]
- Console reporter: Don't print full path for every line. [Phil Nash]
- Tweaks to summary counts in console reporter. [Phil Nash]
- Console reporter is now the default. [Phil Nash]
- Console reporter is now a full replacement for the basic reporter,
  using the new streaming interface directly. [Phil Nash]
- Added approval test for aborted test results (-a) [Phil Nash]
- Updated .gitignore. [Phil Nash]
- Fleshed out console reporter. [Phil Nash]
- Minimal changes to get iTchRunner to work again. [Phil Nash]
- Work in progress on Console reporter. Includes regenerated single
  include for Obj-C fixes. [Phil Nash]
- Updated obj-c bindings for new Matchers and TestCaseInfo changes.
  [Phil Nash]
- Started new reporter, "console", which will replace "basic" when done.
  Introduced Option template as part of this. [Phil Nash]
- Added missing #include for assert to fix build failure. [Phil Nash]
- Generated build 7. [Phil Nash]
- Capture RunInfo. [Phil Nash]
- Completed IStreamingInterface abstraction with TestRunInfo and
  GroupInfo. [Phil Nash]
- Version uses constructor instead of initialiser to avoid warnings.
  [Phil Nash]
- Approval filenames are now approvedResults.txt and
  unapprovedResults.txt (only the former is checked in) [Phil Nash]
- Removed some more test cruft. [Phil Nash]
- Removed mocked output logging tests in favour of approval tests. [Phil
  Nash]
- IStreamingReporter is now the default. Use REGISTER_LEGACY_REPORTER to
  register… you guessed it: legacy reporters The built-in reporters are
  still legacy at the moment. [Phil Nash]
- Streaming reporter interface is now used natively. Legacy reporters
  are adapted by their factories. [Phil Nash]
- Reporter "stats" objects passed in by Ptr. [Phil Nash]
- Reference to legacy reporter adapter localised to one place. [Phil
  Nash]
- SectionInfo now goes via new streaming reporter interface. [Phil Nash]
- Renamed SectionInfo -> RunningSection. Added SectionInfo (that now
  corresponds to TestCaseInfo) and SectionStats Switched some const T&'s
  to T const&'s. [Phil Nash]
- Small logic tweaks. [Phil Nash]
- Sections use vector instead of a map Uses brute-force search, but only
  ever for small vectors. [Phil Nash]
- Added ReporterPreferences and started some SectionInfo refactoring.
  [Phil Nash]
- Added xml and junit output - also fixed a typo in a test name. [Phil
  Nash]
- Scripts for running approval tests using diff. Runs CATCH, filters
  results (truncates paths, removes hex digits which are probably
  pointers) then diffs the results) [Phil Nash]
- Tightened up ReporterConfig and added it to LegacyReporterAdapter.
  [Phil Nash]
- First cut of using new streaming reporter interface - using an adapter
  to map back to the legacy interface Doesn't do sections or the query
  functions (e.g. shouldRedirectStdOut) [Phil Nash]
- Split TestCaseInfo into a data only component and the test case
  function and behaviour. Reporters only get to see the former. [Phil
  Nash]
- Renamed TestCaseInfo -> TestCase. [Phil Nash]
- Don't indent stdout/ stderr in JUnit reporter. [Phil Nash]
- Build 6. [Phil Nash]
- Write stdOut/stdErr for each test car in JUnit reporter (for GitHub
  #5) [Phil Nash]
- Fixed SUCCEED so it logs message in basic reporter Reverted previous
  change so that tests with no assertions but INFO macros now warn again
  (but an explicit SUCCEED does not) [Phil Nash]
- Moved code that detects absence of assertions closer to where end of
  test case is reported (ready for merging). Also now considers info
  macros when warning (i.e. an empty test case with an INFO() will not
  warn). [Phil Nash]
- Updated baselines  to include NoAssertions warning. [Phil Nash]
- Expanded baseline to include all tests. [Phil Nash]
- Junit reporter uses filename for suite name if no explicit groups.
  [Phil Nash]
- Unchecked exceptions don't report previous assertions message (only
  its line number) [Phil Nash]
- Build 4. [Phil Nash]
- New baselines As well as some new tests these baselines were generated
  using > instead of -o, so includes messages sent to stdout and not
  visible in the directed output. [Phil Nash]
- Tweaked bitfield tests to avoid warnings. [Phil Nash]
- Fixes const int error seen on some compilers (see #136) Added a new
  test to try to highlight issue. [Phil Nash]
- Added version number to README (and update it from script) [Phil Nash]
- Fix (hopefully) for #5 (reopened) Adds name to JUnit reporter's
  testsuite element, even when running all tests. Also removes redundant
  comment from the output. [Phil Nash]
- Removed commented out cruft from script. [Phil Nash]
- Added versioning. [Phil Nash]
- Regen single include. [Phil Nash]
- Tidied up result enums. [Phil Nash]
- Implemented CHECK_NOFAIL. [Phil Nash]

  Previous commit missed some files
- Implemented CHECK_NO_FAIL. [Phil Nash]
- Regen single include. [Phil Nash]
- New (combined) baselines. [Phil Nash]
- Negate() -> endExpression(), takes ResultDisposition. [Phil Nash]
- Changed shouldNegate boolean to use part of ResultDisposition enum.
  [Phil Nash]
- Changed StopOnFailure boolean to an enum. [Phil Nash]
- Regen single include. [Phil Nash]
- Added tags docs. [Phil Nash]
- Some expression/ evaluation clean-up. [Phil Nash]
- Fix for #134. [Phil Nash]

  The INTERNAL_CATCH_MSG macro, which is used by INFO, WARN and FAIL places its lines in a do…while block so it can be used after an if statement with no block
- Regen single include. [Phil Nash]
- Fixed line/no regression for SECTIONs. [Phil Nash]

  Unexpected exceptions within a section now get the SECTION's line no. again (instead of TEST_CASE line/no)
- Added className to TestCaseInfo. [Phil Nash]

  className is passed through from class based test methods and held in the TestCaseInfo.
  For free-function based test cases it is set to "global".

  The JUnit reporter uses the className value to populate he class attribute.
- AssertionInfo captures more info (for test cases and sections) [Phil
  Nash]
- Removed __FUNCTION__ from SourceLineInfo. [Phil Nash]
- Updated colour comments. [Phil Nash]
- Manually applied merge #133 from Master. [Phil Nash]
- Cleaned up ANSI colour code impl a bit. [Phil Nash]
- Removed "no-" from Wno-global-constructors when disabling. [Phil Nash]
- Regenerated single_include. [Phil Nash]
- Added terminal colour codes for POSIX. [Phil Nash]

  With thanks to Adam Strzelecki
- Added regression test baselines. [Phil Nash]
- Fixed remaining reporting regressions. [Phil Nash]
- Fixed #132. [Phil Nash]
- Updated the readme specifically for the Integration branch. [Phil
  Nash]
- Regenerated single include. [Phil Nash]
- Small fixes and tweaks. [Phil Nash]
- Some tidy-up. [Phil Nash]
- AssertionResultBuilder -> ExpressionResultBuilder. [Phil Nash]
- ExpressionBuilder ->ExpressionDecomposer Expression -> ExpressionLhs.
  [Phil Nash]
- More AssertionResult refactoring. [Phil Nash]
- AssertionResultBuilder can be constructed from result type. [Phil
  Nash]
- Expression has its own result builder - not passed in from expression
  builder. [Phil Nash]
- Streamlined acceptResult. [Phil Nash]
- Refactored assertion builder stuff out of expression builder. [Phil
  Nash]
- Collect assertion info up front. [Phil Nash]
- ResultData -> AssertionResultData. [Phil Nash]
- ResultInfo -> AssertionResult filenames and variables. [Phil Nash]
- Renamed ResultInfo -> AssertionResult. [Phil Nash]
- Regen test 3. [Phil Nash]
- Ignore DerivedData. [Phil Nash]
- Updated readme to remove reference to the downloads section. [Phil
  Nash]
- Merged Matcher changes to Objective-C bindings. [Phil Nash]
- Added class name to Obj-C test case. [Phil Nash]
- Update README with info about downloads. [Phil Nash]
- Merge pull request #136 from wichert/expression-compile-error. [Phil
  Nash]

  integration branch does not compile
- Fix expression compile errors. [Wichert Akkerman]
- Regenerated single include following merge. [Phil Nash]
- Fixed merge hiccup. [Phil Nash]
- Squashed commit of the following: [Phil Nash]

  commit 70c5ef9eede41e7061ff1af45b5babe0d7cde4ba
- Updated read me. [Phil Nash]
- Regenerated single include following merge. [Phil Nash]
- Squashed commit of the following: [Phil Nash]

  commit 2a1e8bfc6ed3bcc1e3746d717726a9e525de6369
- Merge pull request #133 from vadz/msvc-warn-fix. [Phil Nash]

  Fix harmless but annoying MSVC warnings.
- Fix harmless but annoying MSVC warnings. [Vadim Zeitlin]

  Suppress

  catch.hpp(1760) : warning C4512: 'Catch::TagExtracter' : assignment operator could not be generated
  catch.hpp(1864) : warning C4512: 'Catch::TagExpressionParser' : assignment operator could not be generated

  warnings given by MSVC 9 (and probably other version too) compiler with /W4 switch.

  The warnings are given because the compiler can't synthesize the assignment
  operators for the classes with members of reference type, so simply explicitly
  declare (without defining) these operators ourselves to suppress them.
- Added to the readme. [Phil Nash]
- Merge pull request #129 from philsquared/Integration. [Phil Nash]

  regen test 2
- Regen test 2. [Phil Nash]
- Regenerated to test branch. [Phil Nash]
- Added AllOf and AnyOf matchers. [Phil Nash]
- Cleaned up ResultInfoBuilder a bit. [Phil Nash]
- IsNot -> isFalse. [Phil Nash]
- Refactoring ResultData out of ResultInfo/ Builder pt2. [Phil Nash]
- Refactoring ResultData out of ResultInfo/ Builder pt1. [Phil Nash]
- Disabled WIP code. [Phil Nash]
- Added SCOPED_CAPTURE. [Phil Nash]
- Started refactoring ResultInfo/Builder. [Phil Nash]
- Random bits of clean-up. [Phil Nash]
- Regenerated single include. [Phil Nash]
- Merge branch 'master' of github.com:philsquared/Catch. [Phil Nash]
- Merge pull request #121 from godlygeek/include-guard-fixes. [Phil
  Nash]

  Normalize include guards for all *.h and *.hpp
- Merge remote-tracking branch 'phil' into include-guard-fixes. [Matt
  Wozniski]

  Conflicts:
  	single_include/catch.hpp
- Normalize include guards for all *.h and *.hpp. [Matt Wozniski]

  Some files had include guards that didn't match the file name, and
  others were missing the include guards entirely.

  Standardized this so that every include file has an include guard, and
  all the guards are of the form TWOBLUECUBES_<FILENAME>_<EXT>_INCLUDED
- Added some surrogate cpps. [Phil Nash]

  (and fixed up missing includes they uncovered)
- First cut of command line support for tags. [Phil Nash]
- Fixed alternate stream bugs. [Phil Nash]
- Updated help help. [Phil Nash]
- Merge branch 'master' of github.com:philsquared/Catch. [Phil Nash]

  Conflicts:
  	single_include/catch.hpp
- Regenerated header. [Phil Nash]
- Regenerated single include. [Phil Nash]
- Fixed SCOPED_INFO (#123) [Phil Nash]
- Added cleanup as per #125. [Phil Nash]
- Tag command line parsing implementation. [Phil Nash]
- Removed spurious files. [Phil Nash]
- Added copy ctor to ReporterConfig to get rid of warnings. [Phil Nash]
- First cut of tags support. [Phil Nash]
- Capture test case hidden status in member variable. [Phil Nash]
- Completed embedded docs. [Phil Nash]
- Output option description lines that don't end in newline. [Phil Nash]
- Added internal documentation for some options. [Phil Nash]
- Restored quick way to add test programatically. [Phil Nash]
- Added stub for BDD mappings. [Phil Nash]
- Small naming correction. [Phil Nash]
- Ptr op= takes const ref (fixes: #115) [Phil Nash]
- Fixed #114 (no exit code on failure) [Phil Nash]
- Added CATCH_ version of SUCCEED macro. [Phil Nash]
- Completed NoAssertions warning implementation. [Phil Nash]
- Added warnings - first one: no assertions. [Phil Nash]
- Got rid of some warnings. [Phil Nash]
- Option objects now enforce min/ max args generically. [Phil Nash]
- Generate help from options objects. [Phil Nash]
- Refactored command line parsers into polymorphic classes. [Phil Nash]
- Test for ~ and removed debug print. [Phil Nash]
- Changed shorthand for exclude: to ~ [Phil Nash]
- Can specify tests without -t. ex: is shorthand for exclude: [Phil
  Nash]
- WIldcards at both ends. [Phil Nash]
- First cut of new filtering mechanism. [Phil Nash]
- Merge branch 'master' of github.com:philsquared/Catch. [Phil Nash]
- Regenerated single include. [Phil Nash]
- Added copy actor and operator = back to TestCaseInfo. [Phil Nash]
- Moved ofstream back out to Main - to address #112. [Phil Nash]
- Conditionally compile GCC pragmas. [Phil Nash]
- Regenerated single include. [Phil Nash]
- First cut of filters implementation. [Phil Nash]
- Conditionally compile clang pragmas. [Phil Nash]
- Separated getting test cases to run from running them. [Phil Nash]
- Moved TestSpec into its own file. [Phil Nash]
- Split imll from TestCaseInfo. [Phil Nash]
- Made ITestCase a shared object. [Phil Nash]
- More things using ConfigData. [Phil Nash]
- Builds almost completely cleanly with -WEverything in LLVM. [Phil
  Nash]
- Added dummy file to empty dir. [Phil Nash]
- Removed empty dir. [Phil Nash]
- Moved single include self test project. [Phil Nash]
- Recreated the single include test project and got it working after
  impl refactorings. [Phil Nash]
- Separated resultinfo_builder from impl. [Phil Nash]
- Split result info from impl. [Phil Nash]
- Moved context object entirely into impl file. [Phil Nash]
- Refactored Impls. [Phil Nash]
- Refactored impls. [Phil Nash]
- Renamed static registries -> registry hub. [Phil Nash]
- Fixes for iTchRunner. [Phil Nash]
- First cut of StaticRegistries - separate from Context. [Phil Nash]
- Fixed quote balancing issue in reporter error. [Phil Nash]
- Fixed toString for NSString* in Xcode 4.4. [Phil Nash]
- Catches incorrect reporter name as per #107. [Phil Nash]
- Improved error handling for --abort as per #108. [Phil Nash]
- Removed stray + [Phil Nash]
- Merge branch 'master' of github.com:philsquared/Catch. [Phil Nash]
- Revert "Fixed issue #101, missing space in end of section message"
  [Martin Moene]

  This reverts commit 1ad971ea2b77a2df0bb560ce61f7eca4cb353eb1.
- Revert "Removed stray '+'" [Martin Moene]

  This reverts commit 79a6ae297742f4f9ad08ec0c3de588cff76b7ad7.
- Removed stray '+' [Martin Moene]
- Fixed issue #101, missing space in end of section message. [Martin
  Moene]
- Made ReportConfig a value type. [Phil Nash]
- Fixed pluralization bug from GitHub issue #101. [Phil Nash]
- Added ability to specify if macros should be prefixed with CATCH_
  [Phil Nash]
- Resolve reporter outside of Config. [Phil Nash]

  config now only only holds reporter name
- Moved use of reporter into runner (our of Main, directly) [Phil Nash]
- Disabled use of __FUNCTION__ for now. [Phil Nash]
- Added NotImplementedException. [Phil Nash]
- Factored ConfigData out of data. [Phil Nash]
- Added toString overload for chars. [Phil Nash]

  (and, by extension, Obj-C's BOOL)
- Regen single include. [Phil Nash]
- Added nothrow command line option. [Phil Nash]

  Causes _THROWS family of macros to no evaluate expression
- Regen single include. [Phil Nash]
- Cleaned up some GCC/LLVM warnings. [Phil Nash]
- Changed a remaining Hub to Context. [Phil Nash]
- Changed remaining cmd line checks to cmd.raiseError. [Phil Nash]
- Changed --cutoff to --abort. [Phil Nash]
- Moved catch_interfaces_runner.hpp out of conditionally compiled
  section. [Phil Nash]
- Fixed some signed/ unsigned warnings. [Phil Nash]
- Qualified #includes. [Phil Nash]
- Added cutoff option to command line. [Phil Nash]

  Aborts testing after a certain number of assertion failures
- Refactored command line parser to be more cohesive. [Phil Nash]

  Also added a set of unit tests for them (incomplete)
- Fixed used of cleaned-up context by runner's destructor. [Phil Nash]

  This was causing a segfault for some
- Merge pull request #88 from klmr/master. [Phil Nash]

  Warning "unused parameter" silenced
- Silence "unused parameter" warning. [Konrad Rudolph]
- Added evaluator overloads for case when comparing pointers against
  NULLs that decay to ints. [Phil Nash]
- Regenerated single include. [Phil Nash]
- Matchers macro uses Catch::Matchers namespace internally - so it
  doesn't have to be declared with "using" first. [Phil Nash]
- Added Equals matcher for strings. [Phil Nash]
- Removed special handling for pointer comparisons. [Phil Nash]

  These all seem to be handled by the general case now
- Fixed some warnings. [Phil Nash]
- Fixed GitHub Issue #90. [Phil Nash]
- Updated gitignore. [Phil Nash]
- Added VS2010. [Phil Nash]
- Renamed VisualStudio to VS2008. [Phil Nash]
- Single header now includes date-time of generation in comment header.
  [Phil Nash]
- Reinstated #include that broke single include. [Phil Nash]
- Regenerated single include. [Phil Nash]
- Added a delta method to Totals that tracks new passed/ failures. [Phil
  Nash]

  This fixes issue with test group results
- Removed "singleton" method from context. [Phil Nash]

  There is now a global "currentContext" - but Context itself is not aware of it
- Merge branch 'master' of github.com:philsquared/Catch. [Phil Nash]
- Merge pull request #84 from iamleeg/master. [Phil Nash]

  Comparison between signed and unsigned
- Fix a "comparison between signed and unsigned" problem. [Graham Lee]
- Added support for Objective-C exceptions. [Phil Nash]
- Context methods are non-static - accessed via interface. [Phil Nash]

  This is a move towards allowing multiple contexts - with the concept of a (possibly thread local) "current" context
- Regenerated single include. [Phil Nash]
- Final reformatting. [Phil Nash]
- Reformatting. [Phil Nash]
- Reformatting. [Phil Nash]
- More reformatting. [Phil Nash]
- Moar reformatting. [Phil Nash]
- More reformatting. [Phil Nash]
- Reformatting. [Phil Nash]
- Renamed ResultBuilder -> ExpressionBuilder. [Phil Nash]
- Moved ResultBuilder out into its own file. [Phil Nash]
- Regenerated single include. [Phil Nash]
- Fixed some warnings. [Phil Nash]

  As referenced in GitHub issue #83
- Fixed missing #include. [Phil Nash]

  From GitHub issue #77
- Regenerate single include. [Phil Nash]
- Include exception registry interfaces. [Phil Nash]
- Reformatted expression. [Phil Nash]
- Move expression classes into own file. [Phil Nash]
- More reformatting. [Phil Nash]
- Merge pull request #81 from colonelsammy/master. [Phil Nash]

  Changes for MINGW32 debugger as requested
- Add support for MINGW32 debugger. [Malcolm Noyes]
- Refactored main() a bit. [Phil Nash]
- Obj-C updates. [Phil Nash]
- Renamed hub -> context. [Phil Nash]

  (also did some reformatting)
- Tweaked single include merging to remove comment blocks. [Phil Nash]

  Also removed multiple blank lines
- Sanitised some comments. [Phil Nash]
- Added Xcode 4 single include test project. [Phil Nash]
- Regenerated single_include. [Phil Nash]
- Change the names of the generated functions to aid debugging. [Phil
  Nash]
- Some more reformatting. Also fixed some warnings. [Phil Nash]
- Renamed MutableResultInfo to ResultInfoBuilder. [Phil Nash]
- Factored MutableResultInfo into its own file. [Phil Nash]
- Replaced all file/ line pairings with SourceLineInfo. [Phil Nash]
- Factored toString overloads into their own file. [Phil Nash]
- Some reformating. [Phil Nash]
- Regenerated single include. [Phil Nash]
- Fix for comparing (const) char* to NULL. [Phil Nash]
- Split long failure expressions over multiple lines at the operator.
  [Phil Nash]
- Shifted some of MockReporter into the impl file file. [Phil Nash]
- Clean-up and regenerated single include. [Phil Nash]
- Fixed section ordering issue. [Phil Nash]

  If a branch section completes without running any inner sections it will no run subsequent sections (until the next isolated run).
- Added self-test for section ordering. [Phil Nash]

  Added MockReporter for tracking test runs.
  Added intrusive smart pointer. Config holds reporter by smart pointer, so we can route the mock reporter through multiple test runs
- Removed redundant const. [Phil Nash]

  (also fixed test counts)
- Conditionally compile __unsafe_unretained. [Phil Nash]

  Addresses, and hopefully fixes, issue #77.
- Added tests for signed/ unsigned fix. [Phil Nash]

  Integrated test from @ jweyrich highlighting issue fixed by pull request #79
- Merge pull request #79 from jweyrich/master. [Phil Nash]

  Fix missing parameter for comparisons between long and unsigned X.
- Fix missing parameter for comparisons between long and unsigned X.
  [Jardel Weyrich]
- Ignored some more files. [Phil Nash]
- IOSTest works with ARC. [Phil Nash]
- ARC support for Object-C projects. [Phil Nash]
- Regenerated single include. [Phil Nash]
- Added Equals matcher for NSString. [Phil Nash]
- Regen single include. [Phil Nash]
- Added initial built-in matchers for NSString (ObjC) [Phil Nash]
- Added a handful of "built-in" matchers. [Phil Nash]
- First cut of Matcher support. [Phil Nash]
- Suppress warning about constant conditional. [Phil Nash]
- Regen single include. [Phil Nash]
- Added test for previous change. [Phil Nash]

  (Test Dragged Development?)
- Made CHECK/ REQUIRE into block statements. [Phil Nash]

  Placed the contents of the macros into do{…}while(0) so they can be used as statements (e.g. after an if() with no braces).
  Also means they now require the closing ;
- Regen single include for last few checkins. [Phil Nash]
- Fixed trim() for single char strings (github #75) [Phil Nash]
- Merge branch 'master' of github.com:philsquared/Catch. [Phil Nash]
- Merge pull request #68 from crown-hill/master. [Phil Nash]

  Fix CATCH Issue #61, Assembler Error on iOS/ARM
- Fix linker error in catch_debugger.hpp on iOS on ARM that occurs
  trying to use assembly for Intel because CATCH_PLATFORM_MAC is
  defined. [herringbanger@gmail.com]

  Define CATCH_PLATFORM_MAC using #if defined(__MAC_OS_X_VERSION_MIN_REQUIRED) instead of #if defined(macintosh) || defined(__APPLE__) || defined(__APPLE_CC__).

  Add new CATCH_PLATFORM_IPHONE defined using #elif  defined(__IPHONE_OS_VERSION_MIN_REQUIRED) for future use. The BreakIntoDebugger and isDebuggerActive functions remain without implementations for iOS.
- Added tests to iOStest. [Phil Nash]

  Currently fails to build for ARM due to Github issue #61
- Fixed iOS test runner after reporter changes. [Phil Nash]
- Added colorised console output for Windows. [Phil Nash]

  Also tweaks the output again
- Regen include. [Phil Nash]
- Test Case counts reported separately from assertions. [Phil Nash]

  Test case passed/ failures are counted as well as individual assertions. The basic reporter now reports them seperately
- Pass totals around instead of individual success/ fail counts. [Phil
  Nash]
- Refactored internal interfaces to use Totals instead of success/ fail.
  [Phil Nash]
- Used Counts class in IResultCapture interface. [Phil Nash]
- Added Totals class and started using it. [Phil Nash]
- Regen header. [Phil Nash]
- Cleaned up summary reporting. [Phil Nash]

  Improved newlines and pluralisation
- Regenerated single include. [Phil Nash]
- Fix for GitHub issue #71. [Phil Nash]

  Fixed memory leak in exception translator registry
- Added clean-up. [Phil Nash]

  Clean-up statics at the end of main to avoid added noise when looking for leaks
- Improved exception reporting. [Phil Nash]

  Refactored exception handling (handle more in the translator)
  and report exceptions in CHECKs
- Don't redirect stout for basic reporter. [Phil Nash]
- Added new cpp to VS project. [Phil Nash]

  Moved catch_self_test.cpp and added it to VS2010 project
- Generated single include. [Phil Nash]
- Added missing newline. [Phil Nash]
- Added Xcode 4 iOStest project. [Phil Nash]

  Updated iOS runner for Xcode for and added project
- Ability to register line# for testing. [Phil Nash]

  Factored file/ line storage and formatting into common class.
  Used in a static registry so failure messages can be asserted to have the file/ line in.
- Remove user file. [Phil Nash]
- Fixed GitHub Issue #70. [Phil Nash]

  Interleave XML entities are now encoded correctly
- Added CHECKED_IF and CHECKED_ELSE. [Phil Nash]
- OC project for Xcode 4. [Phil Nash]
- Regenerated single header. [Phil Nash]
- Prevent duplicate test names from being registered. [Phil Nash]

  If a test case with the same name as an already registered test case is registered an error is logged to cerr and the program exits (with error level 1)
- Regenerated single include after last commit. [Phil Nash]
- Fix for GitHub issue #56. [Phil Nash]

  TEST_CASE_METHOD's put the generated class into the anonymous namespace
- Regenerated single include for last few commits. [Phil Nash]
- Fix for GitHub Issue #66. [Phil Nash]

  SECTIONs distinguished by name as well as file/ line
- GitHub issue #62. [Phil Nash]

  Initialise m_firstSectionInTestCase in Basic Reporter
- Stdout retained for all sections. [Phil Nash]

  Fixed issue where stdout was dropped between sections
- Xcode 4, warnings and MinGW. [Phil Nash]

  Added separate Xcode 4 project.
  Fixed some warnings.
  Fixed OutputDebugString decl for MinGW
- Github issue #51 Fixed &quot; entity referece. [Phil Nash]
- Removed a couple of noisy warnings. [Phil Nash]
- Merge branch 'master' of github.com:philsquared/Catch. [Phil Nash]
- Supress more warnings. [Phil Nash]
- Merge branch 'master' of github.com:philsquared/Catch. [Phil Nash]
- Merge pull request #53 from wichert/warnings. [Phil Nash]

  Suppress compiler warnings
- Fix compiler warnings. [Wichert Akkerman]

  Fix base classes without virtual destructors and missing initialisors.
- Added more warnings. [Phil Nash]
- Regenerated single_include. [Phil Nash]
- Merge ../../Catch. [Phil Nash]
- Fixed Obj-C related #include ordering. [Phil Nash]
- Simplified streamable detection. [Phil Nash]
- Hold values by value and references by reference. [Phil Nash]
- Added tests for true == true etc. [Phil Nash]
- Regenerated single include. [Phil Nash]
- Merge ../../Catch. [Phil Nash]
- Re-ordered Obj-C headers to fix dependency issue. [Phil Nash]
- Regenerated single include. [Phil Nash]
- Updated test count check to include recently added tests. [Phil Nash]
- Fixed issue with evaluating static bools. [Phil Nash]
- Regenerated single_include. [Phil Nash]
- Some fixes for string literals on LHS. [Phil Nash]
- Regen single header with __debugbreak fix. [Phil Nash]
- Merge branch 'master' of github.com:philsquared/Catch. [Phil Nash]
- Regen single header with lhs string literal fix. [Phil Nash]
- Only use __debugbreak from MSVC (rather than any compiler on Windows)
  [Phil Nash]
- Fixed tests with string literal on lhs. [Phil Nash]
- Updated glue script to work relative to script dir, then regenerated
  single header. [Phil Nash]
- Merge branch 'master' of github.com:philsquared/Catch. [Phil Nash]
- Regenerated single header. [Phil Nash]
- Updated self test counts. [Phil Nash]
- Disambiguated some locally scoped names. [Phil Nash]
- (Hopefully) fixed infinite loop in sections (GitHub #39). [Phil Nash]
- Regenerated to include Approx changes. [Phil Nash]
- Added ability to build custom Approx instance. [Phil Nash]
- Made Approx a little more forgiving (to 100& epsilon of float) and
  added some more tests for it. [Phil Nash]
- Made #include paths from reporters relative (again) [Phil Nash]
- Fixed a potential ordering issue with output streambufs. [Phil Nash]
- Removed templates from Approx (just uses double) [Phil Nash]
- Tweaks to allow headers to be glued together. Added Python script to
  generate single header. Added new XCode project that runs self test
  against single header. [Phil Nash]
- Fixed Github Issue #32: "ResultBuilder& operator << should use
  toString" [Phil Nash]
- Started adding tests for Approx. [Phil Nash]
- Allow epsilon and scale to be specified. [Phil Nash]
- Updated to use Richard Harris' approximation formula. [Phil Nash]
- Factored Approx out into own file. [Phil Nash]
- Merges objc top level headers into main headers (using #ifdef
  __OBJC__) [Phil Nash]
- Removed bool warning. [Phil Nash]
- Re-org. [Phil Nash]
- Updated self test with current test counts. [Phil Nash]
- XML Reporter reports file/ line in Exception element. [Phil Nash]
- Report file/ line of section of unexpected exception is thrown. [Phil
  Nash]
- Capture file/ line of test case - for reporting on uncaught
  exceptions. [Phil Nash]
- Qualified Catch::toSting. [Phil Nash]
- Improved custom exception handling. [Phil Nash]
- First cut of custom exception support. [Phil Nash]
- Added name option to cmd line help. [Phil Nash]
- Fixed bug in xml reporter that didn't accumulate success status
  correctly. [Phil Nash]
- Make FixtureWrapper class name unique using the preprocessor instead
  of a specialisations. [Phil Nash]
- Allow name to be provided for overall test run. [Phil Nash]
- Change root element of xml reporter to Catch. [Phil Nash]
- Change root element of xml reporter to Catch. [Phil Nash]
- Cleaned up some of the contributed tests. [Phil Nash]
- Some reporter refinements. [Phil Nash]
- Extract what() message from std::exceptions in _NO_THROW() [Phil Nash]
- Added boolean test for ptr expressions. [Phil Nash]
- Added Malcolm Noyes' test cases. [Phil Nash]
- Moved Approx into its own namespace to avoid ADL issues with operator
  == [Phil Nash]
- Updated test counts. [Phil Nash]
- Removed tests for unsigned ints against signed negative ints. [Phil
  Nash]
- Removed special case logic around comparisons between unsigned ints
  and negative signed ints (as it was non-standard) [Phil Nash]
- Allow warnings about comparisons between signed and unsigned ints to
  get through. [Phil Nash]
- Merge https://github.com/ctt/Catch into SingleEvaluation. [Phil Nash]
- Added isDebuggerActive for non Windows and Mac platforms. [ctt]
- Merge branch 'SingleEvaluation' of https://github.com/ctt/Catch into
  SingleEvaluation. [Phil Nash]
- Added isDebuggerActive for non Windows and Mac platforms. [ctt]
- IPhone test runner adds OC_TEST_CASEs. [Phil Nash]
- Debug stream fixes. [Phil Nash]
- String reporting is more consistent. [Phil Nash]
- Refined multiline stdout. [Phil Nash]
- Send to debugger console by default if running within debugger (only
  support on Windows at the moment) [Phil Nash]
- Some investigation stuff. [Phil Nash]
- Updated test count. [Phil Nash]
- Fixed VC++ warning. [Phil Nash]
- Support output to debug window in Windows. [Phil Nash]
- Extracted showHelp() function. [Phil Nash]
- Added XCode 4 related extension to be ignored. [Phil Nash]
- Split Main impl into layered functions to offer more customisation
  points. [Phil Nash]
- Fixed warning in 32 bit builds. [Phil Nash]
- Allow { NULL <op> T }to work. [Phil Nash]
- Pointer comparisons and compare to NULL. [Phil Nash]
- Added missing #include for <limits> [Phil Nash]
- Updated test counts following addition of more test cases. [Phil Nash]
- Added special case logic for signed/ unsigned comparisons involving
  negative numbers and added test cases to cover them. [Phil Nash]
- Reports test case if stdout/ stderr written to, even if it succeeded.
  [Phil Nash]
- Suppress spurious "not all control paths return a value" warning in
  Visual Studio. [Phil Nash]
- Correctness fixes (for VS) [Phil Nash]
- Always output final summary - even if no errors. [Phil Nash]
- Refactored duplicated code between acceptExpression() and
  acceptResult() [Phil Nash]
- StopOnFailure now works again. [Phil Nash]
- Added newlines to warn & info - and always output cout & cerr. [Phil
  Nash]
- Tidied exception check macros. [Phil Nash]
- Fixed exception check regression. [Phil Nash]
- Removed complex expression tests (they shouldn't compile now) [Phil
  Nash]
- Removed complex expression state (as it shouldn't compile now anyway)
  [Phil Nash]
- Improvements to self test to give finer grained feedback. [Phil Nash]
- Fixed some issues caused by single evaluation work. [Phil Nash]
- More Single Evaluation work. [Phil Nash]
- First cut of single-evaluation fix. [Phil Nash]
- Renamed file. [Phil Nash]
- Second attempt at signed/ unsigned. [Phil Nash]
- First attempt at solving signed/ unsigned issue with int literals.
  [Phil Nash]
- Small defensive tweak on checking expression. [Phil Nash]
- Added CAPTURE() macro. [Phil Nash]
- Fixed lazy reporting for nested sections. [Phil Nash]
- Made dummy BreakIntoDebugger() macro an inline function to avoid
  compiler warning. [Phil Nash]
- Merge branch 'master' of https://github.com/mattrubin/Catch. [Phil
  Nash]
- Fixed a compiler error when on a Mac with DEBUG not defined, which
  resulted in an undefined BreakIntoDebugger() [Matt Rubin]
- Fixed null string reporting issue. [Phil Nash]
- Added generator copy ctor to fix bug when NRVO is not used. Some
  exception handling improvements, too. [Phil Nash]
- Fixed self test. [Phil Nash]
- Added more focussed meta test for sections and fixed bug in
  outstanding section detection. [Phil Nash]
- More complete fix for nested sections. [Phil Nash]
- Further improved nested sections. [Phil Nash]
- Quick fix for nested sections - doesn't cover all cases yet. [Phil
  Nash]
- Added attribution for __debugbreak() [Phil Nash]
- Fixed more warnings and applied workaround for getting to
  std::numeric_limits without clashing with Windows' min() and max()
  macros. [Phil Nash]
- Renamed DebugBreak to avoid collision and implemented in terms of
  __debugbreak() on Windows. [Phil Nash]
- Improved reporting from self-test and basic reporter in general. [Phil
  Nash]
- Refactored self-test - doesn't need so many supporting classes. [Phil
  Nash]
- First cut of iOS test runner. [Phil Nash]
- First draft of iOS test runner. [Phil Nash]
- Some clean-up. [Phil Nash]
- Added some headers to fix build on some gcc versions. [Phil Nash]
- Some layout reformatting. I think everything is in my preferred style
  now. [Phil Nash]
- Fixed compiler error for gcc on Linux (reported by Tryneus - thanks)
  [Phil Nash]
- Added wiki link to readme. [Phil Nash]
- Fixed OC bindings project following recent changes. [Phil Nash]
- Fixed more gcc warnings. [Phil Nash]
- Fixed most pedantic warnings. [Phil Nash]
- Some formating clean-up. [Phil Nash]
- Moved generator tests into their own file. [Phil Nash]
- Fixed self test. [Phil Nash]
- Extracted generator impl code out of Hub. [Phil Nash]
- Removed some cruft. [Phil Nash]
- Multiple generators working and factored out a bit better. [Phil Nash]
- First cut of generators. [Phil Nash]
- Only report test case once for all sections within it. [Phil Nash]
- Removed OutputDebugString support until I can test it on a Windows
  machine. [Phil Nash]
- Removed OutputDebugString support until I can test it on a Windows
  machine. [Phil Nash]
- Started adding support for isolated sections. [Phil Nash]
- Incremental naming for annonymous test cases. [Phil Nash]
- Added ANON_TEST_CASE() macro. [Phil Nash]
- Renamed catch_default_main.hpp to catch_with_main.hpp. [Phil Nash]
- Cleaned up config class a bit. [Phil Nash]
- Allow output stream to be specified on the command line. [Phil Nash]
- Added self test to project. [Phil Nash]
- A single embedded runner instance can now be used for multiple nested
  runs, with results reset between each. Meta test runner looking very
  clean now. [Phil Nash]
- Don't run tests starting with ./ by default. Changed all low-level
  self tests to be in ./ [Phil Nash]
- Replaced dodgy self-test code with slightly less dodgy self test meta
  test cases. [Phil Nash]
- Reformatted basic reporter signatures. [Phil Nash]
- Keep stack of runners and pass success/ fail count to EndTestCase.
  [Phil Nash]
- Some code clean-up. [Phil Nash]
- Added some specialisations for toString. [Phil Nash]
- Refactored more into Hub. [Phil Nash]
- Some more refactoring/ cleaning of test case files. [Phil Nash]
- Split test registry code out. [Phil Nash]
- Moved test case registry into hub. [Phil Nash]
- Changed some std::string args to char* to improve compile time. [Phil
  Nash]
- More project refactoring. [Phil Nash]
- Project refactoring. [Phil Nash]
- Fixed TestMain after recent refactorings. [Phil Nash]
- Added missing #includes. [Phil Nash]
- Tweaked list enum. [Phil Nash]
- Project update. [Phil Nash]
- Renamed runnerconfig file -> config. [Phil Nash]
- Project clean-up. [Phil Nash]
- Renamed RunnerConfig to just Config (now its the only one) [Phil Nash]
- Folded ReporterConfig into RunnerConfig. [Phil Nash]
- Moved impl of hub out into hub_impl - only #included from runner.
  [Phil Nash]
- Only Hub #includes report_registry. Seperated reporter registrars from
  registry. [Phil Nash]
- ReporterRegistry now fully aggregated by Hub. [Phil Nash]
- Refactored reporter related code into interface based design. [Phil
  Nash]
- First step to refactoring ResultsCapture into pure calls onto
  IResultListener interface. [Phil Nash]
- Tweak to reporter registrar to make sure generated name is unique.
  [Phil Nash]
- Added help option. [Phil Nash]
- More commane line tidy up. [Phil Nash]
- Tidied command line a little. [Phil Nash]
- Fixed warning about copy ctor. [Phil Nash]
- Fixed some more warnings. [Phil Nash]
- Moved boilerplate main for obj bindings into header. [Phil Nash]
- Cleaned up some more warnings. [Phil Nash]
- Merge remote branch 'socketpuppet/master' [Phil Nash]
- Allow tests including catch to compile with g++ flags -Wall and
  -Werror. [Michael Mortensen]
- Changed initialization order to avoid some warnings when compiling
  with g++. [Michael Mortensen]
- Fixes to the self test. [Phil Nash]
- Fixed bug with listing test cases. [Phil Nash]
- Fixed OCTest project to use new REQUIRE macro. [Phil Nash]
- INFO()s are only cleared by failures or end of test case. [Phil Nash]
- INFO() now works correctly. [Phil Nash]
- Added facility to write self-registering test cases as methods. [Phil
  Nash]
- Added file for DebugBreak to project. [Phil Nash]
- Added ability to break into debugger on Windows and Mac. [Phil Nash]
- Added streaming to message macros and added scoped info. [Phil Nash]
- Added nested sections test. [Phil Nash]
- Fixed comment. [Phil Nash]
- Changed macro names: EXPECT -> REQUIRE, *_NOT -> *_FALSE. [Phil Nash]
- Some tidy up. [Phil Nash]
- Refactored xml reporter in terms of xmlwriter and filled out new
  events. [Phil Nash]
- Some clean-up and a little more JUnit implementation. [Phil Nash]
- First draft of Junit reporter. [Phil Nash]
- Stdout/ stderr capturing. [Phil Nash]
- Tidy up after merge mess. [Phil Nash]
- Fixed merge. [Phil Nash]
- Merge. [Phil Nash]
- Implemented more reporter methods and started to fill out Section
  impl. [Phil Nash]
- Some work on sections. [Phil Nash]
- Fixed broken meta-test. [Phil Nash]
- ToString() now works with non-specialised non-streamable types. [Phil
  Nash]
- Auto registers OC Classes. [Phil Nash]
- First cut of ObjC bindings. [Phil Nash]
- Move the Xcode project around a bit. [Phil Nash]
- Moved catch_runnerconfig.hpp into internal. [Phil Nash]
- Moved catch_runnerconfig.hpp into internal. [Phil Nash]
- Fixed project after file rename. [Phil Nash]
- Added Visual Studio project and fixed up some warnings showing in VS.
  [Phil Nash]
- More portability fixes. [Phil Nash]
- Some portability fixes (thanks to Sam Saariste) [Phil Nash]
- #include and newline fixes from Björn Fahller. [Phil Nash]
- Fixed leak. [Phil Nash]
- Allow -s to be used to show successful results in test harness. [Phil
  Nash]
- Test cases all succeed again. [Phil Nash]
- Detect and warn about overly complex expressions. [Phil Nash]
- Fixed a == 1 || b == 2 case. [Phil Nash]
- Fixed temporary encapsulation violation. [Phil Nash]
- Added note about ! operator. [Phil Nash]
- Change some names to protect the ... reserved. [Phil Nash]
- First commit for GitHub. [Phil Nash]


