// based on a keyboard map from an 'xkb/symbols/dev' file

default partial alphanumeric_keys xkb_symbols "phenotic" {
      name[Group1]= "Nepali (Phenotic)";
      
      key.type="FOUR_LEVEL";

// `,1,2,3,4,5,6,7,8,9,0,-,=

      key <TLDE> { [      0x100093D, 0x100097D,     grave,     asciitilde   ] };
      key <AE01> { [      0x1000967, exclam,        1,         exclam       ] };
      key <AE02> { [      0x1000968, at,	    2,         at           ] };
      key <AE03> { [      0x1000969, numbersign,    3,         numbersign   ] };
      key <AE04> { [      0x100096A, 0x10020A8,	    4,         dollar       ] };
      key <AE05> { [      0x100096B, percent,	    5,         percent      ] };
      key <AE06> { [      0x100096C, asciicircum,   6,         asciicircum  ] };
      key <AE07> { [      0x100096D, ampersand,	    7,         ampersand    ] };
      key <AE08> { [      0x100096e, asterisk,	    8,         asterisk     ] };
      key <AE09> { [      0x100096F, parenleft,	    9,         parenleft    ] };
      key <AE10> { [      0x1000966, parenright,    0,         parenright   ] };
      key <AE11> { [      minus,     underscore                             ] };
      key <AE12> { [      equal,     plus                                   ] };

// q,w,e,r,t,y,u,i,o,p,[,]

      key <AD01> { [      0x100091F,  0x1000920, q,         Q            ] };
      key <AD02> { [      0x100094C,  0x1000914, w,         W            ] };
      key <AD03> { [      0x1000947,  0x1000948, e,         E            ] };
      key <AD04> { [      0x1000930,  0x1000943, r,         R            ] };
      key <AD05> { [      0x1000924,  0x1000925, t,         T            ] };
      key <AD06> { [      0x100092F,  0x100091E, y,         Y            ] };
      key <AD07> { [      0x1000941,  0x1000942, u,         U            ] };
      key <AD08> { [      0x100093F,  0x1000940, i,         I            ] };
      key <AD09> { [      0x100094B,  0x1000913, o,         O            ] };
      key <AD10> { [      0x100092A,  0x100092B, p,         P            ] };
      key <AD11> { [      0x1000907,  0x1000908, bracketleft, braceleft  ] };
      key <AD12> { [      0x100090F,  0x1000910, bracketright, braceright] };
						               
// a,s,d,f,g,h,j,k,l,;,',Backslash 		               
      key <AC01> { [      0x100093E,  0x1000906, a,         A            ] };
      key <AC02> { [      0x1000938,  0x1000936, s,         S            ] };
      key <AC03> { [      0x1000926,  0x1000927, d,         D            ] };
      key <AC04> { [      0x1000909,  0x100090A, f,         F            ] };
      key <AC05> { [      0x1000917,  0x1000918, g,         G            ] };
      key <AC06> { [      0x1000905,  0x1000939, h,         H            ] };
      key <AC07> { [      0x100091C,  0x100091D, j,         J            ] };
      key <AC08> { [      0x1000915,  0x1000916, k,         K            ] };
      key <AC09> { [      0x1000932,  0x1000933, l,         L            ] };
      key <AC10> { [      semicolon,  colon, semicolon,  colon           ] };
      key <AC11> { [      apostrophe, quotedbl, apostrophe, quotedbl     ] };
      key <BKSL> { [      0x1000950,  0x1000903, backslash, bar          ] };
						               
						               
// z,x,c,v,b,n,m,,,.,/ 				               
      key <AB01> { [      0x1000937,  0x100090B, z,         Z            ] };
      key <AB02> { [      0x1000921,  0x1000922, x,         X            ] };
      key <AB03> { [      0x100091A,  0x100091B, c,         C            ] };
      key <AB04> { [      0x1000935,  0x1000901, v,         V            ] };
      key <AB05> { [      0x100092C,  0x100092D, b,         B            ] };
      key <AB06> { [      0x1000928,  0x1000923, n,         N            ] };
      key <AB07> { [      0x100092E,  0x1000902, m,         M            ] };
      key <AB08> { [      comma,      0x1000919, comma, less             ] };
      key <AB09> { [      0x1000964,  0x1000965, period, greater         ] };
      key <AB10> { [      0x100094D,  question, slash, question          ] };

      include "level3(caps_switch)"
      include "level3(caps_switch_latch)"

};
