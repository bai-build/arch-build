diff -ruN brainparty_orig/BPGame.cpp brainparty/BPGame.cpp
--- brainparty_orig/BPGame.cpp	2010-04-13 15:44:55.000000000 +0200
+++ brainparty/BPGame.cpp	2018-02-05 22:32:32.583653423 +0100
@@ -1298,7 +1298,11 @@
 	NumUnlockedGames = 0;
 
 	ifstream ifs;
-	ifs.open(".brainparty");
+
+	string path(getenv("HOME"));
+	path += "/.brainparty";
+
+	ifs.open(path.c_str());
 	
 	FirstRun = false;
 	
@@ -1429,7 +1433,11 @@
 
 void BPGame::SaveSettings() {
  	ofstream savefile;
- 	savefile.open(".brainparty");
+
+	string path(getenv("HOME"));
+	path += "/.brainparty";
+
+ 	savefile.open(path.c_str());
 	savefile << EnableSound << endl;
 	savefile << EnableMusic << endl;
 	savefile << endl;
@@ -2410,4 +2418,4 @@
 Colour* BPGame::ColorLerp(Colour* from, Colour* to, float amount) {
 	Colour* col = new Colour(Lerp(from->R, to->R, amount), Lerp(from->G, to->G, amount), Lerp(from->B, to->B, amount), Lerp(from->A, to->A, amount));
 	return col;
-}
\ Kein Zeilenumbruch am Dateiende.
+}
diff -ruN brainparty_orig/BPList.h brainparty/BPList.h
--- brainparty_orig/BPList.h	2010-03-02 14:29:45.000000000 +0100
+++ brainparty/BPList.h	2018-02-05 22:32:32.583653423 +0100
@@ -138,7 +138,7 @@
 	~BPPList();
 	void Add(T item);
 	bool Contains(T item);
-	void Clear(bool safe_delete);
+	void Clear(bool safe_delete = true);
 	int IndexOf(T item);
 	void Insert(int pos, T item);
 	void Remove(T item);
@@ -171,7 +171,7 @@
 }
 
 template <class T>
-void BPPList<T>::Clear(bool safe_delete = true) {
+void BPPList<T>::Clear(bool safe_delete) {
 	if (safe_delete) {
 		for (int i = data.size() - 1; i >= 0; --i) {
 			T item = data[i];
diff -ruN brainparty_orig/main.cpp brainparty/main.cpp
--- brainparty_orig/main.cpp	2010-04-13 15:44:55.000000000 +0200
+++ brainparty/main.cpp	2018-02-05 22:32:32.583653423 +0100
@@ -26,6 +26,8 @@
 BPGame* Game;
 
 int main(int argc, char *argv[]) {
+	chdir("/usr/share/brainparty");
+
 	if ( SDL_Init(SDL_INIT_VIDEO | SDL_INIT_AUDIO) < 0 ) {
 		fprintf(stderr, "Unable to init SDL: %s\n", SDL_GetError());
 		exit(1);
diff -ruN brainparty_orig/Makefile brainparty/Makefile
--- brainparty_orig/Makefile	2010-03-02 14:42:51.000000000 +0100
+++ brainparty/Makefile	2018-02-05 22:32:32.583653423 +0100
@@ -13,7 +13,7 @@
 else
 	INCLUDES = `sdl-config --cflags` -I/usr/X11R6/include
 	LIBS = `sdl-config --libs` -lGL -lGLU -lSDL_mixer -lSDL_ttf -lSDL_gfx -lSDL_image 
-	CXXFLAGS = -g -c -Wno-deprecated
+	CXXFLAGS = -std=c++03 -g -c -Wno-deprecated
 	OSXCOMPAT = 
 endif
 
diff -ruN brainparty_orig/symboliclogic.cpp brainparty/symboliclogic.cpp
--- brainparty_orig/symboliclogic.cpp	2010-03-02 14:29:45.000000000 +0100
+++ brainparty/symboliclogic.cpp	2018-02-05 22:30:33.070299279 +0100
@@ -116,7 +116,7 @@
 	}
 }
 
-const char* BPMiniGame_SymbolicLogic::FlattenPremise(BPMiniGame_SymbolicLogic_Premise* premise) {
+const string BPMiniGame_SymbolicLogic::FlattenPremise(BPMiniGame_SymbolicLogic_Premise* premise) {
 	ostringstream result;
 	
 	switch (premise->Type) {
@@ -150,7 +150,7 @@
 			break;
 	}
 		
-	return result.str().c_str();
+	return result.str();
 }
 
 void BPMiniGame_SymbolicLogic::Tick() {
diff -ruN brainparty_orig/symboliclogic.h brainparty/symboliclogic.h
--- brainparty_orig/symboliclogic.h	2010-03-02 14:29:45.000000000 +0100
+++ brainparty/symboliclogic.h	2018-02-05 22:30:40.323634769 +0100
@@ -67,7 +67,7 @@
 	void Start();
 	int GetWeight();
 	void Render();
-	const char* FlattenPremise(BPMiniGame_SymbolicLogic_Premise* premise);
+	const string FlattenPremise(BPMiniGame_SymbolicLogic_Premise* premise);
 	void Tick();
 	
 	void OnMouseDown();
