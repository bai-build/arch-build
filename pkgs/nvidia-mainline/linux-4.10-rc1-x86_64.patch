diff -ur NVIDIA-Linux-x86_64-375.26/kernel/nvidia-uvm/uvm8.c NVIDIA-Linux-x86_64-375.26.patched/kernel/nvidia-uvm/uvm8.c
--- NVIDIA-Linux-x86_64-375.26/kernel/nvidia-uvm/uvm8.c	2016-12-09 02:17:46.000000000 +0100
+++ NVIDIA-Linux-x86_64-375.26.patched/kernel/nvidia-uvm/uvm8.c	2016-12-15 11:51:32.638165272 +0100
@@ -101,7 +101,7 @@
 // so we force it to fail instead.
 static int uvm_vm_fault_sigbus(struct vm_area_struct *vma, struct vm_fault *vmf)
 {
-    UVM_DBG_PRINT_RL("Fault to address 0x%p in disabled vma\n", vmf->virtual_address);
+    UVM_DBG_PRINT_RL("Fault to address 0x%p in disabled vma\n", vmf->address);
     vmf->page = NULL;
     return VM_FAULT_SIGBUS;
 }
@@ -315,7 +315,7 @@
 {
     uvm_va_space_t *va_space = uvm_va_space_get(vma->vm_file);
     uvm_va_block_t *va_block;
-    NvU64 fault_addr = (NvU64)(uintptr_t)vmf->virtual_address;
+    NvU64 fault_addr = (NvU64)(uintptr_t)vmf->address;
     bool is_write = vmf->flags & FAULT_FLAG_WRITE;
     NV_STATUS status = uvm_global_get_status();
     bool tools_enabled;
diff -ur NVIDIA-Linux-x86_64-375.26/kernel/nvidia-uvm/uvm8_test.c NVIDIA-Linux-x86_64-375.26.patched/kernel/nvidia-uvm/uvm8_test.c
--- NVIDIA-Linux-x86_64-375.26/kernel/nvidia-uvm/uvm8_test.c	2016-12-09 02:17:46.000000000 +0100
+++ NVIDIA-Linux-x86_64-375.26.patched/kernel/nvidia-uvm/uvm8_test.c	2016-12-15 11:51:32.639165272 +0100
@@ -103,7 +103,7 @@
     return NV_ERR_INVALID_STATE;
 }
 
-static NV_STATUS uvm8_test_get_kernel_virtual_address(
+static NV_STATUS uvm8_test_get_kernel_address(
         UVM_TEST_GET_KERNEL_VIRTUAL_ADDRESS_PARAMS *params,
         struct file *filp)
 {
@@ -173,7 +173,7 @@
         UVM_ROUTE_CMD_STACK(UVM_TEST_RANGE_GROUP_RANGE_COUNT,       uvm8_test_range_group_range_count);
         UVM_ROUTE_CMD_STACK(UVM_TEST_GET_PREFETCH_FAULTS_REENABLE_LAPSE, uvm8_test_get_prefetch_faults_reenable_lapse);
         UVM_ROUTE_CMD_STACK(UVM_TEST_SET_PREFETCH_FAULTS_REENABLE_LAPSE, uvm8_test_set_prefetch_faults_reenable_lapse);
-        UVM_ROUTE_CMD_STACK(UVM_TEST_GET_KERNEL_VIRTUAL_ADDRESS,    uvm8_test_get_kernel_virtual_address);
+        UVM_ROUTE_CMD_STACK(UVM_TEST_GET_KERNEL_VIRTUAL_ADDRESS,    uvm8_test_get_kernel_address);
         UVM_ROUTE_CMD_STACK(UVM_TEST_PMA_ALLOC_FREE,                uvm8_test_pma_alloc_free);
         UVM_ROUTE_CMD_STACK(UVM_TEST_PMM_ALLOC_FREE_ROOT,           uvm8_test_pmm_alloc_free_root);
         UVM_ROUTE_CMD_STACK(UVM_TEST_PMM_INJECT_PMA_EVICT_ERROR,    uvm8_test_pmm_inject_pma_evict_error);
diff -ur NVIDIA-Linux-x86_64-375.26/kernel/nvidia-uvm/uvm_lite.c NVIDIA-Linux-x86_64-375.26.patched/kernel/nvidia-uvm/uvm_lite.c
--- NVIDIA-Linux-x86_64-375.26/kernel/nvidia-uvm/uvm_lite.c	2016-12-09 02:17:46.000000000 +0100
+++ NVIDIA-Linux-x86_64-375.26.patched/kernel/nvidia-uvm/uvm_lite.c	2016-12-15 11:51:32.639165272 +0100
@@ -1333,7 +1333,7 @@
 #if defined(NV_VM_OPERATIONS_STRUCT_HAS_FAULT)
 int _fault(struct vm_area_struct *vma, struct vm_fault *vmf)
 {
-    unsigned long vaddr = (unsigned long)vmf->virtual_address;
+    unsigned long vaddr = (unsigned long)vmf->address;
     struct page *page = NULL;
     int retval;
 
