# Defaults for unfs3 (user-space NFSv3 server)

# Unprivileged port
# Use an unprivileged port for NFS and MOUNT service. Normally, unfsd will use
# port number 2049, which is the standard port for NFS. When this option is in
# effect, arbitrary ports chosen by the RPC library will be used. You may need
# to use this option when running unfsd from a normal user account.
PORT_UNPRIVILEGED="-u"

# Specified port
# Use the specified port for the NFS service.
PORT_NFS="2049"

# Specified port (MOUNT service)
# Use the specified port for the MOUNT service. The default is to use port
# number 2049, the same as for the NFS service. You can use the same port for
# both services if you want.
PORT_MOUNT="2049"

# TCP only operation
# By default, unfsd provides its services to clients using either UDP or TCP as
# communications protocol. When this option is present, only TCP connections are
# serviced.
#TCP_ONLY="-t"

# Register with the portmapper
# Do not register with the portmapper. This will prevent other hosts from
# finding out the port numbers used for the MOUNT and NFS services by querying
# the portmap daemon. Clients will need to manually specify the port numbers to
# use (on Linux clients, use the mountport and port mount options).
#NO_PORTMAPPER="-p"

# Expiring write cache
# Allow the built-in file descriptor cache to expire writers. For performance
# reasons, unfsd keeps file descriptors open across multiple READ or WRITE
# requests. Normally, only READ file descriptors will be expired from the cache
# when it fills up. Setting this option allows file descriptors from WRITE
# operations to be expired, too. When this  happens, pending data will be
# written to the server filesystem. However, if an error occurs while doing
# this, there is no way to notify the NFS client of the error. A message
# indicating the problem will be sent to the system log on the server.
#NO_WRITE_CACHE="-w"

# Cluster extensions
# Enable cluster extensions. When this option is enabled, so-called tagged
# files are handled differently from normal files, making it possible to
# serve different file  contents to different clients for the same filename.
# See tags(7) for a description of tagged files. This option causes a
# performance hit.
#CLUSTER_EXTENSION="-c"

# Cluster path
# Limit the use of cluster extensions to a list of colon-seperated directories.
# When this option is present, the performance hit caused by clustering
# extensions only applies to the listed directories and their subdirectories.
#CLUSTER_PATH="-C /"

# Single user mode
# Activate basic uid translation. This option is useful when the server and
# client are using different user and group ids. All requests from the client
# will be served from the user id that started unfsd, no user id switching will
# take  place (even if unfsd was started by root). Ownership is reported as
# follows: files belonging to the user id running unfsd will look as if they
# are owned by the client's user. Other files will look as if they are owned by
# root. The same principle applies to group ownership.
#SINGLE_USER="-s"

# Brute force file searching
# Normally, when you rename a file across several directories on an NFS volume,
# the filehandle for that file becomes stale. When this option is enabled, unfsd
# will attempt a recursive search on the relevant server filesystem to find the
# file referenced by the filehandle. This can have a huge performance impact as
# this will also happen for files that were really deleted (by another NFS
# client) instead of moved, and cannot be found.
#BRUTE_FORCE="-b"

# Bind to interface with specified address
# The default is to bind to all local interfaces.
#INTERFACE="-l 127.0.0.1"

# Debug mode
# When this option is present, unfsd will not fork into the background at
# startup, and all messages that would normally go to the system log go to
# stdout instead.
#DEBUG="-d"

# Additional options that are passed to the Daemon.
ARGS="$PORT_UNPRIVILEGED -n $PORT_NFS -m $PORT_MOUNT $TCP_ONLY $NO_PORTMAPPER $NO_WRITE_CACHE $CLUSTER_EXTENSION $CLUSTER_PATH $SINGLE_USER $BRUTE_FORCE $INTERFACE $DEBUG"
