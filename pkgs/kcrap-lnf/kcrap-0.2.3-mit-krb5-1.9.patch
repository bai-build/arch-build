diff -Naur kcrap-0.2.3/server/kcrap_kdb.c kcrap-0.2.3-patched/server/kcrap_kdb.c
--- kcrap-0.2.3/server/kcrap_kdb.c	2009-08-12 19:39:34.000000000 -0400
+++ kcrap-0.2.3-patched/server/kcrap_kdb.c	2011-11-12 22:25:05.000000000 -0500
@@ -36,8 +36,7 @@
 int kcrap_open_kdb(krb5_context context, profile_t profile, char* kcrap_section) {
     krb5_error_code retval;
     int nentries;
-    krb5_boolean more;
-    krb5_db_entry master_entry;
+    krb5_db_entry *master_entry;
     krb5_principal master_princ;
     char* dbname;
     char* realm = NULL;
@@ -89,17 +88,10 @@
 	com_err("open_kdb", retval, "while setting up master key name");
 	goto free1;
     }
-    if ((retval = krb5_db_get_principal(context, master_princ, &master_entry, &nentries, &more))) {
+    /* krb5_db_get_principal(krb5_context kcontext, krb5_const_principal search_for, unsigned int flags, krb5_db_entry **entry) */
+    if ((retval = krb5_db_get_principal(context, master_princ, 0, &master_entry))) {
 	com_err("open_kdb", retval, "while retrieving master entry");
 	goto free2;
-    } else if (more) {
-	retval = KRB5KDC_ERR_PRINCIPAL_NOT_UNIQUE;
-	com_err("open_kdb", retval, "while retrieving master entry");
-	goto free3;
-    } else if (!nentries) {
-	retval = KRB5_KDB_NOENTRY;
-	com_err("open_kdb", retval, "while retrieving master entry");
-	goto free3;
     }
 
     if ((retval = profile_get_string(profile, "realms", realm, "key_stash_file", NULL, &stash_file))) {
@@ -113,16 +105,18 @@
 	com_err("open_kdb", retval, "while fetching master key %s for realm %s", KRB5_KDB_M_NAME, realm);
 	goto free4;
     }
+    /*
     if ((retval = krb5_db_verify_master_key(context, master_princ, KVNO_ARG_OPT &master_keyblock))) {
 	com_err("kdb_open", retval, "while verifying master key");
 	krb5_free_keyblock_contents(context, &master_keyblock);
 	goto free4;
     }
+    */
 
     free4:
     profile_release_string(stash_file);
     free3:
-    krb5_db_free_principal(context, &master_entry, nentries);
+    krb5_db_free_principal(context, master_entry);
     free2:
     krb5_free_principal(context, master_princ);
     if (retval) krb5_db_fini(context);
@@ -135,11 +129,10 @@
 
 
 int kcrap_getkey(krb5_context context, struct kcrap_data principal, krb5_enctype keytype, int *nkeyblocks, struct keyblocks *keyblocks) {
-    krb5_db_entry dbe;
+    krb5_db_entry *dbe;
     krb5_principal princ;
     int nprincs = 1;
     int retval;
-    krb5_boolean more;
     char* pstr;
     int i;
     int count;
@@ -157,35 +150,29 @@
     if ((retval = krb5_parse_name(context, pstr, &princ)))
 	goto free0;
 
-    if ((retval = krb5_db_get_principal(context, princ, &dbe, &nprincs, &more))) {
+    if ((retval = krb5_db_get_principal(context, princ, 0, &dbe))) {
 	goto free1;
-    } else if (more) {
-	retval = KRB5KDC_ERR_PRINCIPAL_NOT_UNIQUE;
-	goto free2;
-    } else if (!nprincs) {
-	retval = KRB5_KDB_NOENTRY;
-	goto free2;
     }
 
     if ((retval = krb5_timeofday(context, &nowtime))) {
 	goto free2;
     }
 
-    if (dbe.pw_expiration && dbe.pw_expiration < nowtime) {
+    if (dbe->pw_expiration && dbe->pw_expiration < nowtime) {
 	retval = KRB5KDC_ERR_KEY_EXP;
 	goto free2;
     }
-    if (dbe.expiration && dbe.expiration < nowtime) {
+    if (dbe->expiration && dbe->expiration < nowtime) {
 	retval = KRB5KDC_ERR_NAME_EXP;
 	goto free2;
     }
 
     count = 0;
     kvno = 0;
-    for (i = 0; i < dbe.n_key_data; i++) {
-	if (kvno < dbe.key_data[i].key_data_kvno) {
+    for (i = 0; i < dbe->n_key_data; i++) {
+	if (kvno < dbe->key_data[i].key_data_kvno) {
 	    count = 0;
-	    kvno = dbe.key_data[i].key_data_kvno;
+	    kvno = dbe->key_data[i].key_data_kvno;
 	}
 	count++;
     }
@@ -195,10 +182,10 @@
     }
 
     count = 0;
-    for (i = 0; i < dbe.n_key_data && count < *nkeyblocks; i++) {
-	if (kvno == dbe.key_data[i].key_data_kvno) {
+    for (i = 0; i < dbe->n_key_data && count < *nkeyblocks; i++) {
+	if (kvno == dbe->key_data[i].key_data_kvno) {
 	    /* XXX: what if we needed to specify a salt? */
-	    retval = krb5_dbekd_decrypt_key_data(context, &master_keyblock, &dbe.key_data[i], &keyblocks[count].key, NULL);
+	    retval = krb5_dbe_decrypt_key_data(context, &master_keyblock, &dbe->key_data[i], &keyblocks[count].key, NULL);
 	    if (retval == 0) count++;
 	}
     }
@@ -211,7 +198,7 @@
     }
 
     free2:
-    krb5_db_free_principal(context, &dbe, nprincs);
+    krb5_db_free_principal(context, dbe);
     free1:
     krb5_free_principal(context, princ);
     free0:
