diff -r -u5 driver/2.6.27o/dgrp_net_ops.c driver/2.6.27/dgrp_net_ops.c
--- driver/2.6.27o/dgrp_net_ops.c	2018-06-01 12:10:27.000000000 -0400
+++ driver/2.6.27/dgrp_net_ops.c	2020-07-02 21:56:04.224066530 -0400
@@ -4531,14 +4531,18 @@
 	nd = file->private_data;
 
 	dbg_net_trace(IOCTL, ("net ioctl(%p) start\n", nd));
 
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,0,0) && defined (VERIFY_WRITE)
 	if (_IOC_DIR(cmd) & _IOC_READ)
 		rtn = access_ok(VERIFY_WRITE, (void *) arg, size);
 	else if (_IOC_DIR(cmd) & _IOC_WRITE)
 		rtn = access_ok(VERIFY_READ,  (void *) arg, size);
+#else
+	rtn = access_ok((void *) arg, size);
+#endif
 
 	if (rtn == 0)
 		goto done;
 
 	rtn = 0;
diff -r -u5 driver/2.6.27o/dgrp_ports_ops.c driver/2.6.27/dgrp_ports_ops.c
--- driver/2.6.27o/dgrp_ports_ops.c	2018-06-01 12:10:27.000000000 -0400
+++ driver/2.6.27/dgrp_ports_ops.c	2020-07-02 21:56:34.377310157 -0400
@@ -516,11 +516,16 @@
 	if (len > left) {
 		len = left;
 		notdone = 1;
 	}
 
-	if (access_ok(VERIFY_WRITE, buf, len) == 0) {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,0,0) && defined (VERIFY_WRITE)
+	if (access_ok(VERIFY_WRITE, buf, len) == 0)
+#else
+	if (access_ok(buf, len) == 0)
+#endif
+	{
 		res = -EFAULT;
 		goto done;
 	}
 
 	res = copy_to_user(buf, &linebuf[linepos], len);
diff -r -u5 driver/2.6.27o/dgrp_specproc.c driver/2.6.27/dgrp_specproc.c
--- driver/2.6.27o/dgrp_specproc.c	2018-06-01 12:10:27.000000000 -0400
+++ driver/2.6.27/dgrp_specproc.c	2020-07-02 21:56:49.193933873 -0400
@@ -642,11 +642,15 @@
 	len = *lenp;
 
 	if (len > INBUFLEN - 1)
 		len = INBUFLEN - 1;
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,0,0) && defined (VERIFY_WRITE)
 	if (access_ok(VERIFY_READ, buffer, len) == 0)
+#else
+	if (access_ok(buffer, len) == 0)
+#endif
 		return -EFAULT;
 
 	if (copy_from_user(inbuf, buffer, len))
 		return -EFAULT;
 
@@ -729,11 +733,15 @@
 	if (len > left) {
 		len = left;
 		notdone = 1;
 	}
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,0,0) && defined (VERIFY_WRITE)
 	if (access_ok(VERIFY_WRITE, buffer, len) == 0)
+#else
+	if (access_ok(buffer, len) == 0)
+#endif
 		return -EFAULT;
 	if (copy_to_user(buffer, &linebuf[linepos], len))
 		return -EFAULT;
 
 	if (notdone)
@@ -1116,11 +1124,15 @@
 	len = *lenp;
 
 	if (len > INBUFLEN - 1)
 		len = INBUFLEN - 1;
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,0,0) && defined (VERIFY_WRITE)
 	if (access_ok(VERIFY_READ, buffer, len) == 0)
+#else
+	if (access_ok(buffer, len) == 0)
+#endif
 		return -EFAULT;
 	if (copy_from_user(inbuf, buffer, len))
 		return -EFAULT;
 
 	inbuf[len] = 0;
@@ -1322,11 +1334,15 @@
 	if (len > left) {
 		len = left;
 		notdone = 1;
 	}
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,0,0) && defined (VERIFY_WRITE)
 	if (access_ok(VERIFY_WRITE, buffer, len) == 0)
+#else
+	if (access_ok(buffer, len) == 0)
+#endif
 		return -EFAULT;
 	if (copy_to_user(buffer, &linebuf[linepos], len))
 		return -EFAULT;
 
 	if (notdone)
@@ -1431,11 +1447,15 @@
 	if (len > left) {
 		len = left;
 		notdone = 1;
 	}
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,0,0) && defined (VERIFY_WRITE)
 	if (access_ok(VERIFY_WRITE, buffer, len) == 0)
+#else
+	if (access_ok(buffer, len) == 0)
+#endif
 		return -EFAULT;
 	if (copy_to_user(buffer, &linebuf[linepos], len))
 		return -EFAULT;
 
 	if (notdone)
diff -r -u5 driver/2.6.27o/dgrp_tty.c driver/2.6.27/dgrp_tty.c
--- driver/2.6.27o/dgrp_tty.c	2018-06-01 12:10:27.000000000 -0400
+++ driver/2.6.27/dgrp_tty.c	2020-07-02 21:56:18.577356760 -0400
@@ -2992,11 +2992,15 @@
 	int error;
 	unsigned int arg;
 	int mval = 0;
 	ulong lock_flags;
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,0,0) && defined (VERIFY_WRITE)
 	error = access_ok(VERIFY_READ, value, sizeof(int));
+#else
+	error = access_ok(value, sizeof(int));
+#endif
 	if (error == 0)
 		return -EFAULT;
 
 	get_user(arg, (unsigned int *) value);
 	mval |= ((arg & TIOCM_RTS) ? DM_RTS : 0)
@@ -3425,11 +3429,15 @@
 		 * the break.
 		 */
 		return 0;
 
 	case TIOCGSOFTCAR:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,0,0) && defined (VERIFY_WRITE)
 		rc = access_ok(VERIFY_WRITE, (void *) arg, sizeof(long));
+#else
+		rc = access_ok((void *) arg, sizeof(long));
+#endif
 		if (rc == 0)
 			return -EFAULT;
 		put_user(C_CLOCAL(tty) ? 1 : 0, (unsigned long *) arg);
 		return 0;
 
@@ -3445,12 +3453,16 @@
 			 (arg ? CLOCAL : 0));
 #endif
 		return 0;
 
 	case TIOCMGET:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,0,0) && defined (VERIFY_WRITE)
 		rc = access_ok(VERIFY_WRITE, (void *) arg,
 				 sizeof(unsigned int));
+#else
+		rc = access_ok((void *) arg, sizeof(unsigned int));
+#endif
 		if (rc == 0)
 			return -EFAULT;
 		return get_modem_info(ch, (unsigned int *) arg);
 
 	case TIOCMBIS:
@@ -3729,11 +3741,15 @@
 			ch->ch_xxoff = dflow.stopc;
 		}
 		break;
 
 	case DIGI_GETCUSTOMBAUD:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,0,0) && defined (VERIFY_WRITE)
 		rc = access_ok(VERIFY_WRITE, (void *) arg, sizeof(int));
+#else
+		rc = access_ok((void *) arg, sizeof(int));
+#endif
 		if (rc == 0)
 			return -EFAULT;
 		put_user(ch->ch_custom_speed, (unsigned int *) arg);
 		break;
 
