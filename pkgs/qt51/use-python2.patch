--- qt-everywhere-opensource-src-5.0.0/qtjsbackend/src/v8/v8.pri~	2013-01-11 06:50:55.241495644 +0000
+++ qt-everywhere-opensource-src-5.0.0/qtjsbackend/src/v8/v8.pri	2013-01-11 06:51:29.987894356 +0000
@@ -303,7 +303,7 @@
 V8_EXPERIMENTAL_LIBRARY_FILES = \
     $$V8SRC/proxy.js \
 
-v8_js2c.commands = python $$V8DIR/tools/js2c.py $$V8_GENERATED_SOURCES_DIR/libraries.cpp CORE off
+v8_js2c.commands = python2 $$V8DIR/tools/js2c.py $$V8_GENERATED_SOURCES_DIR/libraries.cpp CORE off
 v8_js2c.commands += $$V8SRC/macros.py ${QMAKE_FILE_IN}
 v8_js2c.output = $$V8_GENERATED_SOURCES_DIR/libraries.cpp
 v8_js2c.input = V8_LIBRARY_FILES
@@ -314,7 +314,7 @@
 v8_js2c.name = generating[v8] ${QMAKE_FILE_IN}
 silent:v8_js2c.commands = @echo generating[v8] ${QMAKE_FILE_IN} && $$v8_js2c.commands
 
-v8_js2c_experimental.commands = python $$V8DIR/tools/js2c.py $$V8_GENERATED_SOURCES_DIR/experimental-libraries.cpp EXPERIMENTAL off
+v8_js2c_experimental.commands = python2 $$V8DIR/tools/js2c.py $$V8_GENERATED_SOURCES_DIR/experimental-libraries.cpp EXPERIMENTAL off
 v8_js2c_experimental.commands += $$V8SRC/macros.py ${QMAKE_FILE_IN}
 v8_js2c_experimental.output = $$V8_GENERATED_SOURCES_DIR/experimental-libraries.cpp
 v8_js2c_experimental.input = V8_EXPERIMENTAL_LIBRARY_FILES
--- qt-everywhere-opensource-src-5.0.0/qtwebkit/Source/JavaScriptCore/DerivedSources.pri~        2013-01-09 11:29:16.452266719 +0000
+++ qt-everywhere-opensource-src-5.0.0/qtwebkit/Source/JavaScriptCore/DerivedSources.pri 2013-01-09 11:30:18.188538725 +0000
@@ -85,14 +85,14 @@
 retgen.output = RegExpJitTables.h
 retgen.script = $$PWD/create_regex_tables
 retgen.input = retgen.script
-retgen.commands = python $$retgen.script > ${QMAKE_FILE_OUT}
+retgen.commands = python2 $$retgen.script > ${QMAKE_FILE_OUT}
 GENERATORS += retgen
 
 #GENERATOR: "KeywordLookup.h": decision tree used by the lexer
 klgen.output = KeywordLookup.h
 klgen.script = $$PWD/KeywordLookupGenerator.py
 klgen.input = KEYWORDLUT_FILES
-klgen.commands = python $$klgen.script ${QMAKE_FILE_NAME} > ${QMAKE_FILE_OUT}
+klgen.commands = python2 $$klgen.script ${QMAKE_FILE_NAME} > ${QMAKE_FILE_OUT}
 GENERATORS += klgen
 
 EXTRACTOR_BINARY = LLIntOffsetsExtractor$$BIN_EXTENSION
@@ -117,7 +117,7 @@
     disassembler.input = DISASSEMBLER_FILES
     disassembler.script = $$PWD/disassembler/udis86/itab.py
     disassembler.depends = $$DISASSEMBLER_DEPENDENCY
-    disassembler.commands = python $$disassembler.script ${QMAKE_FILE_NAME} --outputDir ${QMAKE_FUNC_FILE_OUT_PATH}
+    disassembler.commands = python2 $$disassembler.script ${QMAKE_FILE_NAME} --outputDir ${QMAKE_FUNC_FILE_OUT_PATH}
     disassembler.CONFIG += no_link
     GENERATORS += disassembler
 }
--- qt-everywhere-opensource-src-5.0.0/qtwebkit/Source/WebCore/DerivedSources.pri~       2013-01-09 11:46:01.165612894 +0000
+++ qt-everywhere-opensource-src-5.0.0/qtwebkit/Source/WebCore/DerivedSources.pri        2013-01-09 11:46:27.465404725 +0000
@@ -779,7 +779,7 @@
 inspectorValidate.output = InspectorProtocolVersion.h
 inspectorValidate.input = INSPECTOR_JSON
 inspectorValidate.script = $$PWD/inspector/generate-inspector-protocol-version
-inspectorValidate.commands = python $$inspectorValidate.script -o ${QMAKE_FILE_OUT} ${QMAKE_FILE_IN}
+inspectorValidate.commands = python2 $$inspectorValidate.script -o ${QMAKE_FILE_OUT} ${QMAKE_FILE_IN}
 inspectorValidate.depends = $$PWD/inspector/generate-inspector-protocol-version
 inspectorValidate.add_output_to_sources = false
 GENERATORS += inspectorValidate
@@ -787,7 +787,7 @@
 inspectorJSON.output = InspectorFrontend.cpp InspectorBackendDispatcher.cpp InspectorTypeBuilder.cpp
 inspectorJSON.input = INSPECTOR_JSON
 inspectorJSON.script = $$PWD/inspector/CodeGeneratorInspector.py
-inspectorJSON.commands = python $$inspectorJSON.script $$PWD/inspector/Inspector.json --output_h_dir ${QMAKE_FUNC_FILE_OUT_PATH} --output_cpp_dir ${QMAKE_FUNC_FILE_OUT_PATH}
+inspectorJSON.commands = python2 $$inspectorJSON.script $$PWD/inspector/Inspector.json --output_h_dir ${QMAKE_FUNC_FILE_OUT_PATH} --output_cpp_dir ${QMAKE_FUNC_FILE_OUT_PATH}
 inspectorJSON.depends = $$inspectorJSON.script
 GENERATORS += inspectorJSON
 
@@ -908,7 +908,7 @@
 entities.output = HTMLEntityTable.cpp
 entities.input = HTML_ENTITIES
 entities.script = $$PWD/html/parser/create-html-entity-table
-entities.commands = python $$entities.script -o ${QMAKE_FILE_OUT} $$HTML_ENTITIES
+entities.commands = python2 $$entities.script -o ${QMAKE_FILE_OUT} $$HTML_ENTITIES
 entities.clean = ${QMAKE_FILE_OUT}
 entities.depends = $$PWD/html/parser/create-html-entity-table
 GENERATORS += entities
--- qt-everywhere-opensource-src-5.0.1/qtwebkit/Source/WebKit2/DerivedSources.pri~	2013-02-10 13:48:49.800319915 +0000
+++ qt-everywhere-opensource-src-5.0.1/qtwebkit/Source/WebKit2/DerivedSources.pri	2013-02-10 13:49:09.966867900 +0000
@@ -120,14 +120,14 @@
     $$PWD/Scripts/webkit2/model.py \
     $$PWD/Scripts/webkit2/parser.py
 
-message_header_generator.commands = $${PYTHON} $${SOURCE_DIR}/WebKit2/Scripts/generate-messages-header.py ${QMAKE_FILE_IN} > ${QMAKE_FILE_OUT}
+message_header_generator.commands = python2 $${SOURCE_DIR}/WebKit2/Scripts/generate-messages-header.py ${QMAKE_FILE_IN} > ${QMAKE_FILE_OUT}
 message_header_generator.input = MESSAGE_RECEIVERS
 message_header_generator.depends = $$SCRIPTS
 message_header_generator.output_function = message_header_generator_output
 message_header_generator.add_output_to_sources = false
 GENERATORS += message_header_generator
 
-message_receiver_generator.commands = $${PYTHON} $${SOURCE_DIR}/WebKit2/Scripts/generate-message-receiver.py  ${QMAKE_FILE_IN} > ${QMAKE_FILE_OUT}
+message_receiver_generator.commands = python2 $${SOURCE_DIR}/WebKit2/Scripts/generate-message-receiver.py  ${QMAKE_FILE_IN} > ${QMAKE_FILE_OUT}
 message_receiver_generator.input = MESSAGE_RECEIVERS
 message_receiver_generator.depends = $$SCRIPTS
 message_receiver_generator.output_function = message_receiver_generator_output
--- qt-everywhere-opensource-src-5.0.2/qtwebkit/Tools/qmake/mkspecs/features/configure.prf~	2013-04-11 08:05:15.149214600 +0000
+++ qt-everywhere-opensource-src-5.0.2/qtwebkit/Tools/qmake/mkspecs/features/configure.prf	2013-04-11 08:05:28.829105110 +0000
@@ -116,7 +116,7 @@
     production_build:blackberry {
         addReasonForSkippingBuild("Build not supported on BB10 yet.")
     }
-    requiredPrograms = gperf python perl bison ruby flex
+    requiredPrograms = gperf python2 perl bison ruby flex
     for(program, requiredPrograms): \
         !programExistsInPath($$program): \
             addReasonForSkippingBuild("Missing $$program from PATH")
--- qt-everywhere-opensource-src-5.1.0/qtjsbackend/src/3rdparty/v8/src/d8.gyp.old      2013-07-03 19:22:34.536705691 +0000
+++ qt-everywhere-opensource-src-5.1.0/qtjsbackend/src/3rdparty/v8/src/d8.gyp  2013-07-03 19:22:25.606770334 +0000
@@ -99,7 +99,7 @@
             '<(SHARED_INTERMEDIATE_DIR)/d8-js.cc',
           ],
           'action': [
-            'python',
+            'python2',
             '../tools/js2c.py',
             '<@(_outputs)',
             'D8',
