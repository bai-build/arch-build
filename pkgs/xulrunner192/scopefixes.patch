--- xpcom/glue/nsTPtrArray.h.orig	2012-12-30 21:20:47.000000000 -0600
+++ xpcom/glue/nsTPtrArray.h	2012-12-30 21:20:33.000000000 -0600
@@ -64,7 +64,7 @@
 
     // Initialize this array and pre-allocate some number of elements.
     explicit nsTPtrArray(size_type capacity) {
-      SetCapacity(capacity);
+      this->SetCapacity(capacity);
     }
     
     // The array's copy-constructor performs a 'deep' copy of the given array.


--- xpcom/base/nsAutoRef.h.orig	2012-12-30 20:32:30.000000000 -0600
+++ xpcom/base/nsAutoRef.h	2012-12-30 20:33:39.000000000 -0600
@@ -323,7 +323,7 @@
     void SafeAddRef()
     {
         if (this->HaveResource())
-            AddRef(this->get());
+            this->AddRef(this->get());
     }
 };
 
@@ -690,7 +690,7 @@
     void SafeRelease()
     {
         if (this->HaveResource())
-            Release(this->get());
+            this->Release(this->get());
     }
 };


--- ipc/chromium/src/base/task.h.orig	2012-12-30 20:19:40.000000000 -0600
+++ ipc/chromium/src/base/task.h	2012-12-30 20:19:47.000000000 -0600
@@ -296,7 +296,7 @@
  public:
   RunnableMethod(T* obj, Method meth, const Params& params)
       : obj_(obj), meth_(meth), params_(params) {
-    RetainCallee(obj_);
+    this->RetainCallee(obj_);
   }
   ~RunnableMethod() {
     ReleaseCallee();

--- xpcom/glue/nsBaseHashtable.h	2005-09-27 12:44:20.000000000 -0300
+++ xpcom/glue/nsBaseHashtable.h	2012-07-02 07:27:03.872079682 -0300
@@ -123,7 +123,7 @@ public:
    */
   PRBool Get(KeyType aKey, UserDataType* pData) const
   {
-    EntryType* ent = GetEntry(aKey);
+    EntryType* ent = this->GetEntry(aKey);
 
     if (!ent)
       return PR_FALSE;
@@ -142,7 +142,7 @@ public:
    */
   PRBool Put(KeyType aKey, UserDataType aData)
   {
-    EntryType* ent = PutEntry(aKey);
+    EntryType* ent = this->PutEntry(aKey);
 
     if (!ent)
       return PR_FALSE;
@@ -156,7 +156,7 @@ public:
    * remove the data for the associated key
    * @param aKey the key to remove from the hashtable
    */
-  void Remove(KeyType aKey) { RemoveEntry(aKey); }
+  void Remove(KeyType aKey) { this->RemoveEntry(aKey); }
 
   /**
    * function type provided by the application for enumeration.
--- xpcom/glue/nsClassHashtable.h	2005-08-11 16:42:37.000000000 -0300
+++ xpcom/glue/nsClassHashtable.h	2012-07-02 07:27:24.649081115 -0300
@@ -98,7 +98,7 @@ PRBool
 nsClassHashtable<KeyClass,T>::Get(KeyType aKey, T** retVal) const
 {
   typename nsBaseHashtable<KeyClass,nsAutoPtr<T>,T*>::EntryType* ent =
-    GetEntry(aKey);
+    this->GetEntry(aKey);
 
   if (ent)
   {
@@ -126,7 +126,7 @@ nsClassHashtableMT<KeyClass,T>::Get(KeyT
   PR_Lock(this->mLock);
 
   typename nsBaseHashtableMT<KeyClass,nsAutoPtr<T>,T*>::EntryType* ent =
-    GetEntry(aKey);
+    this->GetEntry(aKey);
 
   if (ent)
   {
--- xpcom/glue/nsInterfaceHashtable.h	2005-08-11 16:42:48.000000000 -0300
+++ xpcom/glue/nsInterfaceHashtable.h	2012-07-02 07:26:54.023079003 -0300
@@ -111,7 +111,7 @@ nsInterfaceHashtable<KeyClass,Interface>
   (KeyType aKey, UserDataType* pInterface) const
 {
   typename nsBaseHashtable<KeyClass, nsCOMPtr<Interface>, Interface*>::EntryType* ent =
-    GetEntry(aKey);
+    this->GetEntry(aKey);
 
   if (ent)
   {
@@ -139,7 +139,7 @@ nsInterfaceHashtable<KeyClass,Interface>
   (KeyType aKey, PRBool* aFound) const
 {
   typename nsBaseHashtable<KeyClass, nsCOMPtr<Interface>, Interface*>::EntryType* ent =
-    GetEntry(aKey);
+    this->GetEntry(aKey);
 
   if (ent)
   {
@@ -167,7 +167,7 @@ nsInterfaceHashtableMT<KeyClass,Interfac
   PR_Lock(this->mLock);
 
   typename nsBaseHashtableMT<KeyClass, nsCOMPtr<Interface>, Interface*>::EntryType* ent =
-    GetEntry(aKey);
+    this->GetEntry(aKey);
 
   if (ent)
   {
--- xpcom/glue/nsRefPtrHashtable.h	2005-08-11 16:42:51.000000000 -0300
+++ xpcom/glue/nsRefPtrHashtable.h	2012-07-02 07:27:04.145079700 -0300
@@ -112,7 +112,7 @@ nsRefPtrHashtable<KeyClass,RefPtr>::Get
   (KeyType aKey, UserDataType* pRefPtr) const
 {
   typename nsBaseHashtable<KeyClass, nsRefPtr<RefPtr>, RefPtr*>::EntryType* ent =
-    GetEntry(aKey);
+    this->GetEntry(aKey);
 
   if (ent)
   {
@@ -140,7 +140,7 @@ nsRefPtrHashtable<KeyClass,RefPtr>::GetW
   (KeyType aKey, PRBool* aFound) const
 {
   typename nsBaseHashtable<KeyClass, nsRefPtr<RefPtr>, RefPtr*>::EntryType* ent =
-    GetEntry(aKey);
+    this->GetEntry(aKey);
 
   if (ent)
   {
@@ -168,7 +168,7 @@ nsRefPtrHashtableMT<KeyClass,RefPtr>::Ge
   PR_Lock(this->mLock);
 
   typename nsBaseHashtableMT<KeyClass, nsRefPtr<RefPtr>, RefPtr*>::EntryType* ent =
-    GetEntry(aKey);
+    this->GetEntry(aKey);
 
   if (ent)
   {
