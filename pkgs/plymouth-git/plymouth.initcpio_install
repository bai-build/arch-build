#!/bin/bash
# /etc/initcpio/install/plymouth â€” mkinitcpio hook for plymouth

build() {
	local DATADIR PLYMOUTH_LOGO_FILE PLYMOUTH_THEME_NAME PLYMOUTH_THEME_DIR PLYMOUTH_IMAGE_DIR PLYMOUTH_PLUGIN_PATH PLYMOUTH_MODULE_NAME FONT X11_DIRECTORY
	
	add_dir /dev/pts
	add_dir /usr/share/plymouth/themes
	add_dir /run/plymouth

	DATADIR="/usr/share/plymouth"
	PLYMOUTH_LOGO_FILE="${DATADIR}/arch-logo.png"
	PLYMOUTH_THEME_NAME="$(/usr/bin/plymouth-set-default-theme)"
	PLYMOUTH_THEME_DIR="${DATADIR}/themes/${PLYMOUTH_THEME_NAME}"
	PLYMOUTH_IMAGE_DIR=$(grep "ImageDir *= *" ${PLYMOUTH_THEME_DIR}/${PLYMOUTH_THEME_NAME}.plymouth | sed 's/ImageDir *= *//')
	PLYMOUTH_PLUGIN_PATH="$(plymouth --get-splash-plugin-path)"
	PLYMOUTH_MODULE_NAME="$(grep "ModuleName *= *" ${PLYMOUTH_THEME_DIR}/${PLYMOUTH_THEME_NAME}.plymouth | sed 's/ModuleName *= *//')"
	FONT="$(fc-match -f %{file})"
	X11_DIRECTORY="/usr/share/X11"

	add_binary /usr/bin/plymouthd
	add_binary /usr/bin/plymouth
	add_binary /usr/lib/plymouth/plymouthd-fd-escrow

	add_file ${DATADIR}/themes/text/text.plymouth
	add_binary ${PLYMOUTH_PLUGIN_PATH}/text.so
	add_file ${DATADIR}/themes/details/details.plymouth
	add_binary ${PLYMOUTH_PLUGIN_PATH}/details.so

	add_file "${PLYMOUTH_LOGO_FILE}"
	add_file /etc/os-release
	add_file /etc/plymouth/plymouthd.conf
	add_file ${DATADIR}/plymouthd.defaults
	
	add_binary ${PLYMOUTH_PLUGIN_PATH}/label-freetype.so
	add_binary ${PLYMOUTH_PLUGIN_PATH}/label-pango.so
	add_file "/etc/fonts/fonts.conf"
	add_file "${FONT}"
	add_symlink "/usr/share/fonts/Plymouth.ttf" "${FONT}"
	add_file "/usr/share/fonts/cantarell/Cantarell-VF.otf"
	add_symlink "/usr/share/fonts/cantarell/Cantarell-Thin.otf" "/usr/share/fonts/cantarell/Cantarell-VF.otf"
	add_symlink "/usr/share/fonts/cantarell/Cantarell-Regular.otf" "/usr/share/fonts/cantarell/Cantarell-VF.otf"
	add_file "/usr/share/fonts/TTF/DejaVuSans.ttf"
	if [ -f "/etc/fonts/conf.d/60-latin.conf" ]; then
	  add_file "/etc/fonts/conf.d/60-latin.conf"
	fi

	if [ ! -f ${PLYMOUTH_PLUGIN_PATH}/${PLYMOUTH_MODULE_NAME}.so ]; then
		echo "The default plymouth plugin (${PLYMOUTH_MODULE_NAME}) doesn't exist" > /dev/stderr
		exit 1
	fi

	add_binary ${PLYMOUTH_PLUGIN_PATH}/${PLYMOUTH_MODULE_NAME}.so

	add_binary ${PLYMOUTH_PLUGIN_PATH}/renderers/drm.so
	add_binary ${PLYMOUTH_PLUGIN_PATH}/renderers/frame-buffer.so

	if [ -d ${PLYMOUTH_THEME_DIR} ]; then
		add_full_dir ${PLYMOUTH_THEME_DIR}
	fi

	if [ "${PLYMOUTH_IMAGE_DIR}" != "${PLYMOUTH_THEME_DIR}" -a -d ${PLYMOUTH_IMAGE_DIR} ]; then
		add_full_dir ${PLYMOUTH_IMAGE_DIR}
	fi

	add_file /usr/lib/udev/rules.d/70-uaccess.rules
	add_file /usr/lib/udev/rules.d/71-seat.rules
	
	# Install xkb info
	add_file ${X11_DIRECTORY}/xkb/compat/accessx
	add_file ${X11_DIRECTORY}/xkb/compat/basic
	add_file ${X11_DIRECTORY}/xkb/compat/caps
	add_file ${X11_DIRECTORY}/xkb/compat/complete
	add_file ${X11_DIRECTORY}/xkb/compat/iso9995
	add_file ${X11_DIRECTORY}/xkb/compat/ledcaps
	add_file ${X11_DIRECTORY}/xkb/compat/lednum
	add_file ${X11_DIRECTORY}/xkb/compat/ledscroll
	add_file ${X11_DIRECTORY}/xkb/compat/level5
	add_file ${X11_DIRECTORY}/xkb/compat/misc
	add_file ${X11_DIRECTORY}/xkb/compat/mousekeys
	add_file ${X11_DIRECTORY}/xkb/compat/xfree86
	add_file ${X11_DIRECTORY}/xkb/keycodes/aliases
	add_file ${X11_DIRECTORY}/xkb/keycodes/evdev
	add_file ${X11_DIRECTORY}/xkb/rules/evdev
	find ${X11_DIRECTORY}/xkb/symbols -maxdepth 1 ! -type d | while read file; do
	    add_file $file
	done
	add_file ${X11_DIRECTORY}/xkb/types/basic
	add_file ${X11_DIRECTORY}/xkb/types/complete
	add_file ${X11_DIRECTORY}/xkb/types/extra
	add_file ${X11_DIRECTORY}/xkb/types/iso9995
	add_file ${X11_DIRECTORY}/xkb/types/level5
	add_file ${X11_DIRECTORY}/xkb/types/mousekeys
	add_file ${X11_DIRECTORY}/xkb/types/numpad
	add_file ${X11_DIRECTORY}/xkb/types/pc

	# In the off chance the user uses their compose key when
	# typing their password, install compose sequences
	add_file ${X11_DIRECTORY}/locale/compose.dir
	grep UTF-8/Compose: ${X11_DIRECTORY}/locale/compose.dir | awk -F: '{ print $1 }' | sort -u | xargs dirname | while read DIR; do
	    find ${X11_DIRECTORY}/locale/$DIR -maxdepth 1 ! -type d | while read file; do
	        add_file $file
	     done
	done

	# suppress a warning in glib (which the label control uses)
	# about uid 0 by building a dummy NSS stack (LP #649917)
	add_file /etc/passwd
	add_file /etc/nsswitch.conf
	add_binary "$(readlink -e /lib/libnss_files.so.2)"
	add_file /lib/libnss_files.so.2

	add_runscript
}

help() {
	cat <<HELPEOF
This hook includes plymouth in the initramfs image.
HELPEOF
}
