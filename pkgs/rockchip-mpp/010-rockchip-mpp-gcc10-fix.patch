--- a/mpp/codec/dec/h264/h264d_global.h
+++ b/mpp/codec/dec/h264/h264d_global.h
@@ -144,7 +144,7 @@ if ((val) < 0) {\
 enum {
     H264ScalingList4x4Length = 16,
     H264ScalingList8x8Length = 64,
-} ScalingListLength;
+} extern ScalingListLength;
 
 typedef enum {
     YUV400 = 0,     //!< Monochrome
--- a/mpp/hal/common/h264/hal_h264e_com.h
+++ b/mpp/hal/common/h264/hal_h264e_com.h
@@ -454,9 +454,9 @@ MPP_RET h264e_set_sps(H264eHalContext *ctx, H264eSps *sps);
 MPP_RET h264e_set_pps(H264eHalContext *ctx, H264ePps *pps, H264eSps *sps);
 void h264e_set_param(H264eHalParam *p, RK_S32 hw_type);
 
-const RK_U8 * const h264e_cqm_jvt[8];
-const RK_U8 h264e_zigzag_scan4[2][16];
-const RK_U8 h264e_zigzag_scan8[2][64];
+extern const RK_U8 * const h264e_cqm_jvt[8];
+extern const RK_U8 h264e_zigzag_scan4[2][16];
+extern const RK_U8 h264e_zigzag_scan8[2][64];
 void h264e_rkv_set_format(H264eHwCfg *hw_cfg, MppEncPrepCfg *prep_cfg);
 void h264e_vpu_set_format(H264eHwCfg *hw_cfg, MppEncPrepCfg *prep_cfg);
 void h264e_sei_pack2str(char *str, H264eHalContext *ctx, RcSyntax *rc_syn);
