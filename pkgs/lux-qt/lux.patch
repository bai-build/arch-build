diff '--color=auto' -Nura lux-qt.orig/src/lux-cli.cpp lux-qt.new/src/lux-cli.cpp
--- lux-qt.orig/src/lux-cli.cpp	2018-08-23 06:34:18.017983000 -0400
+++ lux-qt.new/src/lux-cli.cpp	2018-08-23 09:42:30.541463783 -0400
@@ -104,7 +104,7 @@
     // Connect to localhost
     bool fUseSSL = GetBoolArg("-rpcssl", false);
     asio::io_service io_service;
-    ssl::context context(io_service, ssl::context::sslv23);
+    ssl::context context(ssl::context::sslv23);
     context.set_options(ssl::context::no_sslv2 | ssl::context::no_sslv3);
     asio::ssl::stream<asio::ip::tcp::socket> sslStream(io_service, context);
     SSLIOStreamDevice<asio::ip::tcp> d(sslStream, fUseSSL);
diff '--color=auto' -Nura lux-qt.orig/src/qt/hexaddressconverter.cpp lux-qt.new/src/qt/hexaddressconverter.cpp
--- lux-qt.orig/src/qt/hexaddressconverter.cpp	2018-08-23 06:34:18.227986000 -0400
+++ lux-qt.new/src/qt/hexaddressconverter.cpp	2018-08-23 09:41:31.343810261 -0400
@@ -3,6 +3,7 @@
 #include "base58.h"
 #include "uint256.h"
 #include "utilstrencodings.h"
+#include "qregularexpression.h"
 
 #include <iostream>
 #include <QClipboard>
diff '--color=auto' -Nura lux-qt.orig/src/rpcserver.cpp lux-qt.new/src/rpcserver.cpp
--- lux-qt.orig/src/rpcserver.cpp	2018-08-23 06:34:18.581324000 -0400
+++ lux-qt.new/src/rpcserver.cpp	2018-08-23 09:39:39.251936936 -0400
@@ -519,8 +519,8 @@
 void ServiceConnection(AcceptedConnection* conn);
 
 //! Forward declaration required for RPCListen
-template <typename Protocol, typename SocketAcceptorService>
-static void RPCAcceptHandler(boost::shared_ptr<basic_socket_acceptor<Protocol, SocketAcceptorService> > acceptor,
+template <typename Protocol>
+static void RPCAcceptHandler(boost::shared_ptr<basic_socket_acceptor<Protocol> > acceptor,
     ssl::context& context,
     bool fUseSSL,
     boost::shared_ptr<AcceptedConnection> conn,
@@ -529,8 +529,8 @@
 /**
  * Sets up I/O resources to accept and handle a new connection.
  */
-template <typename Protocol, typename SocketAcceptorService>
-static void RPCListen(boost::shared_ptr<basic_socket_acceptor<Protocol, SocketAcceptorService> > acceptor,
+template <typename Protocol>
+static void RPCListen(boost::shared_ptr<basic_socket_acceptor<Protocol> > acceptor,
     ssl::context& context,
     const bool fUseSSL)
 {
@@ -540,7 +540,7 @@
     acceptor->async_accept(
         conn->sslStream.lowest_layer(),
         conn->peer,
-        boost::bind(&RPCAcceptHandler<Protocol, SocketAcceptorService>,
+        boost::bind(&RPCAcceptHandler<Protocol>,
             acceptor,
             boost::ref(context),
             fUseSSL,
@@ -552,8 +552,8 @@
 /**
  * Accept and handle incoming connection.
  */
-template <typename Protocol, typename SocketAcceptorService>
-static void RPCAcceptHandler(boost::shared_ptr<basic_socket_acceptor<Protocol, SocketAcceptorService> > acceptor,
+template <typename Protocol>
+static void RPCAcceptHandler(boost::shared_ptr<basic_socket_acceptor<Protocol> > acceptor,
     ssl::context& context,
     const bool fUseSSL,
     boost::shared_ptr<AcceptedConnection> conn,
@@ -629,7 +629,7 @@
 
     assert(rpc_io_service == NULL);
     rpc_io_service = new asio::io_service();
-    rpc_ssl_context = new ssl::context(*rpc_io_service, ssl::context::sslv23);
+    rpc_ssl_context = new ssl::context(ssl::context::sslv23);
 
     const bool fUseSSL = GetBoolArg("-rpcssl", false);
 
@@ -651,7 +651,7 @@
             LogPrintf("ThreadRPCServer ERROR: missing server private key file %s\n", pathPKFile.string());
 
         string strCiphers = GetArg("-rpcsslciphers", "TLSv1.2+HIGH:TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!3DES:@STRENGTH");
-        SSL_CTX_set_cipher_list(rpc_ssl_context->impl(), strCiphers.c_str());
+        SSL_CTX_set_cipher_list(rpc_ssl_context->native_handle(), strCiphers.c_str());
     }
 
     std::vector<ip::tcp::endpoint> vEndpoints;
