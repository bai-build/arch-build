diff --git a/CMakeLists.txt b/CMakeLists.txt
index a1134312..064bc623 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -305,12 +305,13 @@ endif()
 
 option(BUILD_SHARED_LIBS "Build shared library" OFF)
 set(XXHASH_BUILD_XXHSUM OFF CACHE BOOL "Build the xxhsum binary")
-add_subdirectory(core/deps/xxHash/cmake_unofficial)
-target_link_libraries(${PROJECT_NAME} PRIVATE xxHash::xxhash)
+find_package(PkgConfig)
+pkg_search_module(xxhash IMPORTED_TARGET libxxhash)
+target_link_libraries(${PROJECT_NAME} PRIVATE PkgConfig::xxhash)
 
 option(BUILD_SHARED_LIBS "Build shared library" OFF)
-add_subdirectory(core/deps/glm)
-target_link_libraries(${PROJECT_NAME} PRIVATE glm::glm)
+find_package(glm)
+target_link_libraries(${PROJECT_NAME} PRIVATE glm)
 
 if(USE_VULKAN)
 	option(BUILD_EXTERNAL "Build external dependencies in /External" OFF)
@@ -319,8 +320,8 @@ if(USE_VULKAN)
 	option(ENABLE_GLSLANG_BINARIES "Builds glslangValidator and spirv-remap" OFF)
 	option(ENABLE_HLSL "Enables HLSL input support" OFF)
 	option(ENABLE_PCH "Enables Precompiled header" OFF)
-	add_subdirectory(core/deps/glslang EXCLUDE_FROM_ALL)
-	target_link_libraries(${PROJECT_NAME} PRIVATE SPIRV)
+	find_package(Vulkan COMPONENTS glslang)
+	target_link_libraries(${PROJECT_NAME} PRIVATE Vulkan::glslang-spirv)
 endif()
 
 if(NOT LIBRETRO)
@@ -361,13 +362,13 @@ if(NOT LIBRETRO)
 			target_link_libraries(${PROJECT_NAME} PRIVATE CURL::libcurl)
 		endif()
 	endif()
-
+endif()
 	find_package(ZLIB)
 	if(TARGET ZLIB::ZLIB AND NOT ANDROID AND (NOT WIN32 OR WINDOWS_STORE))
 		set(WITH_SYSTEM_ZLIB ON CACHE BOOL "Use system provided zlib library")
 		target_link_libraries(${PROJECT_NAME} PRIVATE ZLIB::ZLIB)
 	endif()
-
+if(FALSE)
 	find_package(Lua)
 	if(NOT APPLE AND LUA_FOUND)
 		target_compile_definitions(${PROJECT_NAME} PRIVATE USE_LUA)
@@ -377,9 +378,9 @@ if(NOT LIBRETRO)
 	endif()
 endif()
 
-add_subdirectory(core/deps/libchdr EXCLUDE_FROM_ALL)
-target_link_libraries(${PROJECT_NAME} PRIVATE chdr-static)
-target_include_directories(${PROJECT_NAME} PRIVATE core/deps/libchdr/include)
+find_package(PkgConfig)
+pkg_search_module(chdr IMPORTED_TARGET libchdr)
+target_link_libraries(${PROJECT_NAME} PRIVATE PkgConfig::chdr)
 
 if(NOT WITH_SYSTEM_ZLIB)
 	target_include_directories(${PROJECT_NAME} PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}/core/deps/libchdr/deps/zlib-1.2.11")
@@ -418,25 +419,24 @@ if(PKG_CONFIG_FOUND AND NOT ANDROID AND NOT APPLE AND NOT LIBRETRO)
 		target_compile_definitions(${PROJECT_NAME} PRIVATE USE_PULSEAUDIO)
 		target_link_libraries(${PROJECT_NAME} PRIVATE PkgConfig::LIBPULSE)
 	endif()
-
+endif()
 	if(USE_HOST_LIBZIP)
 		pkg_check_modules(LIBZIP IMPORTED_TARGET libzip)
 		if(LIBZIP_FOUND)
 			target_link_libraries(${PROJECT_NAME} PRIVATE PkgConfig::LIBZIP)
 		endif()
 	endif()
-
+if(FALSE)
 	if(ENABLE_OPROFILE)
 		target_compile_definitions(${PROJECT_NAME} PRIVATE DYNA_OPROF)
 		target_link_libraries(${PROJECT_NAME} PRIVATE opagent)
 	endif()
-
+endif()
 	find_package(MiniUPnPc)
 	if(MINIUPNP_FOUND)
 		target_include_directories(${PROJECT_NAME} PRIVATE ${MINIUPNP_INCLUDE_DIRS})
 		target_link_libraries(${PROJECT_NAME} PRIVATE ${MINIUPNP_LIBRARIES})
 	endif()
-endif()
 
 if(NINTENDO_SWITCH AND USE_GLES)
 	pkg_check_modules(GLESV2 IMPORTED_TARGET glesv2)
@@ -1100,7 +1100,7 @@ if(USE_VULKAN)
 		target_compile_definitions(${PROJECT_NAME} PUBLIC VK_USE_PLATFORM_MACOS_MVK)
 	endif()
 
-	add_subdirectory(core/deps/Vulkan-Headers)
+	find_package(Vulkan)
 	target_link_libraries(${PROJECT_NAME} PRIVATE Vulkan::Headers)
 
 	add_library(VulkanMemoryAllocator INTERFACE)
@@ -1306,7 +1306,7 @@ if(CMAKE_SYSTEM_PROCESSOR MATCHES "^(aarch64.*|AARCH64.*|arm64.*)" OR CMAKE_OSX_
 	set(KNOWN_ARCHITECTURE_DETECTED ON)
 endif()
 if(CMAKE_SYSTEM_PROCESSOR MATCHES "i686.*|i386.*|x86.*|amd64.*|x86_64.*|AMD64.*" OR CMAKE_OSX_ARCHITECTURES MATCHES "x86_64")
-	add_subdirectory(core/deps/xbyak EXCLUDE_FROM_ALL)
+	find_package(xbyak)
 	target_link_libraries(${PROJECT_NAME} PRIVATE xbyak::xbyak)
 	if(CMAKE_SIZEOF_VOID_P EQUAL 4)
 		target_sources(${PROJECT_NAME} PRIVATE
diff --git a/core/rend/vulkan/compiler.cpp b/core/rend/vulkan/compiler.cpp
index 8c017b32..986676b5 100644
--- a/core/rend/vulkan/compiler.cpp
+++ b/core/rend/vulkan/compiler.cpp
@@ -19,7 +19,7 @@
     along with Flycast.  If not, see <https://www.gnu.org/licenses/>.
 */
 #include "compiler.h"
-#include "SPIRV/GlslangToSpv.h"
+#include <glslang/SPIRV/GlslangToSpv.h>
 #include "vulkan_context.h"
 
 static const TBuiltInResource DefaultTBuiltInResource = {
diff --git a/core/rend/vulkan/shaders.h b/core/rend/vulkan/shaders.h
index f58ac0d4..bdbc98ad 100644
--- a/core/rend/vulkan/shaders.h
+++ b/core/rend/vulkan/shaders.h
@@ -20,7 +20,7 @@
 */
 #pragma once
 #include "vulkan.h"
-#include "SPIRV/GlslangToSpv.h"
+#include <glslang/SPIRV/GlslangToSpv.h>
 
 #include <glm/glm.hpp>
 #include <map>
