diff --git a/README b/README
index f679d73..798a26f 100644
--- a/README
+++ b/README
@@ -1,3 +1,12 @@
+NOTE
+-----------------
+
+This repository is a copy of the source code downloadable as tarball from
+http://eq10q.sourceforge.net/. Since it uses some deprecated functions that seem to be
+removed now (May 2018), the aim of this repo is to make it compile again.
+
+Now here's the original README:
+
 EQ10Q LV2 Plugin
 -----------------
 
diff --git a/gui/widgets/bandctl.cpp b/gui/widgets/bandctl.cpp
index a2ce684..7702582 100644
--- a/gui/widgets/bandctl.cpp
+++ b/gui/widgets/bandctl.cpp
@@ -949,7 +949,7 @@ bool BandCtl::parseBtnString(BandCtl::Button* btn)
   if(str_k.length() > 0)
   {
     val_k = atof(str_k.c_str()) * 1e3;
-    val *= pow10(3.0 - str.length());
+    val *= exp10(3.0 - str.length());
     if(str.length() > 3)
     {
       //throw an error, imposible to match str > 3 with k
@@ -960,7 +960,7 @@ bool BandCtl::parseBtnString(BandCtl::Button* btn)
   }
   if(str_d.length() > 0)
   {
-    val_d = atof(str_d.c_str())/ pow10((double)str_d.length());
+    val_d = atof(str_d.c_str())/ exp10((double)str_d.length());
   }
    
   btn->value = val + val_k + val_d;
diff --git a/gui/widgets/bodeplot.cpp b/gui/widgets/bodeplot.cpp
index 584f87e..0dab144 100644
--- a/gui/widgets/bodeplot.cpp
+++ b/gui/widgets/bodeplot.cpp
@@ -194,14 +194,14 @@ void PlotEQCurve::resetCenterSpan()
 {
   //Compute center and span for the full range spectrum
   double sp = log10(MAX_FREQ/MIN_FREQ);
-  double cn = MIN_FREQ * sqrt(pow10(sp));
+  double cn = MIN_FREQ * sqrt(exp10(sp));
   setCenterSpan(cn, sp);
 }
 
 void PlotEQCurve::setCenterSpan(double center, double span)
 { 
-  m_minFreq = center / sqrt(pow10(span));
-  m_maxFreq = center * sqrt(pow10(span));
+  m_minFreq = center / sqrt(exp10(span));
+  m_maxFreq = center * sqrt(exp10(span));
     
   //Initalize the grid
   const double f_grid[GRID_VERTICAL_LINES] = {20.0, 30.0, 40.0, 50.0, 60.0, 70.0, 80.0, 90.0,
@@ -246,8 +246,8 @@ void PlotEQCurve::setCenter(double center)
 {
   //Limit center to the possible range according the current span
   double sp = log10(m_maxFreq/m_minFreq);
-  double cmin = MIN_FREQ * sqrt(pow10(sp));
-  double cmax = MAX_FREQ / sqrt(pow10(sp));
+  double cmin = MIN_FREQ * sqrt(exp10(sp));
+  double cmax = MAX_FREQ / sqrt(exp10(sp));
   
   double cn = center;
   cn = cn > cmax ? cmax : cn;
@@ -259,7 +259,7 @@ void PlotEQCurve::setSpan(double span)
 {
   //Limit center to the possible range according the current span
   double sp_act = log10(m_maxFreq/m_minFreq);
-  double cn = m_minFreq * sqrt(pow10(sp_act));
+  double cn = m_minFreq * sqrt(exp10(sp_act));
   double smax1 = 2.0*log10(cn/MIN_FREQ);
   double smax2= 2.0*log10(MAX_FREQ/cn);
   double smax = smax1 < smax2 ? smax1 : smax2;
@@ -306,7 +306,7 @@ void PlotEQCurve::recomputeCenterFreq(double xDiff)
   double fmax = MIN_FREQ*pow((MAX_FREQ/MIN_FREQ),((local_x2 + 3.5)/((double)m_zoom_surface_ptr->get_width())));
   
   double sp_act = log10(fmax/fmin);
-  double cn = fmin * sqrt(pow10(sp_act));
+  double cn = fmin * sqrt(exp10(sp_act));
   setCenter(cn);
 }
 
