*** Makefile.am	2013-02-08 20:44:24.000000000 +0100
--- Makefile.am.new	2013-02-08 20:48:11.444533196 +0100
***************
*** 1,22 ****
  AUTOMAKE_OPTIONS = foreign
  
! pd_CFLAGS = -DPD -DINSTALL_PREFIX=\"$(prefix)\"
! pd_LDFLAGS =
  
! pdsend_CFLAGS = 
! pdreceive_CFLAGS = 
  pd_watchdog_CFLAGS = 
  LIBS = 
  INCLUDES = @INCLUDES@
  
  SUFFIXES = .@EXTENSION@ .@SHARED_LIB@
  
! bin_PROGRAMS = pd pdsend pdreceive
! pdsend_SOURCES = u_pdsend.c
! pdreceive_SOURCES = u_pdreceive.c
  pd_watchdog_SOURCES = s_watchdog.c
! pd_LDADD = 
! pd_SOURCES = g_canvas.c g_graph.c g_text.c g_rtext.c g_array.c g_template.c \
  	g_io.c g_scalar.c g_traversal.c g_guiconnect.c g_readwrite.c g_editor.c \
      g_all_guis.c \
      m_pd.c m_class.c m_obj.c m_atom.c m_memory.c m_binbuf.c \
--- 1,22 ----
  AUTOMAKE_OPTIONS = foreign
  
! pdextended_CFLAGS = -DPD -DINSTALL_PREFIX=\"$(prefix)\"
! pdextended_LDFLAGS =
  
! #pdsend_CFLAGS = 
! #pdreceive_CFLAGS = 
  pd_watchdog_CFLAGS = 
  LIBS = 
  INCLUDES = @INCLUDES@
  
  SUFFIXES = .@EXTENSION@ .@SHARED_LIB@
  
! bin_PROGRAMS = pdextended
! #pdsend_SOURCES = u_pdsend.c
! #pdreceive_SOURCES = u_pdreceive.c
  pd_watchdog_SOURCES = s_watchdog.c
! pdextended_LDADD = 
! pdextended_SOURCES = g_canvas.c g_graph.c g_text.c g_rtext.c g_array.c g_template.c \
  	g_io.c g_scalar.c g_traversal.c g_guiconnect.c g_readwrite.c g_editor.c \
      g_all_guis.c \
      m_pd.c m_class.c m_obj.c m_atom.c m_memory.c m_binbuf.c \
***************
*** 34,41 ****
      g_magicglass.c \
      import.c path.c print.c closebang.c initbang.c loadbang.c
  
! pd_includedir = ${includedir}/pdextended
! pd_include_HEADERS = m_pd.h m_imp.h g_canvas.h s_stuff.h g_all_guis.h e_fft.h e_sqrt.h
  # compatibility: m_pd.h also goes into ${includedir}/
  include_HEADERS = m_pd.h
  noinst_HEADERS = g_all_guis.h s_audio_alsa.h s_audio_paring.h s_utf8.h g_magicglass.h scandir.h
--- 34,41 ----
      g_magicglass.c \
      import.c path.c print.c closebang.c initbang.c loadbang.c
  
! pdextended_includedir = ${includedir}/pdextended
! pdextended_include_HEADERS = m_pd.h m_imp.h g_canvas.h s_stuff.h g_all_guis.h e_fft.h e_sqrt.h
  # compatibility: m_pd.h also goes into ${includedir}/
  include_HEADERS = m_pd.h
  noinst_HEADERS = g_all_guis.h s_audio_alsa.h s_audio_paring.h s_utf8.h g_magicglass.h scandir.h
***************
*** 45,52 ****
  
  # configurations per library
  if ALSA
! pd_CFLAGS += -DUSEAPI_ALSA
! pd_SOURCES += s_audio_alsa.c s_audio_alsamm.c s_midi_alsa.c
  endif
  
  if COREAUDIO
--- 45,52 ----
  
  # configurations per library
  if ALSA
! pdextended_CFLAGS += -DUSEAPI_ALSA
! pdextended_SOURCES += s_audio_alsa.c s_audio_alsamm.c s_midi_alsa.c
  endif
  
  if COREAUDIO
***************
*** 55,69 ****
  endif
  
  if FFTW
! pd_SOURCES +=  d_fft_fftw.c d_fftroutine.c
  else
! pd_SOURCES +=  d_fft_mayer.c d_fftroutine.c
  endif
  
  # TODO support Jack xrun
  if JACK
! pd_CFLAGS += -DUSEAPI_JACK -DJACK_XRUN
! pd_SOURCES += s_audio_jack.c
  if MACOSX
  LIBS += -weak_framework Jackmp
  else
--- 55,69 ----
  endif
  
  if FFTW
! pdextended_SOURCES +=  d_fft_fftw.c d_fftroutine.c
  else
! pdextended_SOURCES +=  d_fft_mayer.c d_fftroutine.c
  endif
  
  # TODO support Jack xrun
  if JACK
! pdextended_CFLAGS += -DUSEAPI_JACK -DJACK_XRUN
! pdextended_SOURCES += s_audio_jack.c
  if MACOSX
  LIBS += -weak_framework Jackmp
  else
***************
*** 75,89 ****
  # handle a single MIDI API
  if OSS
  if !WINDOWS
! pd_CFLAGS += -DUSEAPI_OSS
! pd_SOURCES += s_audio_oss.c s_midi_oss.c
  endif
  endif
  
  if PORTAUDIO
! pd_CFLAGS += -DUSEAPI_PORTAUDIO  -I../portaudio/include
! pd_LDADD += ../portaudio/libportaudio.la
! pd_SOURCES += s_audio_pa.c s_audio_paring.c
  endif
  
  # ASIO needs to go after PORTAUDIO in order for it to link properly
--- 75,89 ----
  # handle a single MIDI API
  if OSS
  if !WINDOWS
! pdextended_CFLAGS += -DUSEAPI_OSS
! pdextended_SOURCES += s_audio_oss.c s_midi_oss.c
  endif
  endif
  
  if PORTAUDIO
! pdextended_CFLAGS += -DUSEAPI_PORTAUDIO  -I../portaudio/include
! pdextended_LDADD += ../portaudio/libportaudio.la
! pdextended_SOURCES += s_audio_pa.c s_audio_paring.c
  endif
  
  # ASIO needs to go after PORTAUDIO in order for it to link properly
***************
*** 92,104 ****
  SUBDIRS = ../asio
  # Dummy C++ source to cause C++ linking.
  nodist_EXTRA_pd_SOURCES = dummy.cxx
! pd_LDADD += ../asio/libasio.la
  endif
  
  if PORTMIDI
  INCLUDES += -I../portmidi/pm_common -I../portmidi/porttime
! pd_LDADD += ../portmidi/libportmidi.la
! pd_SOURCES += s_midi_pm.c
  endif
  
  
--- 92,104 ----
  SUBDIRS = ../asio
  # Dummy C++ source to cause C++ linking.
  nodist_EXTRA_pd_SOURCES = dummy.cxx
! pdextended_LDADD += ../asio/libasio.la
  endif
  
  if PORTMIDI
  INCLUDES += -I../portmidi/pm_common -I../portmidi/porttime
! pdextended_LDADD += ../portmidi/libportmidi.la
! pdextended_SOURCES += s_midi_pm.c
  endif
  
  
***************
*** 108,142 ****
  #  (without OS-specific checks)
  # even better would be, to allow Pd to have simply have no MIDI (nor AUDIO)
  if IPHONEOS
! pd_SOURCES += s_midi_dummy.c
  endif
  
  if HURD
! pd_SOURCES += s_midi_dummy.c
  endif
  
  if LINUX 
  libpdbindir = $(pkglibdir)/bin
  libpdbin_DATA = 
! libpdbin_PROGRAMS = pd-watchdog pd
  # this flag has to have a single leading "-" for libtool, even though ld uses
  # --export-dynamic, and libtool sends -Wl,--export-dynamic to ld...
! pd_LDFLAGS += -export-dynamic
  # on Ubuntu/Karmic 9.10, it doesn't seem to find libm, so force it
! pd_LDFLAGS += $(LIBM)
  endif
  
  if MACOSX
  LIBS += -framework Carbon
! pd_CFLAGS += -DMACOSX #kludge, should use auto macro __APPLE__
  bin_SCRIPTS = 
  bin_PROGRAMS += pd-watchdog
  endif
  
  if WINDOWS
  LIBS += -lwsock32 -lwinmm -lole32
! pd_CFLAGS +=  -DUSEAPI_MMIO -DPD_INTERNAL
! pd_SOURCES += s_audio_mmio.c s_midi_mmio.c scandir.c
  bin_SCRIPTS = 
  endif
  
--- 108,142 ----
  #  (without OS-specific checks)
  # even better would be, to allow Pd to have simply have no MIDI (nor AUDIO)
  if IPHONEOS
! pdextended_SOURCES += s_midi_dummy.c
  endif
  
  if HURD
! pdextended_SOURCES += s_midi_dummy.c
  endif
  
  if LINUX 
  libpdbindir = $(pkglibdir)/bin
  libpdbin_DATA = 
! libpdbin_PROGRAMS = pd-watchdog pdextended
  # this flag has to have a single leading "-" for libtool, even though ld uses
  # --export-dynamic, and libtool sends -Wl,--export-dynamic to ld...
! pdextended_LDFLAGS += -export-dynamic
  # on Ubuntu/Karmic 9.10, it doesn't seem to find libm, so force it
! pdextended_LDFLAGS += $(LIBM)
  endif
  
  if MACOSX
  LIBS += -framework Carbon
! pdextended_CFLAGS += -DMACOSX #kludge, should use auto macro __APPLE__
  bin_SCRIPTS = 
  bin_PROGRAMS += pd-watchdog
  endif
  
  if WINDOWS
  LIBS += -lwsock32 -lwinmm -lole32
! pdextended_CFLAGS +=  -DUSEAPI_MMIO -DPD_INTERNAL
! pdextended_SOURCES += s_audio_mmio.c s_midi_mmio.c scandir.c
  bin_SCRIPTS = 
  endif
  
***************
*** 144,150 ****
  # To use SetDllDirectory() in s_loader.c, we need a minium of Windows
  # XP SP1.  WINVER isnt' fine-grained enough for that, so we use the
  # next minor version of Windows, 5.2.  That gives us -DWINVER=0x0502
! pd_CFLAGS += -DWISHAPP='"wish85.exe"' -DWINVER=0x0502
  endif
  
  etags: TAGS
--- 144,150 ----
  # To use SetDllDirectory() in s_loader.c, we need a minium of Windows
  # XP SP1.  WINVER isnt' fine-grained enough for that, so we use the
  # next minor version of Windows, 5.2.  That gives us -DWINVER=0x0502
! pdextended_CFLAGS += -DWISHAPP='"wish85.exe"' -DWINVER=0x0502
  endif
  
  etags: TAGS
