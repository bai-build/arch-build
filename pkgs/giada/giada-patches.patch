diff -Naur giada-0.22.0-src/CMakeLists.txt giada-0.22.0-src-new/CMakeLists.txt
--- giada-0.22.0-src/CMakeLists.txt	2022-06-11 08:07:54.000000000 -0400
+++ giada-0.22.0-src-new/CMakeLists.txt	2022-06-15 22:27:49.696961106 -0400
@@ -252,7 +252,7 @@
 option(WITH_VST2 "Enable VST2 support." OFF)
 option(WITH_VST3 "Enable VST3 support." OFF)
 option(WITH_TESTS "Include the test suite." OFF)
-
+option(WITH_SYSTEM_JSON "Use a system copy of nlohmann_json." OFF)
 if(DEFINED OS_LINUX)
 	option(WITH_ALSA "Enable ALSA support (Linux only)." ON)
 	option(WITH_PULSE "Enable PulseAudio support (Linux only)." ON)
@@ -397,9 +397,18 @@
 
 # nlohmann_json (embedded as git submodule)
 
-set(JSON_Install OFF CACHE INTERNAL "") # No need to install it
-set(JSON_BuildTests OFF CACHE INTERNAL "") # Don't build tests
-add_subdirectory(src/deps/json)
+if (WITH_SYSTEM_JSON)
+
+	find_package(nlohmann_json REQUIRED)
+
+else()
+
+	set(JSON_Install OFF CACHE INTERNAL "") # No need to install it
+	set(JSON_BuildTests OFF CACHE INTERNAL "") # Don't build tests
+	add_subdirectory(src/deps/json)
+
+endif()
+
 list(APPEND LIBRARIES nlohmann_json::nlohmann_json)
 
 # Catch (if tests enabled)
diff -Naur giada-0.22.0-src/src/deps/juce/modules/juce_core/system/juce_StandardHeader.h giada-0.22.0-src-new/src/deps/juce/modules/juce_core/system/juce_StandardHeader.h
--- giada-0.22.0-src/src/deps/juce/modules/juce_core/system/juce_StandardHeader.h	2022-06-11 08:08:49.000000000 -0400
+++ giada-0.22.0-src-new/src/deps/juce/modules/juce_core/system/juce_StandardHeader.h	2022-06-15 23:02:49.231516608 -0400
@@ -63,6 +63,7 @@
 #include <sstream>
 #include <typeindex>
 #include <unordered_set>
+#include <utility>
 #include <vector>
 #include <set>
 
diff -Naur giada-0.22.0-src/src/utils/log.h giada-0.22.0-src-new/src/utils/log.h
--- giada-0.22.0-src/src/utils/log.h	2022-06-11 08:07:54.000000000 -0400
+++ giada-0.22.0-src-new/src/utils/log.h	2022-06-15 22:34:31.585034263 -0400
@@ -80,6 +80,8 @@
 
 	if (mode == LOG_MODE_FILE && stat == true)
 	{
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wformat-security"
 		// Replace any std::string in the arguments by its C-string
 		std::fprintf(f, format, string_to_c_str(std::forward<Args>(args))...);
 #ifdef _WIN32
@@ -88,6 +90,7 @@
 	}
 	else
 		std::printf(format, string_to_c_str(std::forward<Args>(args))...);
+#pragma GCC diagnostic pop
 }
 } // namespace giada::u::log
 
